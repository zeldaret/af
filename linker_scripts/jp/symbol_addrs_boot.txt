// .text

entrypoint = 0x80025C00; // type:func

func_80025C60_jp = 0x80025C60; // type:func
bootproc = 0x80025CC0; // type:func

Main_ThreadEntry = 0x80025DF0; // type:func
Idle_InitVideo = 0x80025E6C; // type:func
Idle_ThreadEntry = 0x80025FD0; // type:func

ViConfig_UpdateVi = 0x800260A0; // type:func
ViConfig_UpdateBlack = 0x800261F4; // type:func

ovlmgr_Malloc = 0x80026240; // type:func
ovlmgr_Free = 0x8002628C; // type:func
ovlmgr_LoadImpl = 0x800262D0; // type:func
ovlmgr_Load = 0x800263C0; // type:func

func_800263F0_jp = 0x800263F0; // type:func
DmaMgr_DmaRomToRam = 0x80026500; // type:func
func_800266C4_jp = 0x800266C4; // type:func
func_80026714_jp = 0x80026714; // type:func
func_80026770_jp = 0x80026770; // type:func
func_800267DC_jp = 0x800267DC; // type:func
func_80026814_jp = 0x80026814; // type:func
func_80026828_jp = 0x80026828; // type:func
func_800269E4_jp = 0x800269E4; // type:func
func_80026A64_jp = 0x80026A64; // type:func
DmaMgr_RequestSync = 0x80026B44; // type:func
func_80026BC0_jp = 0x80026BC0; // type:func
func_80026C00_jp = 0x80026C00; // type:func
func_80026C28_jp = 0x80026C28; // type:func
func_80026C4C_jp = 0x80026C4C; // type:func
func_80026CAC_jp = 0x80026CAC; // type:func
func_80026DA0_jp = 0x80026DA0; // type:func
func_80026DCC_jp = 0x80026DCC; // type:func
func_80026E10_jp = 0x80026E10; // type:func

Yaz0_FirstDMA = 0x80026EA0; // type:func
Yaz0_NextDMA = 0x80026F40; // type:func
Yaz0_DecompressImpl = 0x80027060; // type:func
Yaz0_Decompress = 0x800271E8; // type:func

__osSyncVPrintf = 0x800272C0; // type:func
osSyncPrintf = 0x800272DC; // type:func
rmonPrintf = 0x800272F8; // type:func

Fault_SleepImpl = 0x80027320; // type:func
Fault_ClientProcessThread = 0x80027390; // type:func
Fault_ClientRunTask = 0x80027404; // type:func
Fault_ProcessClient = 0x80027588; // type:func
Fault_AddClient = 0x800275DC; // type:func
Fault_RemoveClient = 0x800276C0; // type:func
Fault_AddAddrConvClient = 0x800277B8; // type:func
Fault_RemoveAddrConvClient = 0x80027890; // type:func
Fault_ConvertAddress = 0x80027988; // type:func
Fault_Sleep = 0x80027A3C; // type:func
Fault_PadCallback = 0x80027A78; // type:func
Fault_UpdatePadImpl = 0x80027AB4; // type:func
Fault_WaitForInputImpl = 0x80027B00; // type:func
Fault_WaitForInput = 0x80027C4C; // type:func
Fault_DrawRec = 0x80027C98; // type:func
Fault_FillScreenBlack = 0x80027CF8; // type:func
Fault_FillScreenRed = 0x80027D4C; // type:func
Fault_DrawCornerRec = 0x80027DA0; // type:func
Fault_PrintFReg = 0x80027DF4; // type:func
Fault_LogFReg = 0x80027EA0; // type:func
Fault_PrintFPCSR = 0x80027F50; // type:func
Fault_LogFPCSR = 0x80027FF4; // type:func
Fault_PrintThreadContext = 0x8002808C; // type:func
Fault_LogThreadContext = 0x800283A8; // type:func
Fault_FindFaultedThread = 0x800286A4; // type:func
Fault_Wait5Seconds = 0x8002872C; // type:func
Fault_WaitForButtonCombo = 0x800287BC; // type:func
Fault_DrawMemDumpContents = 0x80028A88; // type:func
Fault_DrawMemDump = 0x80028BF4; // type:func
Fault_WalkStack = 0x80028DF8; // type:func
Fault_DrawStackTrace = 0x80028F88; // type:func
Fault_LogStackTrace = 0x80029108; // type:func
Fault_ResumeThread = 0x80029278; // type:func
Fault_DisplayFrameBuffer = 0x800292F4; // type:func
Fault_ProcessClients = 0x800293B4; // type:func
Fault_UpdatePad = 0x80029494; // type:func
Fault_ThreadEntry = 0x800294D0; // type:func
Fault_SetFrameBuffer = 0x80029830; // type:func
Fault_Init = 0x80029884; // type:func
Fault_HungupFaultClient = 0x800299B8; // type:func
Fault_AddHungupAndCrashImpl = 0x80029AB4; // type:func
Fault_AddHungupAndCrash = 0x80029B0C; // type:func

FaultDrawer_SetOsSyncPrintfEnabled = 0x80029B70; // type:func
FaultDrawer_DrawRecImpl = 0x80029B80; // type:func
FaultDrawer_DrawChar = 0x80029C9C; // type:func
FaultDrawer_ColorToPrintColor = 0x80029E0C; // type:func
FaultDrawer_UpdatePrintColor = 0x80029EBC; // type:func
FaultDrawer_SetForeColor = 0x80029F5C; // type:func
FaultDrawer_SetBackColor = 0x80029FA4; // type:func
FaultDrawer_SetFontColor = 0x80029FEC; // type:func
FaultDrawer_SetCharPad = 0x8002A034; // type:func
FaultDrawer_SetCursor = 0x8002A064; // type:func
FaultDrawer_FillScreen = 0x8002A15C; // type:func
FaultDrawer_PrintCallback = 0x8002A1EC; // type:func
FaultDrawer_VPrintf = 0x8002A3F8; // type:func
FaultDrawer_Printf = 0x8002A448; // type:func
FaultDrawer_DrawText = 0x8002A498; // type:func
FaultDrawer_SetDrawerFB = 0x8002A4E8; // type:func
FaultDrawer_SetInputCallback = 0x8002A514; // type:func
FaultDrawer_WritebackFBDCache = 0x8002A524; // type:func
FaultDrawer_Init = 0x8002A580; // type:func

pad_init = 0x8002A5F0; // type:func
pad_cleanup = 0x8002A610; // type:func
pad_flush = 0x8002A618; // type:func
pad_push_only = 0x8002A624; // type:func
pad_push_also = 0x8002A63C; // type:func
pad_on_trigger = 0x8002A658; // type:func
pad_off_trigger = 0x8002A674; // type:func
pad_button = 0x8002A690; // type:func
pad_trigger = 0x8002A698; // type:func
pad_physical_stick_x = 0x8002A6A0; // type:func
pad_physical_stick_y = 0x8002A6A8; // type:func
pad_set_logical_stick = 0x8002A6B0; // type:func
pad_logical_stick_x = 0x8002A6BC; // type:func
pad_logical_stick_y = 0x8002A6C4; // type:func
pad_stick_x = 0x8002A6CC; // type:func
pad_stick_y = 0x8002A6EC; // type:func
pad_correct_stick = 0x8002A70C; // type:func

StackCheck_Init = 0x8002A7E0; // type:func
StackCheck_Cleanup = 0x8002A8B8; // type:func
StackCheck_GetState = 0x8002A928; // type:func
StackCheck_CheckAll = 0x8002A9A0; // type:func
StackCheck_Check = 0x8002A9F8; // type:func

gfxprint_setup = 0x8002AA30; // type:func
gfxprint_color = 0x8002AE7C; // type:func
gfxprint_locate = 0x8002AEC8; // type:func
gfxprint_locate8x8 = 0x8002AEEC; // type:func
gfxprint_setoffset = 0x8002AF14; // type:func
gfxprint_putc1 = 0x8002AF28; // type:func
gfxprint_putc = 0x8002B3BC; // type:func
gfxprint_write = 0x8002B57C; // type:func
gfxprint_puts = 0x8002B5D8; // type:func
gfxprint_prout = 0x8002B630; // type:func
gfxprint_init = 0x8002B65C; // type:func
gfxprint_cleanup = 0x8002B6E4; // type:func
gfxprint_open = 0x8002B6EC; // type:func
gfxprint_close = 0x8002B720; // type:func
gfxprint_vprintf = 0x8002B750; // type:func
gfxprint_printf = 0x8002B770; // type:func

MtxConv_F2L = 0x8002B7A0; // type:func
MtxConv_L2F = 0x8002B8E8; // type:func

Overlay_Load = 0x8002B910; // type:func
DoRelocation = 0x8002B9C0; // type:func

_dbg_hungup = 0x8002BC00; // type:func
Reset = 0x8002BC34; // type:func

func_8002BC60_jp = 0x8002BC60; // type:func
func_8002BC90_jp = 0x8002BC90; // type:func
func_8002BCBC_jp = 0x8002BCBC; // type:func
func_8002BD2C_jp = 0x8002BD2C; // type:func
func_8002BD9C_jp = 0x8002BD9C; // type:func
func_8002BE6C_jp = 0x8002BE6C; // type:func
func_8002BF08_jp = 0x8002BF08; // type:func
func_8002BF78_jp = 0x8002BF78; // type:func

func_8002BFA0_jp = 0x8002BFA0; // type:func

PadSetup_Init = 0x8002BFF0; // type:func

Math_FTanF = 0x8002C130; // type:func
Math_FFloorF = 0x8002C164; // type:func
Math_FCeilF = 0x8002C184; // type:func
Math_FRoundF = 0x8002C1A4; // type:func
Math_FTruncF = 0x8002C1C4; // type:func
Math_FNearbyIntF = 0x8002C1E4; // type:func
Math_FAtanTaylorQF = 0x8002C204; // type:func
Math_FAtanTaylorF = 0x8002C250; // type:func
Math_FAtanContFracF = 0x8002C374; // type:func
Math_FAtanF = 0x8002C4C0; // type:func
Math_FAtan2F = 0x8002C500; // type:func
Math_FAsinF = 0x8002C5E8; // type:func
Math_FAcosF = 0x8002C618; // type:func

floorf = 0x8002C640; // type:func
floor = 0x8002C64C; // type:func
lfloorf = 0x8002C658; // type:func
lfloor = 0x8002C668; // type:func
ceilf = 0x8002C678; // type:func
ceil = 0x8002C684; // type:func
lceilf = 0x8002C690; // type:func
lceil = 0x8002C6A0; // type:func
truncf = 0x8002C6B0; // type:func
trunc = 0x8002C6BC; // type:func
ltruncf = 0x8002C6C8; // type:func
ltrunc = 0x8002C6D8; // type:func
nearbyintf = 0x8002C6E8; // type:func
nearbyint = 0x8002C6F4; // type:func
lnearbyintf = 0x8002C700; // type:func
lnearbyint = 0x8002C710; // type:func
roundf = 0x8002C720; // type:func
round = 0x8002C73C; // type:func
lroundf = 0x8002C75C; // type:func
lround = 0x8002C77C; // type:func

malloc = 0x8002C7A0; // type:func
malloc_r = 0x8002C7C8; // type:func
realloc = 0x8002C7F0; // type:func
free = 0x8002C820; // type:func
calloc = 0x8002C848; // type:func
DisplayArena = 0x8002C89C; // type:func
GetFreeArena = 0x8002C8D4; // type:func
MallocInit = 0x8002C8F8; // type:func
MallocCleanup = 0x8002C928; // type:func
MallocIsInitialized = 0x8002C94C; // type:func

qrand = 0x8002C970; // type:func
sqrand = 0x8002C9A0; // type:func
fqrand = 0x8002C9AC; // type:func
fqrand2 = 0x8002CA00; // type:func
sqrand_r = 0x8002CA58; // type:func
qrand_r = 0x8002CA60; // type:func
fqrand_r = 0x8002CA88; // type:func
fqrand2_r = 0x8002CAD4; // type:func

arena_lock_init = 0x8002CB30; // type:func
arena_lock = 0x8002CB5C; // type:func
arena_unlock = 0x8002CB84; // type:func
search_last_block = 0x8002CBAC; // type:func
__osMallocInit = 0x8002CC10; // type:func
__osMallocAddBlock = 0x8002CC60; // type:func
__osMallocCleanup = 0x8002CD00; // type:func
__osMallocIsInitalized = 0x8002CD20; // type:func
__osMallocNoLock = 0x8002CD28; // type:func
__osMalloc = 0x8002CE30; // type:func
__osMallocR = 0x8002CE70; // type:func
__osFree_NoLock = 0x8002CFB4; // type:func
__osFree = 0x8002D0F4; // type:func
__osRealloc = 0x8002D12C; // type:func
__osGetFreeArena = 0x8002D4DC; // type:func
ArenaImpl_FaultClient = 0x8002D5B0; // type:func
__osCheckArena = 0x8002D784; // type:func

proutSprintf = 0x8002D850; // type:func
vsprintf = 0x8002D874; // type:func
sprintf = 0x8002D8C4; // type:func

PrintUtils_VPrintf = 0x8002D920; // type:func
PrintUtils_Printf = 0x8002D954; // type:func

csleep = 0x8002D980; // type:func
nsleep = 0x8002D9EC; // type:func
usleep = 0x8002DA3C; // type:func
msleep = 0x8002DA8C; // type:func
sleep = 0x8002DAE0; // type:func

func_8003B960_jp = 0x8003B960; // type:func
func_8003B9B0_jp = 0x8003B9B0; // type:func
func_8003B9E0_jp = 0x8003B9E0; // type:func
func_8003BA20_jp = 0x8003BA20; // type:func
func_8003BA60_jp = 0x8003BA60; // type:func

// .data

D_8003BBC0_jp = 0x8003BBC0; // type:s8
gViConfigFeatures = 0x8003BBC4; //
gViConfigXScale = 0x8003BBC8; // type:f32
gViConfigYScale = 0x8003BBCC; // type:f32
gCartHandle = 0x8003BBD0; //
D_8003BBE0_jp = 0x8003BBE0; //
D_8003BBF0_jp = 0x8003BBF0; //
D_8003BC38_jp = 0x8003BC38; //
D_8003BC50_jp = 0x8003BC50; //
D_8003BC90_jp = 0x8003BC90; //
D_8003BC94_jp = 0x8003BC94; //

gOverlayLogSeverity = 0x8003BCA0 // type:s32 size:0x4

gfxprint_moji_tlut = 0x8003BCB0; // type:u8 size:0x80
gfxprint_rainbow_tlut = 0x8003BD30; // type:u8 size:0x20
gfxprint_rainbow_txtr = 0x8003BD50; // type:u8 size:0x8
gfxprint_font = 0x8003BD58; // type:u8 size:0x800

D_8003C560_jp = 0x8003C560; //
D_FLT_8003C584_jp = 0x8003C584; // type:f32
D_8003C590_jp = 0x8003C590; //


// .rodata

RO_STR_8003D180_jp = 0x8003D180; // type:asciz
RO_STR_8003D188_jp = 0x8003D188; // type:asciz

RO_STR_8003D190_jp = 0x8003D190; // type:asciz
RO_STR_8003D19C_jp = 0x8003D19C; // type:asciz
RO_FLT_8003D1A4_jp = 0x8003D1A4; // type:f32

RO_STR_8003D1B0_jp = 0x8003D1B0; // type:asciz
RO_STR_8003D1B4_jp = 0x8003D1B4; // type:asciz

RO_STR_8003D1D0_jp = 0x8003D1D0; // type:asciz
RO_STR_8003D1D4_jp = 0x8003D1D4; // type:asciz
RO_STR_8003D1D8_jp = 0x8003D1D8; // type:asciz
RO_STR_8003D1EC_jp = 0x8003D1EC; // type:asciz
RO_STR_8003D200_jp = 0x8003D200; // type:asciz
RO_STR_8003D214_jp = 0x8003D214; // type:asciz
RO_STR_8003D218_jp = 0x8003D218; // type:asciz
RO_STR_8003D22C_jp = 0x8003D22C; // type:asciz
RO_STR_8003D230_jp = 0x8003D230; // type:asciz
RO_STR_8003D23C_jp = 0x8003D23C; // type:asciz
RO_STR_8003D250_jp = 0x8003D250; // type:asciz
RO_STR_8003D264_jp = 0x8003D264; // type:asciz
RO_8003D268_jp = 0x8003D268; //
RO_STR_8003D26C_jp = 0x8003D26C; // type:asciz
RO_STR_8003D284_jp = 0x8003D284; // type:asciz
RO_8003D2C0_jp = 0x8003D2C0; //
RO_STR_8003D2C4_jp = 0x8003D2C4; // type:asciz
RO_STR_8003D2DC_jp = 0x8003D2DC; // type:asciz
RO_8003D31C_jp = 0x8003D31C; //
RO_STR_8003D320_jp = 0x8003D320; // type:asciz
RO_STR_8003D338_jp = 0x8003D338; // type:asciz
RO_STR_8003D378_jp = 0x8003D378; // type:asciz
RO_STR_8003D38C_jp = 0x8003D38C; // type:asciz
RO_STR_8003D3AC_jp = 0x8003D3AC; // type:asciz
RO_STR_8003D3C8_jp = 0x8003D3C8; // type:asciz
RO_STR_8003D3DC_jp = 0x8003D3DC; // type:asciz
RO_STR_8003D3F0_jp = 0x8003D3F0; // type:asciz
RO_STR_8003D400_jp = 0x8003D400; // type:asciz
RO_STR_8003D41C_jp = 0x8003D41C; // type:asciz
RO_STR_8003D440_jp = 0x8003D440; // type:asciz
RO_STR_8003D44C_jp = 0x8003D44C; // type:asciz
RO_STR_8003D460_jp = 0x8003D460; // type:asciz
RO_STR_8003D478_jp = 0x8003D478; // type:asciz
RO_STR_8003D490_jp = 0x8003D490; // type:asciz
RO_STR_8003D4A8_jp = 0x8003D4A8; // type:asciz
RO_STR_8003D4C0_jp = 0x8003D4C0; // type:asciz
RO_STR_8003D4D4_jp = 0x8003D4D4; // type:asciz
RO_STR_8003D4E8_jp = 0x8003D4E8; // type:asciz
RO_STR_8003D500_jp = 0x8003D500; // type:asciz
RO_STR_8003D518_jp = 0x8003D518; // type:asciz
RO_STR_8003D530_jp = 0x8003D530; // type:asciz
RO_STR_8003D548_jp = 0x8003D548; // type:asciz
RO_STR_8003D55C_jp = 0x8003D55C; // type:asciz
RO_STR_8003D56C_jp = 0x8003D56C; // type:asciz
RO_STR_8003D588_jp = 0x8003D588; // type:asciz
RO_STR_8003D5A4_jp = 0x8003D5A4; // type:asciz
RO_STR_8003D5BC_jp = 0x8003D5BC; // type:asciz
RO_STR_8003D5D8_jp = 0x8003D5D8; // type:asciz
RO_STR_8003D5F0_jp = 0x8003D5F0; // type:asciz
RO_STR_8003D604_jp = 0x8003D604; // type:asciz
RO_STR_8003D618_jp = 0x8003D618; // type:asciz
RO_STR_8003D624_jp = 0x8003D624; // type:asciz
RO_STR_8003D630_jp = 0x8003D630; // type:asciz
RO_STR_8003D644_jp = 0x8003D644; // type:asciz
RO_STR_8003D67C_jp = 0x8003D67C; // type:asciz
RO_STR_8003D6B4_jp = 0x8003D6B4; // type:asciz
RO_STR_8003D6FC_jp = 0x8003D6FC; // type:asciz
RO_STR_8003D748_jp = 0x8003D748; // type:asciz
RO_STR_8003D758_jp = 0x8003D758; // type:asciz
RO_STR_8003D76C_jp = 0x8003D76C; // type:asciz
RO_STR_8003D77C_jp = 0x8003D77C; // type:asciz
RO_STR_8003D790_jp = 0x8003D790; // type:asciz
RO_STR_8003D7A0_jp = 0x8003D7A0; // type:asciz
RO_STR_8003D7A8_jp = 0x8003D7A8; // type:asciz
RO_STR_8003D7AC_jp = 0x8003D7AC; // type:asciz
RO_STR_8003D7BC_jp = 0x8003D7BC; // type:asciz
RO_STR_8003D7C4_jp = 0x8003D7C4; // type:asciz
RO_STR_8003D7D8_jp = 0x8003D7D8; // type:asciz
RO_STR_8003D7F4_jp = 0x8003D7F4; // type:asciz
RO_STR_8003D810_jp = 0x8003D810; // type:asciz
RO_STR_8003D82C_jp = 0x8003D82C; // type:asciz
RO_STR_8003D848_jp = 0x8003D848; // type:asciz
RO_STR_8003D864_jp = 0x8003D864; // type:asciz
RO_STR_8003D880_jp = 0x8003D880; // type:asciz
RO_STR_8003D89C_jp = 0x8003D89C; // type:asciz
RO_STR_8003D8B8_jp = 0x8003D8B8; // type:asciz
RO_STR_8003D8D4_jp = 0x8003D8D4; // type:asciz
RO_STR_8003D8F0_jp = 0x8003D8F0; // type:asciz
RO_STR_8003D910_jp = 0x8003D910; // type:asciz
RO_STR_8003D914_jp = 0x8003D914; // type:asciz
RO_STR_8003D918_jp = 0x8003D918; // type:asciz
RO_STR_8003D91C_jp = 0x8003D91C; // type:asciz
RO_STR_8003D920_jp = 0x8003D920; // type:asciz
RO_STR_8003D924_jp = 0x8003D924; // type:asciz
RO_STR_8003D928_jp = 0x8003D928; // type:asciz
RO_STR_8003D92C_jp = 0x8003D92C; // type:asciz
RO_STR_8003D930_jp = 0x8003D930; // type:asciz
RO_STR_8003D934_jp = 0x8003D934; // type:asciz
RO_STR_8003D938_jp = 0x8003D938; // type:asciz
RO_STR_8003D950_jp = 0x8003D950; // type:asciz
RO_STR_8003D970_jp = 0x8003D970; // type:asciz
RO_STR_8003D990_jp = 0x8003D990; // type:asciz
RO_STR_8003D9B0_jp = 0x8003D9B0; // type:asciz
RO_STR_8003D9D0_jp = 0x8003D9D0; // type:asciz
RO_STR_8003D9F0_jp = 0x8003D9F0; // type:asciz
RO_STR_8003DA10_jp = 0x8003DA10; // type:asciz
RO_STR_8003DA30_jp = 0x8003DA30; // type:asciz
RO_STR_8003DA50_jp = 0x8003DA50; // type:asciz
RO_STR_8003DA70_jp = 0x8003DA70; // type:asciz
RO_STR_8003DA90_jp = 0x8003DA90; // type:asciz
RO_STR_8003DAB0_jp = 0x8003DAB0; // type:asciz
RO_STR_8003DAB4_jp = 0x8003DAB4; // type:asciz
RO_STR_8003DAB8_jp = 0x8003DAB8; // type:asciz
RO_STR_8003DABC_jp = 0x8003DABC; // type:asciz
RO_STR_8003DAC0_jp = 0x8003DAC0; // type:asciz
RO_STR_8003DAC4_jp = 0x8003DAC4; // type:asciz
RO_STR_8003DAC8_jp = 0x8003DAC8; // type:asciz
RO_STR_8003DACC_jp = 0x8003DACC; // type:asciz
RO_STR_8003DAD0_jp = 0x8003DAD0; // type:asciz
RO_STR_8003DAD4_jp = 0x8003DAD4; // type:asciz
RO_STR_8003DAD8_jp = 0x8003DAD8; // type:asciz
RO_STR_8003DB50_jp = 0x8003DB50; // type:asciz
RO_STR_8003DB84_jp = 0x8003DB84; // type:asciz
RO_STR_8003DB8C_jp = 0x8003DB8C; // type:asciz
RO_STR_8003DB98_jp = 0x8003DB98; // type:asciz
RO_STR_8003DBA0_jp = 0x8003DBA0; // type:asciz
RO_STR_8003DBA8_jp = 0x8003DBA8; // type:asciz
RO_STR_8003DBB0_jp = 0x8003DBB0; // type:asciz
RO_STR_8003DBC8_jp = 0x8003DBC8; // type:asciz
RO_STR_8003DBD4_jp = 0x8003DBD4; // type:asciz
RO_STR_8003DBE0_jp = 0x8003DBE0; // type:asciz
RO_STR_8003DC08_jp = 0x8003DC08; // type:asciz
RO_STR_8003DC14_jp = 0x8003DC14; // type:asciz
RO_STR_8003DC20_jp = 0x8003DC20; // type:asciz
RO_STR_8003DC24_jp = 0x8003DC24; // type:asciz
RO_STR_8003DC48_jp = 0x8003DC48; // type:asciz
RO_STR_8003DC80_jp = 0x8003DC80; // type:asciz
RO_STR_8003DCB4_jp = 0x8003DCB4; // type:asciz
RO_STR_8003DCE8_jp = 0x8003DCE8; // type:asciz
RO_STR_8003DD0C_jp = 0x8003DD0C; // type:asciz
RO_STR_8003DD28_jp = 0x8003DD28; // type:asciz
RO_STR_8003DD34_jp = 0x8003DD34; // type:asciz
RO_STR_8003DD50_jp = 0x8003DD50; // type:asciz
RO_STR_8003DD6C_jp = 0x8003DD6C; // type:asciz
RO_STR_8003DD88_jp = 0x8003DD88; // type:asciz
RO_STR_8003DDA4_jp = 0x8003DDA4; // type:asciz
RO_STR_8003DDAC_jp = 0x8003DDAC; // type:asciz
RO_STR_8003DDC4_jp = 0x8003DDC4; // type:asciz
RO_STR_8003DDC8_jp = 0x8003DDC8; // type:asciz
RO_STR_8003DDD0_jp = 0x8003DDD0; // type:asciz
RO_STR_8003DDD4_jp = 0x8003DDD4; // type:asciz
RO_STR_8003DDDC_jp = 0x8003DDDC; // type:asciz
RO_STR_8003DDF4_jp = 0x8003DDF4; // type:asciz
RO_STR_8003DDF8_jp = 0x8003DDF8; // type:asciz
RO_STR_8003DE00_jp = 0x8003DE00; // type:asciz
RO_STR_8003DE04_jp = 0x8003DE04; // type:asciz
RO_STR_8003DE0C_jp = 0x8003DE0C; // type:asciz
jtbl_8003DE1C_jp = 0x8003DE1C; // type:jtbl
RO_8003DE50_jp = 0x8003DE50; //
RO_STR_8003E250_jp = 0x8003E250; // type:asciz
RO_STR_8003E254_jp = 0x8003E254; // type:asciz
RO_STR_8003E25C_jp = 0x8003E25C; // type:asciz
RO_STR_8003E264_jp = 0x8003E264; // type:asciz
RO_STR_8003E270_jp = 0x8003E270; // type:asciz
RO_STR_8003E278_jp = 0x8003E278; // type:asciz
RO_STR_8003E27C_jp = 0x8003E27C; // type:asciz
jtbl_8003E290_jp = 0x8003E290; // type:jtbl
RO_STR_8003E2B0_jp = 0x8003E2B0; // type:asciz
RO_FLT_8003E2C0_jp = 0x8003E2C0; // type:f32
RO_FLT_8003E2E4_jp = 0x8003E2E4; // type:f32
RO_FLT_8003E2E8_jp = 0x8003E2E8; // type:f32
RO_FLT_8003E2EC_jp = 0x8003E2EC; // type:f32
RO_FLT_8003E2F0_jp = 0x8003E2F0; // type:f32
RO_FLT_8003E2F4_jp = 0x8003E2F4; // type:f32
RO_FLT_8003E2F8_jp = 0x8003E2F8; // type:f32
RO_FLT_8003E2FC_jp = 0x8003E2FC; // type:f32
RO_FLT_8003E300_jp = 0x8003E300; // type:f32
RO_FLT_8003E304_jp = 0x8003E304; // type:f32
RO_FLT_8003E308_jp = 0x8003E308; // type:f32
RO_FLT_8003E30C_jp = 0x8003E30C; // type:f32
RO_STR_8003E310_jp = 0x8003E310; // type:asciz
RO_STR_8003E328_jp = 0x8003E328; // type:asciz
RO_STR_8003E35C_jp = 0x8003E35C; // type:asciz
RO_STR_8003E398_jp = 0x8003E398; // type:asciz
RO_STR_8003E3C8_jp = 0x8003E3C8; // type:asciz
RO_STR_8003E400_jp = 0x8003E400; // type:asciz
RO_STR_8003E43C_jp = 0x8003E43C; // type:asciz
RO_STR_8003E46C_jp = 0x8003E46C; // type:asciz
RO_STR_8003E484_jp = 0x8003E484; // type:asciz
RO_STR_8003E49C_jp = 0x8003E49C; // type:asciz
RO_STR_8003E4C0_jp = 0x8003E4C0; // type:asciz
RO_STR_8003E4D4_jp = 0x8003E4D4; // type:asciz
RO_STR_8003E4D8_jp = 0x8003E4D8; // type:asciz
RO_STR_8003E4DC_jp = 0x8003E4DC; // type:asciz
RO_STR_8003E4E0_jp = 0x8003E4E0; // type:asciz
RO_STR_8003E4F4_jp = 0x8003E4F4; // type:asciz
RO_STR_8003E514_jp = 0x8003E514; // type:asciz
RO_STR_8003E534_jp = 0x8003E534; // type:asciz
RO_STR_8003E554_jp = 0x8003E554; // type:asciz
RO_STR_8003E588_jp = 0x8003E588; // type:asciz
RO_STR_8003E5A4_jp = 0x8003E5A4; // type:asciz

RO_DBL_8003E890_jp = 0x8003E890; // type:f64
RO_STR_8003E8D8_jp = 0x8003E8D8; // type:asciz
RO_STR_8003E8DC_jp = 0x8003E8DC; // type:asciz
RO_8003E8E0_jp = 0x8003E8E0; // type:u8
RO_DBL_8003E8E8_jp = 0x8003E8E8; // type:f64
RO_8003E8F0_jp = 0x8003E8F0; // type:s64
RO_8003E8F8_jp = 0x8003E8F8; // type:s64

gBuildTeam = 0x8003E900; // type:asciz
gBuildDate = 0x8003E924; // type:asciz
gBuildMakeOption = 0x8003E938; // type:asciz

// .bss

sIdleStack = 0x8003E940; //
sIdleStackInfo = 0x8003ED40; //
sBootStackInfo = 0x8003ED60; //
sIdleThread = 0x8003ED80; //
sBootStack = 0x8003EF30; //
sMainThread = 0x8003F330; //
sMainStack = 0x8003F4E0; //
sMainStackInfo = 0x8003FDE0; //
sPiMgrCmdBuff = 0x8003FE00; //
sPiMgrCmdQueue = 0x8003FEC8; //
gViConfigMode = 0x8003FEE0; //
gViConfigBlackNext = 0x8003FF30; // type:u8
gViConfigBlack = 0x8003FF31; // type:u8
B_8003FF40_jp = 0x8003FF40; //
B_8003FF5C_jp = 0x8003FF5C; // type:u16
B_8003FF60_jp = 0x8003FF60; //
B_8003FF78_jp = 0x8003FF78; //
B_8003FFF8_jp = 0x8003FFF8; //
B_800401A8_jp = 0x800401A8; //
B_800406A8_jp = 0x800406A8; //
B_800406AC_jp = 0x800406AC; //
B_800406B0_jp = 0x800406B0; //
B_800406B4_jp = 0x800406B4; //
B_800406C0_jp = 0x800406C0; //
B_80040AC0_jp = 0x80040AC0; //
B_80040AC4_jp = 0x80040AC4; //
B_80040AC8_jp = 0x80040AC8; //
B_80040ACC_jp = 0x80040ACC; //
B_80040AD0_jp = 0x80040AD0; //
B_80040AE0_jp = 0x80040AE0; //
B_80040AE4_jp = 0x80040AE4; // type:u8
B_80040AE8_jp = 0x80040AE8; //
B_800410E8_jp = 0x800410E8; //
B_80041108_jp = 0x80041108; // type:u8
B_800418D6_jp = 0x800418D6; // type:s8
B_80041960_jp = 0x80041960; // type:s8
B_80041964_jp = 0x80041964; // type:u16
B_80041970_jp = 0x80041970; // type:u16
B_80041972_jp = 0x80041972; // type:u16
B_80041980_jp = 0x80041980; // type:u16
B_80041982_jp = 0x80041982; // type:u16
B_80041995_jp = 0x80041995; // type:s8
B_80041998_jp = 0x80041998; //

__gfxprint_default_flags = 0x800419A0; // type:u8 size:0x1

B_800419B0_jp = 0x800419B0; //

B_800419C0_jp = 0x800419C0; //
B_800419F0_jp = 0x800419F0; //
sArenaLockMsg = 0x80041A00; // size:0x4

B_80044684_jp = 0x80044684; //

gDmaDataTable = 0x80044690; //
