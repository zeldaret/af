// .text

func_80800000_jp = 0x80800000; // type:func
func_80800058_jp = 0x80800058; // type:func
func_8080007C_jp = 0x8080007C; // type:func
func_808000A4_jp = 0x808000A4; // type:func
func_80800138_jp = 0x80800138; // type:func
func_80800248_jp = 0x80800248; // type:func
func_808002C8_jp = 0x808002C8; // type:func
func_808002D8_jp = 0x808002D8; // type:func
func_808002E8_jp = 0x808002E8; // type:func
func_808002F8_jp = 0x808002F8; // type:func
func_8080034C_jp = 0x8080034C; // type:func
func_80800384_jp = 0x80800384; // type:func
func_808003BC_jp = 0x808003BC; // type:func
func_808003F0_jp = 0x808003F0; // type:func
func_80800424_jp = 0x80800424; // type:func
func_80800434_jp = 0x80800434; // type:func
func_80800444_jp = 0x80800444; // type:func
func_80800498_jp = 0x80800498; // type:func
func_8080053C_jp = 0x8080053C; // type:func
func_80800564_jp = 0x80800564; // type:func
func_808005EC_jp = 0x808005EC; // type:func
func_808006A8_jp = 0x808006A8; // type:func
func_80800774_jp = 0x80800774; // type:func
func_808007C8_jp = 0x808007C8; // type:func
func_80800814_jp = 0x80800814; // type:func
func_80800854_jp = 0x80800854; // type:func
func_808008E4_jp = 0x808008E4; // type:func
func_80800978_jp = 0x80800978; // type:func
func_808009C0_jp = 0x808009C0; // type:func
func_80800A08_jp = 0x80800A08; // type:func
func_80800A5C_jp = 0x80800A5C; // type:func
func_80800C3C_jp = 0x80800C3C; // type:func
func_80800DE0_jp = 0x80800DE0; // type:func
func_80800E34_jp = 0x80800E34; // type:func
func_80800EBC_jp = 0x80800EBC; // type:func
func_8080108C_jp = 0x8080108C; // type:func
func_808010CC_jp = 0x808010CC; // type:func
func_8080131C_jp = 0x8080131C; // type:func
func_80801354_jp = 0x80801354; // type:func
func_80801390_jp = 0x80801390; // type:func
func_808013B4_jp = 0x808013B4; // type:func
func_8080140C_jp = 0x8080140C; // type:func
func_80801468_jp = 0x80801468; // type:func
func_808014E4_jp = 0x808014E4; // type:func
func_8080154C_jp = 0x8080154C; // type:func
func_808015B4_jp = 0x808015B4; // type:func
func_80801610_jp = 0x80801610; // type:func
func_80801658_jp = 0x80801658; // type:func
func_80801840_jp = 0x80801840; // type:func
func_80801928_jp = 0x80801928; // type:func
func_808019E4_jp = 0x808019E4; // type:func
func_80801A28_jp = 0x80801A28; // type:func
func_80801A34_jp = 0x80801A34; // type:func

// .data

D_80801B60_jp = 0x80801B60; //
D_80801D04_jp = 0x80801D04; //
D_80801D2C_jp = 0x80801D2C; //
D_80801D60_jp = 0x80801D60; //
D_80801D68_jp = 0x80801D68; //
D_80801D7C_jp = 0x80801D7C; //
D_80801D8C_jp = 0x80801D8C; //
D_80801DBC_jp = 0x80801DBC; //
D_80801DD0_jp = 0x80801DD0; //
D_80801DD8_jp = 0x80801DD8; //
D_80801DF8_jp = 0x80801DF8; //
D_80801E14_jp = 0x80801E14; //

// .rodata

RO_STR_80801E40_jp = 0x80801E40; // type:asciz
RO_STR_80801E5C_jp = 0x80801E5C; // type:asciz
RO_STR_80801E78_jp = 0x80801E78; // type:asciz
RO_STR_80801E94_jp = 0x80801E94; // type:asciz
RO_STR_80801EB0_jp = 0x80801EB0; // type:asciz
RO_STR_80801ECC_jp = 0x80801ECC; // type:asciz
RO_STR_80801EE4_jp = 0x80801EE4; // type:asciz
RO_STR_80801EFC_jp = 0x80801EFC; // type:asciz
RO_STR_80801F14_jp = 0x80801F14; // type:asciz
RO_STR_80801F34_jp = 0x80801F34; // type:asciz
RO_STR_80801F40_jp = 0x80801F40; // type:asciz
RO_STR_80801F60_jp = 0x80801F60; // type:asciz
RO_STR_80801F80_jp = 0x80801F80; // type:asciz
RO_STR_80801FA0_jp = 0x80801FA0; // type:asciz
RO_STR_80801FBC_jp = 0x80801FBC; // type:asciz
RO_STR_80801FD4_jp = 0x80801FD4; // type:asciz
RO_STR_80801FE8_jp = 0x80801FE8; // type:asciz
RO_STR_80801FFC_jp = 0x80801FFC; // type:asciz
RO_STR_8080200C_jp = 0x8080200C; // type:asciz
RO_STR_80802020_jp = 0x80802020; // type:asciz
RO_STR_8080203C_jp = 0x8080203C; // type:asciz
RO_STR_80802054_jp = 0x80802054; // type:asciz
RO_STR_8080206C_jp = 0x8080206C; // type:asciz
RO_STR_80802084_jp = 0x80802084; // type:asciz
RO_STR_80802094_jp = 0x80802094; // type:asciz
RO_STR_808020A4_jp = 0x808020A4; // type:asciz
RO_STR_808020B8_jp = 0x808020B8; // type:asciz
RO_STR_808020CC_jp = 0x808020CC; // type:asciz
RO_STR_808020E8_jp = 0x808020E8; // type:asciz
RO_STR_80802104_jp = 0x80802104; // type:asciz
RO_STR_80802118_jp = 0x80802118; // type:asciz
RO_STR_80802130_jp = 0x80802130; // type:asciz
RO_STR_80802140_jp = 0x80802140; // type:asciz
RO_STR_80802154_jp = 0x80802154; // type:asciz
RO_STR_8080216C_jp = 0x8080216C; // type:asciz
RO_STR_80802188_jp = 0x80802188; // type:asciz
RO_STR_808021A4_jp = 0x808021A4; // type:asciz
RO_STR_808021B8_jp = 0x808021B8; // type:asciz
RO_STR_808021D0_jp = 0x808021D0; // type:asciz
RO_STR_808021E4_jp = 0x808021E4; // type:asciz
RO_STR_808021F8_jp = 0x808021F8; // type:asciz
RO_STR_8080220C_jp = 0x8080220C; // type:asciz
RO_STR_80802224_jp = 0x80802224; // type:asciz
RO_STR_8080223C_jp = 0x8080223C; // type:asciz
RO_STR_8080225C_jp = 0x8080225C; // type:asciz
RO_STR_80802280_jp = 0x80802280; // type:asciz
RO_STR_808022A0_jp = 0x808022A0; // type:asciz
RO_STR_808022D0_jp = 0x808022D0; // type:asciz
RO_STR_808022D4_jp = 0x808022D4; // type:asciz
RO_STR_808022E8_jp = 0x808022E8; // type:asciz
RO_STR_808022F4_jp = 0x808022F4; // type:asciz
RO_STR_808022F8_jp = 0x808022F8; // type:asciz
RO_STR_80802304_jp = 0x80802304; // type:asciz
RO_STR_80802314_jp = 0x80802314; // type:asciz
RO_STR_80802318_jp = 0x80802318; // type:asciz
RO_STR_8080231C_jp = 0x8080231C; // type:asciz
RO_STR_80802320_jp = 0x80802320; // type:asciz
RO_STR_80802324_jp = 0x80802324; // type:asciz
RO_STR_80802328_jp = 0x80802328; // type:asciz
RO_STR_8080232C_jp = 0x8080232C; // type:asciz
RO_STR_80802330_jp = 0x80802330; // type:asciz
RO_STR_80802334_jp = 0x80802334; // type:asciz
RO_STR_8080233C_jp = 0x8080233C; // type:asciz
RO_STR_80802348_jp = 0x80802348; // type:asciz
RO_STR_80802350_jp = 0x80802350; // type:asciz
RO_STR_80802358_jp = 0x80802358; // type:asciz
RO_STR_80802360_jp = 0x80802360; // type:asciz
RO_STR_80802368_jp = 0x80802368; // type:asciz
RO_STR_80802370_jp = 0x80802370; // type:asciz
RO_STR_80802384_jp = 0x80802384; // type:asciz
RO_STR_8080238C_jp = 0x8080238C; // type:asciz
RO_STR_80802394_jp = 0x80802394; // type:asciz
RO_STR_8080239C_jp = 0x8080239C; // type:asciz
RO_STR_808023A4_jp = 0x808023A4; // type:asciz
RO_STR_808023B0_jp = 0x808023B0; // type:asciz
RO_STR_808023C0_jp = 0x808023C0; // type:asciz
RO_STR_808023CC_jp = 0x808023CC; // type:asciz
RO_STR_808023D8_jp = 0x808023D8; // type:asciz
RO_STR_808023E8_jp = 0x808023E8; // type:asciz
RO_STR_808023F8_jp = 0x808023F8; // type:asciz
RO_STR_80802410_jp = 0x80802410; // type:asciz
RO_STR_80802428_jp = 0x80802428; // type:asciz
RO_STR_8080243C_jp = 0x8080243C; // type:asciz
RO_STR_80802454_jp = 0x80802454; // type:asciz
RO_STR_80802460_jp = 0x80802460; // type:asciz
RO_STR_8080246C_jp = 0x8080246C; // type:asciz
RO_STR_80802478_jp = 0x80802478; // type:asciz
RO_STR_80802484_jp = 0x80802484; // type:asciz
RO_STR_80802490_jp = 0x80802490; // type:asciz
RO_STR_8080249C_jp = 0x8080249C; // type:asciz
RO_STR_808024A8_jp = 0x808024A8; // type:asciz
RO_STR_808024B4_jp = 0x808024B4; // type:asciz
RO_STR_808024C0_jp = 0x808024C0; // type:asciz
RO_STR_808024C8_jp = 0x808024C8; // type:asciz
RO_STR_808024D4_jp = 0x808024D4; // type:asciz
RO_STR_808024E4_jp = 0x808024E4; // type:asciz
RO_STR_808024F0_jp = 0x808024F0; // type:asciz
RO_STR_808024FC_jp = 0x808024FC; // type:asciz
RO_STR_8080250C_jp = 0x8080250C; // type:asciz
RO_STR_80802518_jp = 0x80802518; // type:asciz
RO_STR_80802528_jp = 0x80802528; // type:asciz
jtbl_80802534_jp = 0x80802534; // type:jtbl
jtbl_80802550_jp = 0x80802550; // type:jtbl

// .text

func_808029D0_jp = 0x808029D0; // type:func
func_80802A20_jp = 0x80802A20; // type:func
func_80802A2C_jp = 0x80802A2C; // type:func
func_80802A60_jp = 0x80802A60; // type:func
func_80802AE0_jp = 0x80802AE0; // type:func
func_80802B40_jp = 0x80802B40; // type:func
func_80802B64_jp = 0x80802B64; // type:func
func_80802B8C_jp = 0x80802B8C; // type:func
func_80802BB8_jp = 0x80802BB8; // type:func
func_80802BF4_jp = 0x80802BF4; // type:func
func_80802C90_jp = 0x80802C90; // type:func
func_80802CBC_jp = 0x80802CBC; // type:func
func_80802D9C_jp = 0x80802D9C; // type:func
func_80802DF0_jp = 0x80802DF0; // type:func
func_80802E10_jp = 0x80802E10; // type:func
func_80802E34_jp = 0x80802E34; // type:func
func_80802E74_jp = 0x80802E74; // type:func
func_808030D0_jp = 0x808030D0; // type:func
func_80803124_jp = 0x80803124; // type:func
func_80803174_jp = 0x80803174; // type:func
func_80803210_jp = 0x80803210; // type:func
func_808032F8_jp = 0x808032F8; // type:func
func_80803544_jp = 0x80803544; // type:func
func_8080367C_jp = 0x8080367C; // type:func
func_80803810_jp = 0x80803810; // type:func
func_808039D0_jp = 0x808039D0; // type:func
func_80803A18_jp = 0x80803A18; // type:func
func_80803A40_jp = 0x80803A40; // type:func
func_80803B08_jp = 0x80803B08; // type:func
func_80803E40_jp = 0x80803E40; // type:func
func_80803F48_jp = 0x80803F48; // type:func
func_8080407C_jp = 0x8080407C; // type:func
func_80804138_jp = 0x80804138; // type:func
func_808041A4_jp = 0x808041A4; // type:func
func_808041C4_jp = 0x808041C4; // type:func
func_80804240_jp = 0x80804240; // type:func
func_80804288_jp = 0x80804288; // type:func

// .data

D_80804320_jp = 0x80804320; //
D_80804344_jp = 0x80804344; //
D_80804368_jp = 0x80804368; //
D_8080438C_jp = 0x8080438C; //
D_808043A8_jp = 0x808043A8; //

// .rodata

RO_STR_808043C0_jp = 0x808043C0; // type:asciz
RO_STR_808043D0_jp = 0x808043D0; // type:asciz
RO_STR_808043DC_jp = 0x808043DC; // type:asciz
jtbl_808043E8_jp = 0x808043E8; // type:jtbl
jtbl_80804410_jp = 0x80804410; // type:jtbl

// .bss

B_80804480_jp = 0x80804480; //
B_8080455C_jp = 0x8080455C; //
B_80804560_jp = 0x80804560; // type:s16
B_80804562_jp = 0x80804562; // type:s16

// .text

func_80804790_jp = 0x80804790; // type:func
func_80804860_jp = 0x80804860; // type:func
func_8080486C_jp = 0x8080486C; // type:func
func_808048F0_jp = 0x808048F0; // type:func
func_80804930_jp = 0x80804930; // type:func
func_80804ADC_jp = 0x80804ADC; // type:func
func_80804B34_jp = 0x80804B34; // type:func
func_80804B6C_jp = 0x80804B6C; // type:func
func_80804C40_jp = 0x80804C40; // type:func
func_80804CC0_jp = 0x80804CC0; // type:func
func_80804D18_jp = 0x80804D18; // type:func
func_80804D74_jp = 0x80804D74; // type:func
func_80804EE0_jp = 0x80804EE0; // type:func
func_80804F78_jp = 0x80804F78; // type:func
func_80805104_jp = 0x80805104; // type:func
func_808052B8_jp = 0x808052B8; // type:func
func_80805360_jp = 0x80805360; // type:func
func_808055F4_jp = 0x808055F4; // type:func
func_80805658_jp = 0x80805658; // type:func
func_808057D0_jp = 0x808057D0; // type:func
func_80805888_jp = 0x80805888; // type:func
func_8080590C_jp = 0x8080590C; // type:func
func_80805968_jp = 0x80805968; // type:func

// .data

D_80805B20_jp = 0x80805B20; //
D_80805B34_jp = 0x80805B34; //
D_80805B48_jp = 0x80805B48; //
D_80805B5C_jp = 0x80805B5C; //
D_80805B70_jp = 0x80805B70; //
D_80805B80_jp = 0x80805B80; //
D_80805B98_jp = 0x80805B98; //
D_80805CB0_jp = 0x80805CB0; //
D_80805CB4_jp = 0x80805CB4; //
D_80805CD8_jp = 0x80805CD8; //
D_80805ED8_jp = 0x80805ED8; //
D_808060D8_jp = 0x808060D8; //
D_80806158_jp = 0x80806158; //
D_80806338_jp = 0x80806338; //
D_80806458_jp = 0x80806458; //
D_808065D8_jp = 0x808065D8; //
D_808075D8_jp = 0x808075D8; //
D_80807908_jp = 0x80807908; //
D_80808000_jp = 0x80808000; //
D_80808508_jp = 0x80808508; //
D_80808510_jp = 0x80808510; //
D_80808520_jp = 0x80808520; // type:u8

// .rodata

RO_STR_80808530_jp = 0x80808530; // type:asciz
RO_FLT_80808544_jp = 0x80808544; // type:f32
RO_FLT_80808548_jp = 0x80808548; // type:f32
RO_FLT_8080854C_jp = 0x8080854C; // type:f32
RO_FLT_80808550_jp = 0x80808550; // type:f32
RO_FLT_80808554_jp = 0x80808554; // type:f32
RO_FLT_80808558_jp = 0x80808558; // type:f32
RO_FLT_8080855C_jp = 0x8080855C; // type:f32

// .bss

B_80808560_jp = 0x80808560; //
B_80818283_jp = 0x80818283; //
B_80818560_jp = 0x80818560; //
B_80828560_jp = 0x80828560; //
B_80828620_jp = 0x80828620; //
B_808286B0_jp = 0x808286B0; //

// .text

func_80828830_jp = 0x80828830; // type:func
func_80828880_jp = 0x80828880; // type:func
func_808288C8_jp = 0x808288C8; // type:func
func_80828910_jp = 0x80828910; // type:func
func_80828958_jp = 0x80828958; // type:func
func_80828964_jp = 0x80828964; // type:func
func_80828988_jp = 0x80828988; // type:func
func_808289A8_jp = 0x808289A8; // type:func
func_808289C8_jp = 0x808289C8; // type:func
func_80828B1C_jp = 0x80828B1C; // type:func
func_80828BF0_jp = 0x80828BF0; // type:func
func_80828C98_jp = 0x80828C98; // type:func
func_80828E48_jp = 0x80828E48; // type:func
func_80828F14_jp = 0x80828F14; // type:func
func_80828FC4_jp = 0x80828FC4; // type:func
func_80829008_jp = 0x80829008; // type:func
func_80829014_jp = 0x80829014; // type:func

// .data

D_80829300_jp = 0x80829300; // type:u8
D_80829306_jp = 0x80829306; //
D_80829308_jp = 0x80829308; //
D_80829314_jp = 0x80829314; //
D_80829320_jp = 0x80829320; // type:u8
D_8082932A_jp = 0x8082932A; //
D_8082932C_jp = 0x8082932C; //
D_80829340_jp = 0x80829340; //
D_8082934C_jp = 0x8082934C; //
D_80829358_jp = 0x80829358; //
D_80829364_jp = 0x80829364; //

// .rodata

RO_FLT_80829370_jp = 0x80829370; // type:f32
RO_FLT_80829374_jp = 0x80829374; // type:f32
RO_FLT_80829378_jp = 0x80829378; // type:f32

// .text

func_80829470_jp = 0x80829470; // type:func
func_80829504_jp = 0x80829504; // type:func
func_80829554_jp = 0x80829554; // type:func
func_808295C4_jp = 0x808295C4; // type:func
func_808296B0_jp = 0x808296B0; // type:func
func_80829784_jp = 0x80829784; // type:func
func_808297A8_jp = 0x808297A8; // type:func
func_808297B4_jp = 0x808297B4; // type:func
func_80829820_jp = 0x80829820; // type:func
func_808298E0_jp = 0x808298E0; // type:func
func_808299B0_jp = 0x808299B0; // type:func
func_80829A80_jp = 0x80829A80; // type:func
func_80829B60_jp = 0x80829B60; // type:func
func_80829CC8_jp = 0x80829CC8; // type:func
func_80829D70_jp = 0x80829D70; // type:func
func_80829DB4_jp = 0x80829DB4; // type:func
func_80829DC0_jp = 0x80829DC0; // type:func

// .data

D_80829E70_jp = 0x80829E70; //
D_80829EE8_jp = 0x80829EE8; //
D_80829EF4_jp = 0x80829EF4; //
D_80829EFC_jp = 0x80829EFC; //
D_80829F0C_jp = 0x80829F0C; //
D_80829F14_jp = 0x80829F14; //
D_80829F24_jp = 0x80829F24; //
D_80829F34_jp = 0x80829F34; //
D_80829F4C_jp = 0x80829F4C; //

// .rodata

RO_FLT_80829F70_jp = 0x80829F70; // type:f32
RO_FLT_80829F74_jp = 0x80829F74; // type:f32
RO_FLT_80829F78_jp = 0x80829F78; // type:f32
RO_FLT_80829F7C_jp = 0x80829F7C; // type:f32
RO_FLT_80829F80_jp = 0x80829F80; // type:f32
RO_FLT_80829F84_jp = 0x80829F84; // type:f32

// .text

func_8082A070_jp = 0x8082A070; // type:func
func_8082A0EC_jp = 0x8082A0EC; // type:func
func_8082A10C_jp = 0x8082A10C; // type:func
func_8082A12C_jp = 0x8082A12C; // type:func
func_8082A14C_jp = 0x8082A14C; // type:func
func_8082A224_jp = 0x8082A224; // type:func
func_8082A314_jp = 0x8082A314; // type:func
func_8082A3D8_jp = 0x8082A3D8; // type:func
func_8082A400_jp = 0x8082A400; // type:func
func_8082A43C_jp = 0x8082A43C; // type:func
func_8082A46C_jp = 0x8082A46C; // type:func
func_8082A580_jp = 0x8082A580; // type:func
func_8082A648_jp = 0x8082A648; // type:func
func_8082A6C0_jp = 0x8082A6C0; // type:func
func_8082A6EC_jp = 0x8082A6EC; // type:func
func_8082A7B0_jp = 0x8082A7B0; // type:func
func_8082A7E4_jp = 0x8082A7E4; // type:func
func_8082A814_jp = 0x8082A814; // type:func
func_8082A91C_jp = 0x8082A91C; // type:func
func_8082A9EC_jp = 0x8082A9EC; // type:func
func_8082AAE0_jp = 0x8082AAE0; // type:func
func_8082ABC8_jp = 0x8082ABC8; // type:func
func_8082ABE4_jp = 0x8082ABE4; // type:func
func_8082AC44_jp = 0x8082AC44; // type:func
func_8082ACA4_jp = 0x8082ACA4; // type:func
func_8082AD18_jp = 0x8082AD18; // type:func
func_8082ADC4_jp = 0x8082ADC4; // type:func
func_8082ADF0_jp = 0x8082ADF0; // type:func
func_8082AE1C_jp = 0x8082AE1C; // type:func
func_8082B1A8_jp = 0x8082B1A8; // type:func
func_8082B514_jp = 0x8082B514; // type:func
func_8082B5DC_jp = 0x8082B5DC; // type:func
func_8082B670_jp = 0x8082B670; // type:func
func_8082B6D8_jp = 0x8082B6D8; // type:func
func_8082B834_jp = 0x8082B834; // type:func
func_8082B894_jp = 0x8082B894; // type:func
func_8082BBCC_jp = 0x8082BBCC; // type:func
func_8082BC60_jp = 0x8082BC60; // type:func
func_8082BCA4_jp = 0x8082BCA4; // type:func
func_8082BCE4_jp = 0x8082BCE4; // type:func
func_8082BE54_jp = 0x8082BE54; // type:func
func_8082BEC0_jp = 0x8082BEC0; // type:func
func_8082BF2C_jp = 0x8082BF2C; // type:func
func_8082C098_jp = 0x8082C098; // type:func
func_8082C128_jp = 0x8082C128; // type:func
func_8082C1A4_jp = 0x8082C1A4; // type:func
func_8082C374_jp = 0x8082C374; // type:func
func_8082C6C0_jp = 0x8082C6C0; // type:func
func_8082C7F8_jp = 0x8082C7F8; // type:func
func_8082C84C_jp = 0x8082C84C; // type:func
func_8082CAD8_jp = 0x8082CAD8; // type:func
func_8082CC1C_jp = 0x8082CC1C; // type:func
func_8082CCF0_jp = 0x8082CCF0; // type:func
func_8082CD98_jp = 0x8082CD98; // type:func
func_8082CDE0_jp = 0x8082CDE0; // type:func
func_8082CE18_jp = 0x8082CE18; // type:func
func_8082CE2C_jp = 0x8082CE2C; // type:func
func_8082CEBC_jp = 0x8082CEBC; // type:func
func_8082CF60_jp = 0x8082CF60; // type:func
func_8082CF74_jp = 0x8082CF74; // type:func
func_8082CF88_jp = 0x8082CF88; // type:func
func_8082CFF8_jp = 0x8082CFF8; // type:func
func_8082D03C_jp = 0x8082D03C; // type:func
func_8082D08C_jp = 0x8082D08C; // type:func
func_8082D198_jp = 0x8082D198; // type:func
func_8082D1F0_jp = 0x8082D1F0; // type:func
func_8082D230_jp = 0x8082D230; // type:func
func_8082D29C_jp = 0x8082D29C; // type:func
func_8082D41C_jp = 0x8082D41C; // type:func
func_8082D4E0_jp = 0x8082D4E0; // type:func
func_8082D98C_jp = 0x8082D98C; // type:func
func_8082DA58_jp = 0x8082DA58; // type:func
func_8082DA64_jp = 0x8082DA64; // type:func
func_8082DF6C_jp = 0x8082DF6C; // type:func
func_8082E470_jp = 0x8082E470; // type:func
func_8082E4E0_jp = 0x8082E4E0; // type:func
func_8082E590_jp = 0x8082E590; // type:func
func_8082EA20_jp = 0x8082EA20; // type:func
func_8082EAC0_jp = 0x8082EAC0; // type:func
func_8082EADC_jp = 0x8082EADC; // type:func
func_8082EAF0_jp = 0x8082EAF0; // type:func
func_8082EB30_jp = 0x8082EB30; // type:func
func_8082EBC8_jp = 0x8082EBC8; // type:func
func_8082F09C_jp = 0x8082F09C; // type:func
D_8082F138_jp = 0x8082F138; //
D_8082F274_jp = 0x8082F274; //
D_8082F424_jp = 0x8082F424; //
D_8082F4D0_jp = 0x8082F4D0; //
D_8082F6F4_jp = 0x8082F6F4; //
D_8082F7A0_jp = 0x8082F7A0; //
D_8082F930_jp = 0x8082F930; //
func_8082F93C_jp = 0x8082F93C; // type:func
D_8082F964_jp = 0x8082F964; //
D_8082F994_jp = 0x8082F994; //
D_808302C4_jp = 0x808302C4; //
D_808302D0_jp = 0x808302D0; //
D_808303C8_jp = 0x808303C8; //
D_8083055C_jp = 0x8083055C; //
D_808305C0_jp = 0x808305C0; //
D_808307D0_jp = 0x808307D0; //
D_80830898_jp = 0x80830898; //
D_808308AC_jp = 0x808308AC; //
D_80830FCC_jp = 0x80830FCC; //
D_80831F88_jp = 0x80831F88; //
D_80831FA8_jp = 0x80831FA8; //
D_80832030_jp = 0x80832030; //
D_80832044_jp = 0x80832044; //
D_8083205C_jp = 0x8083205C; //
D_80832074_jp = 0x80832074; //
D_80832178_jp = 0x80832178; //
D_80832484_jp = 0x80832484; //
func_808328DC_jp = 0x808328DC; // type:func
func_808329A4_jp = 0x808329A4; // type:func
func_808329B0_jp = 0x808329B0; // type:func
func_80832A30_jp = 0x80832A30; // type:func
func_80832A88_jp = 0x80832A88; // type:func
func_80832AB0_jp = 0x80832AB0; // type:func
func_80832D30_jp = 0x80832D30; // type:func
func_80832DB0_jp = 0x80832DB0; // type:func
func_80832DB8_jp = 0x80832DB8; // type:func
func_80832DC8_jp = 0x80832DC8; // type:func
func_80832DD4_jp = 0x80832DD4; // type:func
func_80832DDC_jp = 0x80832DDC; // type:func
func_80832EA8_jp = 0x80832EA8; // type:func
func_80832F74_jp = 0x80832F74; // type:func
func_80833040_jp = 0x80833040; // type:func
func_80833118_jp = 0x80833118; // type:func
func_80833160_jp = 0x80833160; // type:func
func_8083317C_jp = 0x8083317C; // type:func
func_80833184_jp = 0x80833184; // type:func
func_8083324C_jp = 0x8083324C; // type:func
func_80833254_jp = 0x80833254; // type:func
func_80833518_jp = 0x80833518; // type:func
func_80833824_jp = 0x80833824; // type:func
func_80833ADC_jp = 0x80833ADC; // type:func
func_80833C04_jp = 0x80833C04; // type:func
func_80833C0C_jp = 0x80833C0C; // type:func
func_80833D7C_jp = 0x80833D7C; // type:func
func_80833F30_jp = 0x80833F30; // type:func
func_80833F38_jp = 0x80833F38; // type:func
func_80833F40_jp = 0x80833F40; // type:func
func_808342D4_jp = 0x808342D4; // type:func
func_808342DC_jp = 0x808342DC; // type:func
func_808345B8_jp = 0x808345B8; // type:func
func_80834E7C_jp = 0x80834E7C; // type:func
func_80835098_jp = 0x80835098; // type:func
func_808352D8_jp = 0x808352D8; // type:func
func_80835460_jp = 0x80835460; // type:func
func_80835484_jp = 0x80835484; // type:func
func_808355CC_jp = 0x808355CC; // type:func
func_808355D4_jp = 0x808355D4; // type:func
func_80835778_jp = 0x80835778; // type:func
func_80835784_jp = 0x80835784; // type:func
func_80835790_jp = 0x80835790; // type:func
func_80835A74_jp = 0x80835A74; // type:func
func_80835A80_jp = 0x80835A80; // type:func
func_80835A8C_jp = 0x80835A8C; // type:func

// .data

D_80835DA0_jp = 0x80835DA0; // type:s8
D_80835DA4_jp = 0x80835DA4; // type:u8
D_80835DA8_jp = 0x80835DA8; // type:u8
D_80835DAC_jp = 0x80835DAC; //
D_80835DB0_jp = 0x80835DB0; //
D_80835DB4_jp = 0x80835DB4; //
D_80835DB8_jp = 0x80835DB8; //
D_80835DBC_jp = 0x80835DBC; // type:s8
D_80835DC0_jp = 0x80835DC0; // type:s8
D_80835DD0_jp = 0x80835DD0; // type:s64
D_80835F40_jp = 0x80835F40; // type:s64
D_80836010_jp = 0x80836010; //
D_80836754_jp = 0x80836754; //
D_80836770_jp = 0x80836770; // type:s64
D_80837770_jp = 0x80837770; // type:u8
D_80837830_jp = 0x80837830; //
D_80837840_jp = 0x80837840; //
D_808378A4_jp = 0x808378A4; //
D_808378B4_jp = 0x808378B4; //
D_80837964_jp = 0x80837964; //
D_80837968_jp = 0x80837968; //
D_8083796C_jp = 0x8083796C; // type:u8
D_808379BC_jp = 0x808379BC; //
D_80837BBC_jp = 0x80837BBC; //
D_80837BC0_jp = 0x80837BC0; //
D_80837BC4_jp = 0x80837BC4; // type:u8
D_80837BE4_jp = 0x80837BE4; // type:u8
D_80837BF3_jp = 0x80837BF3; // type:u8
D_80837BF4_jp = 0x80837BF4; // type:u8
D_80837C14_jp = 0x80837C14; // type:u8
D_80837C24_jp = 0x80837C24; //
D_80837C33_jp = 0x80837C33; // type:u8
D_80837C64_jp = 0x80837C64; //
D_80837CA4_jp = 0x80837CA4; //
D_80837CB4_jp = 0x80837CB4; // type:s8
D_80837D08_jp = 0x80837D08; //
D_80837D0C_jp = 0x80837D0C; //
D_80837D10_jp = 0x80837D10; //
D_80837D14_jp = 0x80837D14; //
D_80837D18_jp = 0x80837D18; //
D_80837D20_jp = 0x80837D20; //
D_80837D28_jp = 0x80837D28; //
D_80837D30_jp = 0x80837D30; //
D_8083E870_jp = 0x8083E870; //
D_80844360_jp = 0x80844360; //
D_80846C30_jp = 0x80846C30; //
D_80848710_jp = 0x80848710; //
D_8084C8A0_jp = 0x8084C8A0; //
D_8084FB00_jp = 0x8084FB00; //
D_808517E8_jp = 0x808517E8; //
D_808517F0_jp = 0x808517F0; //
D_80851814_jp = 0x80851814; //
D_80851838_jp = 0x80851838; //
D_80851840_jp = 0x80851840; //
D_8085188C_jp = 0x8085188C; //
D_80851890_jp = 0x80851890; //
D_808518A0_jp = 0x808518A0; //
D_80851EC8_jp = 0x80851EC8; //
D_80852198_jp = 0x80852198; //

// .rodata

RO_80852290_jp = 0x80852290; //
RO_80852294_jp = 0x80852294; //
RO_STR_8085229C_jp = 0x8085229C; // type:asciz
RO_STR_808522A0_jp = 0x808522A0; // type:asciz
RO_STR_808522A4_jp = 0x808522A4; // type:asciz
RO_STR_808522A8_jp = 0x808522A8; // type:asciz
RO_STR_808522AC_jp = 0x808522AC; // type:asciz
RO_STR_808522B0_jp = 0x808522B0; // type:asciz
RO_STR_808522B4_jp = 0x808522B4; // type:asciz
RO_STR_808522B8_jp = 0x808522B8; // type:asciz
RO_STR_808522BC_jp = 0x808522BC; // type:asciz
RO_STR_808522C0_jp = 0x808522C0; // type:asciz
RO_STR_808522C4_jp = 0x808522C4; // type:asciz
RO_STR_808522C8_jp = 0x808522C8; // type:asciz
RO_STR_808522CC_jp = 0x808522CC; // type:asciz
RO_STR_808522D0_jp = 0x808522D0; // type:asciz
RO_STR_808522D4_jp = 0x808522D4; // type:asciz
RO_STR_808522D8_jp = 0x808522D8; // type:asciz
RO_STR_808522DC_jp = 0x808522DC; // type:asciz
RO_STR_808522F0_jp = 0x808522F0; // type:asciz
RO_STR_808522F4_jp = 0x808522F4; // type:asciz
RO_STR_808522F8_jp = 0x808522F8; // type:asciz
RO_STR_808522FC_jp = 0x808522FC; // type:asciz
RO_STR_80852300_jp = 0x80852300; // type:asciz
RO_STR_80852304_jp = 0x80852304; // type:asciz
RO_STR_80852308_jp = 0x80852308; // type:asciz
RO_STR_8085230C_jp = 0x8085230C; // type:asciz
RO_STR_80852310_jp = 0x80852310; // type:asciz
RO_STR_80852314_jp = 0x80852314; // type:asciz
RO_STR_80852324_jp = 0x80852324; // type:asciz
RO_STR_80852338_jp = 0x80852338; // type:asciz
RO_STR_80852340_jp = 0x80852340; // type:asciz
jtbl_80852354_jp = 0x80852354; // type:jtbl
jtbl_80852370_jp = 0x80852370; // type:jtbl
jtbl_80852388_jp = 0x80852388; // type:jtbl
RO_FLT_808523A4_jp = 0x808523A4; // type:f32
RO_FLT_808523B0_jp = 0x808523B0; // type:f32
RO_FLT_808523B4_jp = 0x808523B4; // type:f32
RO_FLT_808523B8_jp = 0x808523B8; // type:f32
RO_FLT_80852548_jp = 0x80852548; // type:f32
RO_FLT_8085254C_jp = 0x8085254C; // type:f32
RO_FLT_80852550_jp = 0x80852550; // type:f32
RO_FLT_80852554_jp = 0x80852554; // type:f32
RO_FLT_80852558_jp = 0x80852558; // type:f32
RO_FLT_8085255C_jp = 0x8085255C; // type:f32
RO_FLT_80852560_jp = 0x80852560; // type:f32
RO_FLT_80852564_jp = 0x80852564; // type:f32
RO_FLT_80852568_jp = 0x80852568; // type:f32
RO_FLT_8085256C_jp = 0x8085256C; // type:f32
jtbl_80852570_jp = 0x80852570; // type:jtbl
jtbl_808525C0_jp = 0x808525C0; // type:jtbl
jtbl_808525EC_jp = 0x808525EC; // type:jtbl
jtbl_80852644_jp = 0x80852644; // type:jtbl

// .bss

B_80852690_jp = 0x80852690; //
B_80852694_jp = 0x80852694; //
B_80852698_jp = 0x80852698; // type:s8
B_808526D8_jp = 0x808526D8; // type:u8
B_808526E0_jp = 0x808526E0; //
B_808526E4_jp = 0x808526E4; //
B_808526E8_jp = 0x808526E8; //
B_808526F0_jp = 0x808526F0; //
B_80852708_jp = 0x80852708; //
B_80852728_jp = 0x80852728; //
B_80852740_jp = 0x80852740; //
B_80852760_jp = 0x80852760; //
B_80852778_jp = 0x80852778; //
B_80852780_jp = 0x80852780; //
B_80852930_jp = 0x80852930; //
B_80852948_jp = 0x80852948; //
B_80852950_jp = 0x80852950; //
B_80852960_jp = 0x80852960; //
B_808529A8_jp = 0x808529A8; //
B_808549A8_jp = 0x808549A8; //
B_808549C4_jp = 0x808549C4; // type:s8
B_808549C5_jp = 0x808549C5; // type:s8
B_808549C6_jp = 0x808549C6; //
B_808549C8_jp = 0x808549C8; //
B_808549CC_jp = 0x808549CC; // type:s8
B_808549CD_jp = 0x808549CD; // type:u8
B_808549CE_jp = 0x808549CE; // type:u8
B_808549CF_jp = 0x808549CF; // type:s8
B_808549D0_jp = 0x808549D0; // type:s8
B_808549D1_jp = 0x808549D1; // type:u8
B_808549D2_jp = 0x808549D2; // type:s8
B_808549D3_jp = 0x808549D3; // type:s8
B_808549D4_jp = 0x808549D4; // type:s8
B_808549D5_jp = 0x808549D5; // type:u8
B_808549D6_jp = 0x808549D6; // type:u8
B_808549D7_jp = 0x808549D7; // type:u8
B_808549D8_jp = 0x808549D8; //
B_808549E8_jp = 0x808549E8; // type:u8
B_808549E9_jp = 0x808549E9; // type:s8
B_808549EC_jp = 0x808549EC; //
B_808549F0_jp = 0x808549F0; //
B_80854A08_jp = 0x80854A08; //
B_80854A0C_jp = 0x80854A0C; //
B_80854A10_jp = 0x80854A10; //
B_80854A14_jp = 0x80854A14; //
B_80854A18_jp = 0x80854A18; // type:u8
B_80854A1C_jp = 0x80854A1C; // type:u8
B_80854A20_jp = 0x80854A20; // type:u8
B_80854A23_jp = 0x80854A23; // type:u8
B_80854A26_jp = 0x80854A26; // type:u8
B_80854A28_jp = 0x80854A28; //
B_80854A2C_jp = 0x80854A2C; //
B_80854A30_jp = 0x80854A30; //
B_80854A34_jp = 0x80854A34; //
B_80854A38_jp = 0x80854A38; //
B_80854A3C_jp = 0x80854A3C; //
B_80854A40_jp = 0x80854A40; //
B_80854A44_jp = 0x80854A44; //
B_80854A48_jp = 0x80854A48; // type:s8
B_80854A49_jp = 0x80854A49; // type:s8
B_80854A50_jp = 0x80854A50; //
B_80854AD0_jp = 0x80854AD0; //
B_80854B50_jp = 0x80854B50; //
B_80854B54_jp = 0x80854B54; //
B_80854B58_jp = 0x80854B58; //
B_80854B5C_jp = 0x80854B5C; //
B_80854B60_jp = 0x80854B60; //
B_80854B64_jp = 0x80854B64; //
B_80854B68_jp = 0x80854B68; //
B_80854B6C_jp = 0x80854B6C; //
B_80854B70_jp = 0x80854B70; //
B_80854B74_jp = 0x80854B74; //
B_80854B78_jp = 0x80854B78; //
B_80854B7C_jp = 0x80854B7C; //
B_80854B80_jp = 0x80854B80; //
B_80854B84_jp = 0x80854B84; // type:s8
B_80854B85_jp = 0x80854B85; // type:s8
B_80854B88_jp = 0x80854B88; //
B_80854B8C_jp = 0x80854B8C; // type:s8
B_80854B90_jp = 0x80854B90; // type:s16
B_80854B92_jp = 0x80854B92; // type:s16
B_80854BA8_jp = 0x80854BA8; //
B_80854BB0_jp = 0x80854BB0; // type:u8
B_80854BF0_jp = 0x80854BF0; // type:u8
B_80854C30_jp = 0x80854C30; // type:u8
B_80854C70_jp = 0x80854C70; // type:u8
B_80854C7C_jp = 0x80854C7C; // type:u16
B_80854CB0_jp = 0x80854CB0; // type:s8
B_80854CF0_jp = 0x80854CF0; // type:s8
B_80854D30_jp = 0x80854D30; // type:u8
B_80854D70_jp = 0x80854D70; //
B_80854DB0_jp = 0x80854DB0; //
B_80854DF0_jp = 0x80854DF0; // type:u8
B_80854DF4_jp = 0x80854DF4; //
B_80854E10_jp = 0x80854E10; // type:u8
B_80854E18_jp = 0x80854E18; //
B_80854E41_jp = 0x80854E41; // type:u8
B_80854E4D_jp = 0x80854E4D; // type:u8
B_80854E60_jp = 0x80854E60; //
B_80854E6D_jp = 0x80854E6D; // type:s8
B_80854E70_jp = 0x80854E70; //
B_80854E78_jp = 0x80854E78; //
B_80855260_jp = 0x80855260; // type:s8
B_80855280_jp = 0x80855280; // type:u8
B_808552A0_jp = 0x808552A0; // type:u8
B_808552E0_jp = 0x808552E0; // type:u8
B_80855300_jp = 0x80855300; //
B_80855310_jp = 0x80855310; // type:s8
B_80855320_jp = 0x80855320; //
B_80855338_jp = 0x80855338; //
B_80855740_jp = 0x80855740; //
B_80855770_jp = 0x80855770; //
B_80855780_jp = 0x80855780; // type:s16
B_808557B8_jp = 0x808557B8; //
B_808557C0_jp = 0x808557C0; //
B_808557C4_jp = 0x808557C4; //
B_FLT_808557C8_jp = 0x808557C8; // type:f32
B_808557CC_jp = 0x808557CC; //
B_808557D0_jp = 0x808557D0; //
B_808557DC_jp = 0x808557DC; // type:s16
B_808557E2_jp = 0x808557E2; //
B_808557E4_jp = 0x808557E4; //
B_808557EC_jp = 0x808557EC; //
B_808557F0_jp = 0x808557F0; //
B_80855800_jp = 0x80855800; //

// .text

func_8085B6B0_jp = 0x8085B6B0; // type:func
func_8085B718_jp = 0x8085B718; // type:func
func_8085B9D4_jp = 0x8085B9D4; // type:func
func_8085BA1C_jp = 0x8085BA1C; // type:func
func_8085BA28_jp = 0x8085BA28; // type:func

// .rodata

RO_FLT_8085BA70_jp = 0x8085BA70; // type:f32

// .text

func_8085BAC0_jp = 0x8085BAC0; // type:func
func_8085BCD8_jp = 0x8085BCD8; // type:func
func_8085BD08_jp = 0x8085BD08; // type:func
func_8085C20C_jp = 0x8085C20C; // type:func
func_8085C7A4_jp = 0x8085C7A4; // type:func
func_8085C7B8_jp = 0x8085C7B8; // type:func
func_8085CE18_jp = 0x8085CE18; // type:func
func_8085D094_jp = 0x8085D094; // type:func
func_8085D128_jp = 0x8085D128; // type:func
func_8085D244_jp = 0x8085D244; // type:func
func_8085D2EC_jp = 0x8085D2EC; // type:func
func_8085D358_jp = 0x8085D358; // type:func
func_8085D398_jp = 0x8085D398; // type:func
func_8085D43C_jp = 0x8085D43C; // type:func
func_8085D4D4_jp = 0x8085D4D4; // type:func
func_8085D500_jp = 0x8085D500; // type:func
func_8085D5D4_jp = 0x8085D5D4; // type:func
func_8085D638_jp = 0x8085D638; // type:func
func_8085D674_jp = 0x8085D674; // type:func
func_8085D718_jp = 0x8085D718; // type:func
func_8085D860_jp = 0x8085D860; // type:func
func_8085D92C_jp = 0x8085D92C; // type:func
func_8085DA08_jp = 0x8085DA08; // type:func
func_8085DA28_jp = 0x8085DA28; // type:func
func_8085DA9C_jp = 0x8085DA9C; // type:func
func_8085DAEC_jp = 0x8085DAEC; // type:func

// .data

D_8085DCD0_jp = 0x8085DCD0; //
D_8085DCE0_jp = 0x8085DCE0; //
D_8085DCE8_jp = 0x8085DCE8; //
D_8085DCF8_jp = 0x8085DCF8; //
D_8085DD00_jp = 0x8085DD00; //
D_8085DD08_jp = 0x8085DD08; //
D_8085DD10_jp = 0x8085DD10; //
D_8085DD38_jp = 0x8085DD38; //
D_8085DD40_jp = 0x8085DD40; //
D_8085DD48_jp = 0x8085DD48; //
D_8085DD68_jp = 0x8085DD68; //
D_8085DD88_jp = 0x8085DD88; //
D_8085DD90_jp = 0x8085DD90; //
D_8085DE90_jp = 0x8085DE90; //
D_8085DE98_jp = 0x8085DE98; //
D_8085DF88_jp = 0x8085DF88; //
D_8085DF90_jp = 0x8085DF90; //
D_8085DF98_jp = 0x8085DF98; //
D_8085DFD0_jp = 0x8085DFD0; //
D_8085E020_jp = 0x8085E020; //
D_8085E028_jp = 0x8085E028; //
D_8085E328_jp = 0x8085E328; //
D_8085E428_jp = 0x8085E428; //
D_8085E448_jp = 0x8085E448; //
D_8085E460_jp = 0x8085E460; //
D_8085E4A0_jp = 0x8085E4A0; //
D_8085E4D0_jp = 0x8085E4D0; //
D_8085E4E8_jp = 0x8085E4E8; //
D_8085E770_jp = 0x8085E770; //
D_8085E790_jp = 0x8085E790; //
D_8085E7B0_jp = 0x8085E7B0; //
D_8085E7D0_jp = 0x8085E7D0; // type:u8
D_FLT_8085E7E8_jp = 0x8085E7E8; // type:f32
D_8085E938_jp = 0x8085E938; //
D_8085E948_jp = 0x8085E948; //

// .rodata

RO_STR_8085E970_jp = 0x8085E970; // type:asciz
RO_STR_8085E984_jp = 0x8085E984; // type:asciz
RO_FLT_8085E998_jp = 0x8085E998; // type:f32
RO_FLT_8085E99C_jp = 0x8085E99C; // type:f32
RO_FLT_8085E9A0_jp = 0x8085E9A0; // type:f32
RO_FLT_8085E9A4_jp = 0x8085E9A4; // type:f32

// .bss

B_8085E9B0_jp = 0x8085E9B0; //
B_80860000_jp = 0x80860000; // type:s16
B_80860002_jp = 0x80860002; // type:s16
B_80860004_jp = 0x80860004; // type:s16
B_80860006_jp = 0x80860006; // type:s16
B_80860008_jp = 0x80860008; // type:s16
B_8086000A_jp = 0x8086000A; // type:s16
B_8086000C_jp = 0x8086000C; // type:s16
B_8086000E_jp = 0x8086000E; // type:s16
B_8086E9B0_jp = 0x8086E9B0; //
B_8086F020_jp = 0x8086F020; //
B_8086F024_jp = 0x8086F024; //
B_8086F028_jp = 0x8086F028; //
B_8086F02C_jp = 0x8086F02C; //
B_8086F030_jp = 0x8086F030; //
B_8086F034_jp = 0x8086F034; //
B_8086F046_jp = 0x8086F046; // type:s16
D_8086F0E0_jp = 0x8086F0E0; //

// .text

func_8086F310_jp = 0x8086F310; // type:func
func_8086F35C_jp = 0x8086F35C; // type:func
func_8086F44C_jp = 0x8086F44C; // type:func
func_8086F4AC_jp = 0x8086F4AC; // type:func
func_8086F644_jp = 0x8086F644; // type:func
func_8086F66C_jp = 0x8086F66C; // type:func
func_8086F764_jp = 0x8086F764; // type:func
func_8086F910_jp = 0x8086F910; // type:func
func_8086F960_jp = 0x8086F960; // type:func
func_8086F9D8_jp = 0x8086F9D8; // type:func
func_8086FA30_jp = 0x8086FA30; // type:func
func_8086FA88_jp = 0x8086FA88; // type:func
func_8086FB04_jp = 0x8086FB04; // type:func
func_8086FB9C_jp = 0x8086FB9C; // type:func
func_8086FBE4_jp = 0x8086FBE4; // type:func
func_8086FCF4_jp = 0x8086FCF4; // type:func
func_8086FD3C_jp = 0x8086FD3C; // type:func
func_80870334_jp = 0x80870334; // type:func
func_8087047C_jp = 0x8087047C; // type:func
func_8087072C_jp = 0x8087072C; // type:func
func_8087080C_jp = 0x8087080C; // type:func
func_80870974_jp = 0x80870974; // type:func
func_80870A1C_jp = 0x80870A1C; // type:func
func_80870AC4_jp = 0x80870AC4; // type:func
func_80870B20_jp = 0x80870B20; // type:func
func_80870BA0_jp = 0x80870BA0; // type:func
func_80870BCC_jp = 0x80870BCC; // type:func
func_80870C6C_jp = 0x80870C6C; // type:func
func_80871570_jp = 0x80871570; // type:func
func_808715C8_jp = 0x808715C8; // type:func
func_80871664_jp = 0x80871664; // type:func
func_80871708_jp = 0x80871708; // type:func
func_80871760_jp = 0x80871760; // type:func
func_808717BC_jp = 0x808717BC; // type:func
func_80871894_jp = 0x80871894; // type:func
func_808718E0_jp = 0x808718E0; // type:func
func_808719FC_jp = 0x808719FC; // type:func
func_80871A60_jp = 0x80871A60; // type:func
func_80871B44_jp = 0x80871B44; // type:func
func_80871C18_jp = 0x80871C18; // type:func
func_80871CF8_jp = 0x80871CF8; // type:func
func_80871DB4_jp = 0x80871DB4; // type:func
func_80871ECC_jp = 0x80871ECC; // type:func
func_80871F74_jp = 0x80871F74; // type:func
func_8087207C_jp = 0x8087207C; // type:func
func_80872118_jp = 0x80872118; // type:func
func_80872580_jp = 0x80872580; // type:func
func_808725C8_jp = 0x808725C8; // type:func
func_80872684_jp = 0x80872684; // type:func
func_808726B0_jp = 0x808726B0; // type:func
func_80872748_jp = 0x80872748; // type:func
func_808727E0_jp = 0x808727E0; // type:func
func_8087287C_jp = 0x8087287C; // type:func
func_80872A34_jp = 0x80872A34; // type:func
func_80872B54_jp = 0x80872B54; // type:func
func_80872DEC_jp = 0x80872DEC; // type:func
func_80872E60_jp = 0x80872E60; // type:func
func_80872E84_jp = 0x80872E84; // type:func
func_808731EC_jp = 0x808731EC; // type:func
func_80873278_jp = 0x80873278; // type:func
func_80873348_jp = 0x80873348; // type:func
func_80873428_jp = 0x80873428; // type:func
func_8087344C_jp = 0x8087344C; // type:func
func_80873498_jp = 0x80873498; // type:func
func_80873510_jp = 0x80873510; // type:func
func_80873694_jp = 0x80873694; // type:func
func_808736B8_jp = 0x808736B8; // type:func
func_808736DC_jp = 0x808736DC; // type:func
func_80873700_jp = 0x80873700; // type:func
func_80873724_jp = 0x80873724; // type:func
func_808737F4_jp = 0x808737F4; // type:func
func_808738C8_jp = 0x808738C8; // type:func
func_80873968_jp = 0x80873968; // type:func
func_808739B0_jp = 0x808739B0; // type:func
func_80873ADC_jp = 0x80873ADC; // type:func
func_80873C88_jp = 0x80873C88; // type:func
func_80873F38_jp = 0x80873F38; // type:func
func_80873FB4_jp = 0x80873FB4; // type:func
func_80874184_jp = 0x80874184; // type:func
D_808742A8_jp = 0x808742A8; //
func_80874328_jp = 0x80874328; // type:func
func_80874394_jp = 0x80874394; // type:func
func_80874444_jp = 0x80874444; // type:func
func_80874680_jp = 0x80874680; // type:func
func_808746A8_jp = 0x808746A8; // type:func
func_808746F8_jp = 0x808746F8; // type:func
func_80874720_jp = 0x80874720; // type:func
func_80874770_jp = 0x80874770; // type:func
func_808747D0_jp = 0x808747D0; // type:func
func_808748B0_jp = 0x808748B0; // type:func
func_80874B1C_jp = 0x80874B1C; // type:func
func_80874C8C_jp = 0x80874C8C; // type:func
func_80874E08_jp = 0x80874E08; // type:func
func_80874EA4_jp = 0x80874EA4; // type:func
func_808750DC_jp = 0x808750DC; // type:func
func_80875180_jp = 0x80875180; // type:func
func_80875214_jp = 0x80875214; // type:func
func_8087529C_jp = 0x8087529C; // type:func
func_808753A4_jp = 0x808753A4; // type:func
func_80875434_jp = 0x80875434; // type:func
func_80875610_jp = 0x80875610; // type:func
func_808757C4_jp = 0x808757C4; // type:func
func_80875888_jp = 0x80875888; // type:func
func_808759C8_jp = 0x808759C8; // type:func
func_80875A84_jp = 0x80875A84; // type:func
func_80875AB8_jp = 0x80875AB8; // type:func
func_80875AD0_jp = 0x80875AD0; // type:func
func_80875B60_jp = 0x80875B60; // type:func
func_80875B88_jp = 0x80875B88; // type:func
func_80875BF4_jp = 0x80875BF4; // type:func
func_80875C60_jp = 0x80875C60; // type:func
func_80875CF0_jp = 0x80875CF0; // type:func
func_80875D38_jp = 0x80875D38; // type:func
func_80875DB0_jp = 0x80875DB0; // type:func
func_80875E20_jp = 0x80875E20; // type:func
func_80875EE4_jp = 0x80875EE4; // type:func
func_80876004_jp = 0x80876004; // type:func
func_80876204_jp = 0x80876204; // type:func
func_808764BC_jp = 0x808764BC; // type:func
func_80876558_jp = 0x80876558; // type:func
func_80876A94_jp = 0x80876A94; // type:func
func_80876B18_jp = 0x80876B18; // type:func
func_80876C50_jp = 0x80876C50; // type:func
func_80876D90_jp = 0x80876D90; // type:func
func_80877290_jp = 0x80877290; // type:func
func_808772C8_jp = 0x808772C8; // type:func
func_8087792C_jp = 0x8087792C; // type:func
func_80877B0C_jp = 0x80877B0C; // type:func
func_80877EC4_jp = 0x80877EC4; // type:func
func_80877FF4_jp = 0x80877FF4; // type:func
func_808782A4_jp = 0x808782A4; // type:func
func_808783F0_jp = 0x808783F0; // type:func
func_80878508_jp = 0x80878508; // type:func
func_80878648_jp = 0x80878648; // type:func
func_808787A0_jp = 0x808787A0; // type:func
func_80878904_jp = 0x80878904; // type:func

// .data

D_80878920_jp = 0x80878920; //
D_8087892C_jp = 0x8087892C; //
D_80878930_jp = 0x80878930; //
D_80878934_jp = 0x80878934; //
D_80878938_jp = 0x80878938; //
D_8087893C_jp = 0x8087893C; //
D_80878940_jp = 0x80878940; //
D_80878948_jp = 0x80878948; //
D_80878958_jp = 0x80878958; //
D_8087895C_jp = 0x8087895C; //
D_80878964_jp = 0x80878964; //
D_80878968_jp = 0x80878968; //
D_8087896C_jp = 0x8087896C; //
D_80878970_jp = 0x80878970; //
D_80878974_jp = 0x80878974; //
D_80878978_jp = 0x80878978; //
D_8087897C_jp = 0x8087897C; //
D_80878984_jp = 0x80878984; //
D_80878990_jp = 0x80878990; //
D_80878994_jp = 0x80878994; //
D_80878998_jp = 0x80878998; //
D_8087899C_jp = 0x8087899C; //
D_808789A8_jp = 0x808789A8; //
D_808789AC_jp = 0x808789AC; //
D_808789B4_jp = 0x808789B4; //
D_808789BC_jp = 0x808789BC; //
D_808789CC_jp = 0x808789CC; //
D_808789D0_jp = 0x808789D0; //
D_808789D8_jp = 0x808789D8; //
D_808789DC_jp = 0x808789DC; //
D_808789EC_jp = 0x808789EC; //
D_80878A00_jp = 0x80878A00; // type:s16
D_80878A02_jp = 0x80878A02; // type:s16
D_80878AC0_jp = 0x80878AC0; //
D_80878AC4_jp = 0x80878AC4; //
D_80878ACC_jp = 0x80878ACC; //
D_80878AD4_jp = 0x80878AD4; //
D_80878AD8_jp = 0x80878AD8; //
D_80878ADC_jp = 0x80878ADC; //
D_80878ADE_jp = 0x80878ADE; //
D_80878AE0_jp = 0x80878AE0; //
D_80878AEC_jp = 0x80878AEC; //
D_80878AF8_jp = 0x80878AF8; //
D_80878B04_jp = 0x80878B04; //
D_80878B10_jp = 0x80878B10; //
D_80878B1C_jp = 0x80878B1C; //
D_80878B28_jp = 0x80878B28; //
D_80878B34_jp = 0x80878B34; //
D_80878B40_jp = 0x80878B40; //
D_80878B4C_jp = 0x80878B4C; //
D_80878B58_jp = 0x80878B58; //
D_80878B64_jp = 0x80878B64; //
D_80878B70_jp = 0x80878B70; //
D_80878B7C_jp = 0x80878B7C; //
D_80878B88_jp = 0x80878B88; //
D_80878B94_jp = 0x80878B94; //
D_80878BA0_jp = 0x80878BA0; //
D_80878BAC_jp = 0x80878BAC; //
D_80878BB8_jp = 0x80878BB8; //
D_80878BC4_jp = 0x80878BC4; //
D_80878BD0_jp = 0x80878BD0; //
D_80878BDC_jp = 0x80878BDC; //
D_80878BE8_jp = 0x80878BE8; //
D_80878BF4_jp = 0x80878BF4; //
D_80878C00_jp = 0x80878C00; //
D_80878C0C_jp = 0x80878C0C; //
D_80878C18_jp = 0x80878C18; //
D_80878C24_jp = 0x80878C24; //
D_80878C30_jp = 0x80878C30; //
D_80878C3C_jp = 0x80878C3C; //
D_80878C48_jp = 0x80878C48; //
D_80878C54_jp = 0x80878C54; //
D_80878C60_jp = 0x80878C60; //
D_80878C6C_jp = 0x80878C6C; //
D_80878C78_jp = 0x80878C78; //
D_80878C84_jp = 0x80878C84; //
D_80878C90_jp = 0x80878C90; //
D_80878C9C_jp = 0x80878C9C; //
D_80878CA8_jp = 0x80878CA8; //
D_80878CB4_jp = 0x80878CB4; //
D_80878CC0_jp = 0x80878CC0; //
D_80878CD0_jp = 0x80878CD0; //
D_80878CE0_jp = 0x80878CE0; //
D_80878CF4_jp = 0x80878CF4; //
D_80878D04_jp = 0x80878D04; //
D_80878D18_jp = 0x80878D18; //
D_80878D24_jp = 0x80878D24; //
D_80878D2C_jp = 0x80878D2C; //
D_80878D3C_jp = 0x80878D3C; //
D_80878D48_jp = 0x80878D48; //
D_80878D54_jp = 0x80878D54; //
D_80878D60_jp = 0x80878D60; //
D_80878D70_jp = 0x80878D70; //
D_80878D80_jp = 0x80878D80; //
D_80878D90_jp = 0x80878D90; //
D_80878DA0_jp = 0x80878DA0; //
D_80878DAC_jp = 0x80878DAC; //
D_80878DB8_jp = 0x80878DB8; //
D_80878DC8_jp = 0x80878DC8; //
D_80878DD4_jp = 0x80878DD4; //
D_80878DE4_jp = 0x80878DE4; //
D_80878DF4_jp = 0x80878DF4; //
D_80878E00_jp = 0x80878E00; //
D_80878E10_jp = 0x80878E10; //
D_80878E18_jp = 0x80878E18; //
D_80878E20_jp = 0x80878E20; //
D_80878E2C_jp = 0x80878E2C; //
D_80878E3C_jp = 0x80878E3C; //
D_80878E50_jp = 0x80878E50; //
D_80878E58_jp = 0x80878E58; //
D_80878E60_jp = 0x80878E60; //
D_80878E68_jp = 0x80878E68; //
D_80878E70_jp = 0x80878E70; //
D_80878E80_jp = 0x80878E80; //
D_80878E94_jp = 0x80878E94; //
D_80878EA4_jp = 0x80878EA4; //
D_80878EB0_jp = 0x80878EB0; //
D_80878EB8_jp = 0x80878EB8; //
D_80878EC0_jp = 0x80878EC0; //
D_80878ED4_jp = 0x80878ED4; //
D_80878EE0_jp = 0x80878EE0; //
D_80878EE8_jp = 0x80878EE8; //
D_80878EF0_jp = 0x80878EF0; //
D_80878EF8_jp = 0x80878EF8; //
D_80878F00_jp = 0x80878F00; //
D_80878F08_jp = 0x80878F08; //
D_80878F0C_jp = 0x80878F0C; //
D_80878FD8_jp = 0x80878FD8; //
D_80878FDC_jp = 0x80878FDC; //
D_80879068_jp = 0x80879068; //
D_80879070_jp = 0x80879070; //
D_80879074_jp = 0x80879074; //
D_8087907C_jp = 0x8087907C; //
D_8087913C_jp = 0x8087913C; //
D_80879144_jp = 0x80879144; //
D_80879148_jp = 0x80879148; //
D_FLT_80879180_jp = 0x80879180; // type:f32
D_FLT_80879198_jp = 0x80879198; // type:f32
D_FLT_808791B0_jp = 0x808791B0; // type:f32
D_FLT_808791D0_jp = 0x808791D0; // type:f32
D_FLT_808791F0_jp = 0x808791F0; // type:f32
D_FLT_808791F4_jp = 0x808791F4; // type:f32
D_FLT_808791F8_jp = 0x808791F8; // type:f32
D_FLT_808791FC_jp = 0x808791FC; // type:f32
D_FLT_80879200_jp = 0x80879200; // type:f32
D_FLT_80879208_jp = 0x80879208; // type:f32
D_FLT_80879210_jp = 0x80879210; // type:f32
D_FLT_80879250_jp = 0x80879250; // type:f32
D_80879290_jp = 0x80879290; // type:u16
D_80879298_jp = 0x80879298; //
D_808792A8_jp = 0x808792A8; // type:u16
D_808792B8_jp = 0x808792B8; //
D_808792CC_jp = 0x808792CC; //
D_8087930C_jp = 0x8087930C; //
D_8087934C_jp = 0x8087934C; //
D_8087938C_jp = 0x8087938C; //
D_8087939C_jp = 0x8087939C; //
D_808793AC_jp = 0x808793AC; //
D_808793EC_jp = 0x808793EC; // type:u8
D_808793F8_jp = 0x808793F8; // type:u8
D_80879404_jp = 0x80879404; // type:u8
D_80879428_jp = 0x80879428; // type:u8
D_8087944C_jp = 0x8087944C; //
D_80879488_jp = 0x80879488; //
D_8087949C_jp = 0x8087949C; // type:u8
D_808794A8_jp = 0x808794A8; //
D_808794B4_jp = 0x808794B4; //
D_808794C0_jp = 0x808794C0; // type:u8
D_808794C4_jp = 0x808794C4; // type:u8
D_808794C8_jp = 0x808794C8; // type:u8
D_808794CC_jp = 0x808794CC; // type:u8
D_808794D0_jp = 0x808794D0; // type:u8
D_808794D4_jp = 0x808794D4; // type:u8
D_808794D8_jp = 0x808794D8; //
D_808794DC_jp = 0x808794DC; //
D_808794E0_jp = 0x808794E0; //

// .rodata

jtbl_808794F0_jp = 0x808794F0; // type:jtbl
RO_FLT_80879518_jp = 0x80879518; // type:f32
RO_FLT_8087951C_jp = 0x8087951C; // type:f32
jtbl_80879520_jp = 0x80879520; // type:jtbl
jtbl_80879550_jp = 0x80879550; // type:jtbl
RO_FLT_80879578_jp = 0x80879578; // type:f32
RO_FLT_8087957C_jp = 0x8087957C; // type:f32
RO_FLT_80879580_jp = 0x80879580; // type:f32
RO_FLT_80879584_jp = 0x80879584; // type:f32

// .bss

B_80879590_jp = 0x80879590; //
B_80879594_jp = 0x80879594; //
B_80879598_jp = 0x80879598; //
D_808796B0_jp = 0x808796B0; //

// .text

func_8087A330_jp = 0x8087A330; // type:func
func_8087A474_jp = 0x8087A474; // type:func
func_8087A514_jp = 0x8087A514; // type:func
func_8087A590_jp = 0x8087A590; // type:func
func_8087A5E0_jp = 0x8087A5E0; // type:func
func_8087A654_jp = 0x8087A654; // type:func
func_8087A94C_jp = 0x8087A94C; // type:func
func_8087AC90_jp = 0x8087AC90; // type:func
func_8087AE40_jp = 0x8087AE40; // type:func
func_8087AEE0_jp = 0x8087AEE0; // type:func
func_8087AFC0_jp = 0x8087AFC0; // type:func
func_8087B07C_jp = 0x8087B07C; // type:func
func_8087B5D4_jp = 0x8087B5D4; // type:func
func_8087B608_jp = 0x8087B608; // type:func
func_8087B698_jp = 0x8087B698; // type:func
func_8087B734_jp = 0x8087B734; // type:func
func_8087B8CC_jp = 0x8087B8CC; // type:func
func_8087BA44_jp = 0x8087BA44; // type:func
func_8087BD3C_jp = 0x8087BD3C; // type:func
func_8087BEFC_jp = 0x8087BEFC; // type:func
func_8087C2F8_jp = 0x8087C2F8; // type:func
func_8087C328_jp = 0x8087C328; // type:func
func_8087C360_jp = 0x8087C360; // type:func
func_8087C574_jp = 0x8087C574; // type:func

// .data

D_8087C5D0_jp = 0x8087C5D0; //
D_FLT_8087C60C_jp = 0x8087C60C; // type:f32
D_FLT_8087C660_jp = 0x8087C660; // type:f32
D_8087C678_jp = 0x8087C678; //
D_8087C690_jp = 0x8087C690; //
D_8087C6B8_jp = 0x8087C6B8; //
D_8087C6D0_jp = 0x8087C6D0; //

// .rodata

RO_STR_8087C6E0_jp = 0x8087C6E0; // type:asciz
RO_STR_8087C6F0_jp = 0x8087C6F0; // type:asciz
RO_FLT_8087C700_jp = 0x8087C700; // type:f32
RO_FLT_8087C704_jp = 0x8087C704; // type:f32
jtbl_8087C708_jp = 0x8087C708; // type:jtbl
RO_FLT_8087C724_jp = 0x8087C724; // type:f32
RO_FLT_8087C728_jp = 0x8087C728; // type:f32

// .bss

B_8087C730_jp = 0x8087C730; //
B_FLT_8087C73C_jp = 0x8087C73C; // type:f32
B_FLT_8087C740_jp = 0x8087C740; // type:f32
B_8087C744_jp = 0x8087C744; // type:s16
B_8087C918_jp = 0x8087C918; //
B_8087C968_jp = 0x8087C968; // type:s16
B_8087C96A_jp = 0x8087C96A; // type:s16
B_8087C96C_jp = 0x8087C96C; // type:s16
B_8087C96E_jp = 0x8087C96E; //
B_8087CA14_jp = 0x8087CA14; //
D_8087CA30_jp = 0x8087CA30; //

// .text

func_8087CC10_jp = 0x8087CC10; // type:func
func_8087CCC4_jp = 0x8087CCC4; // type:func
func_8087CD10_jp = 0x8087CD10; // type:func
func_8087D03C_jp = 0x8087D03C; // type:func
func_8087D180_jp = 0x8087D180; // type:func
func_8087D274_jp = 0x8087D274; // type:func

// .data

D_8087D2C0_jp = 0x8087D2C0; //

// .rodata

RO_FLT_8087D2D0_jp = 0x8087D2D0; // type:f32
RO_FLT_8087D2D4_jp = 0x8087D2D4; // type:f32

// .bss

B_8087D2E0_jp = 0x8087D2E0; //
B_8087D3B0_jp = 0x8087D3B0; //

// .text

func_8087D480_jp = 0x8087D480; // type:func
func_8087D51C_jp = 0x8087D51C; // type:func
func_8087D5A4_jp = 0x8087D5A4; // type:func
func_8087DAA0_jp = 0x8087DAA0; // type:func
func_8087DC14_jp = 0x8087DC14; // type:func
func_8087DE34_jp = 0x8087DE34; // type:func
func_8087DF20_jp = 0x8087DF20; // type:func
func_8087E098_jp = 0x8087E098; // type:func
func_8087E108_jp = 0x8087E108; // type:func
func_8087E138_jp = 0x8087E138; // type:func
func_8087E2AC_jp = 0x8087E2AC; // type:func
func_8087E450_jp = 0x8087E450; // type:func
func_8087E480_jp = 0x8087E480; // type:func
func_8087E518_jp = 0x8087E518; // type:func
func_8087E628_jp = 0x8087E628; // type:func
func_8087E980_jp = 0x8087E980; // type:func
func_8087ECB0_jp = 0x8087ECB0; // type:func
func_8087EE2C_jp = 0x8087EE2C; // type:func
func_8087EF28_jp = 0x8087EF28; // type:func
func_8087F08C_jp = 0x8087F08C; // type:func
func_8087F0BC_jp = 0x8087F0BC; // type:func
func_8087F3DC_jp = 0x8087F3DC; // type:func
func_8087F478_jp = 0x8087F478; // type:func
func_8087F544_jp = 0x8087F544; // type:func
func_8087F58C_jp = 0x8087F58C; // type:func
func_8087F728_jp = 0x8087F728; // type:func
func_8087FA80_jp = 0x8087FA80; // type:func
func_8087FD04_jp = 0x8087FD04; // type:func
func_80880058_jp = 0x80880058; // type:func
func_808802A8_jp = 0x808802A8; // type:func
func_80880444_jp = 0x80880444; // type:func
func_80880510_jp = 0x80880510; // type:func
func_808805DC_jp = 0x808805DC; // type:func
func_80880610_jp = 0x80880610; // type:func
func_8088068C_jp = 0x8088068C; // type:func
func_808808A0_jp = 0x808808A0; // type:func
func_80880AE4_jp = 0x80880AE4; // type:func
func_80880BB0_jp = 0x80880BB0; // type:func
func_80880C04_jp = 0x80880C04; // type:func
func_80880C84_jp = 0x80880C84; // type:func
func_80881030_jp = 0x80881030; // type:func
func_80881144_jp = 0x80881144; // type:func

// .data

D_808811B0_jp = 0x808811B0; //
D_808811C0_jp = 0x808811C0; //
D_808812C0_jp = 0x808812C0; // type:u8
D_808812E0_jp = 0x808812E0; // type:u8
D_80881300_jp = 0x80881300; //
D_8088130C_jp = 0x8088130C; //
D_80881310_jp = 0x80881310; //
D_80881324_jp = 0x80881324; //
D_80881338_jp = 0x80881338; //
D_8088134C_jp = 0x8088134C; //
D_80881360_jp = 0x80881360; //
D_80881374_jp = 0x80881374; //
D_80881388_jp = 0x80881388; //
D_8088139C_jp = 0x8088139C; //
D_8088149C_jp = 0x8088149C; //
D_808814B0_jp = 0x808814B0; //
D_808814D0_jp = 0x808814D0; //
D_808814F0_jp = 0x808814F0; //
D_80881504_jp = 0x80881504; //
D_80881510_jp = 0x80881510; //
D_8088151C_jp = 0x8088151C; //
D_80881528_jp = 0x80881528; //
D_80881564_jp = 0x80881564; //
D_8088158C_jp = 0x8088158C; //

// .rodata

RO_STR_808815A0_jp = 0x808815A0; // type:asciz
RO_STR_808815B8_jp = 0x808815B8; // type:asciz
RO_FLT_808815D0_jp = 0x808815D0; // type:f32
RO_FLT_808815D4_jp = 0x808815D4; // type:f32
RO_FLT_808815D8_jp = 0x808815D8; // type:f32
RO_FLT_808815DC_jp = 0x808815DC; // type:f32
RO_FLT_808815E0_jp = 0x808815E0; // type:f32
RO_FLT_808815E4_jp = 0x808815E4; // type:f32
RO_FLT_808815E8_jp = 0x808815E8; // type:f32
RO_FLT_808815EC_jp = 0x808815EC; // type:f32
RO_FLT_808815F0_jp = 0x808815F0; // type:f32
RO_FLT_808815F4_jp = 0x808815F4; // type:f32
RO_FLT_808815F8_jp = 0x808815F8; // type:f32
jtbl_808815FC_jp = 0x808815FC; // type:jtbl
RO_FLT_80881634_jp = 0x80881634; // type:f32
RO_FLT_80881638_jp = 0x80881638; // type:f32
RO_FLT_8088163C_jp = 0x8088163C; // type:f32

// .bss

B_80881640_jp = 0x80881640; //
B_808819A8_jp = 0x808819A8; //
D_80881C20_jp = 0x80881C20; //

// .text

func_80881EC0_jp = 0x80881EC0; // type:func
func_80881F18_jp = 0x80881F18; // type:func
func_80881F48_jp = 0x80881F48; // type:func
func_80881FE0_jp = 0x80881FE0; // type:func
func_808820AC_jp = 0x808820AC; // type:func
func_808820F4_jp = 0x808820F4; // type:func
func_80882198_jp = 0x80882198; // type:func
func_80882398_jp = 0x80882398; // type:func
func_808825BC_jp = 0x808825BC; // type:func
func_8088264C_jp = 0x8088264C; // type:func
func_808826B8_jp = 0x808826B8; // type:func
func_80882738_jp = 0x80882738; // type:func
func_80882778_jp = 0x80882778; // type:func
func_80882818_jp = 0x80882818; // type:func

// .data

D_80882830_jp = 0x80882830; //
D_80882844_jp = 0x80882844; //

// .bss

B_80882850_jp = 0x80882850; //

// .text

func_808828D0_jp = 0x808828D0; // type:func
func_80882900_jp = 0x80882900; // type:func
func_80882954_jp = 0x80882954; // type:func
func_80882984_jp = 0x80882984; // type:func
func_80882A4C_jp = 0x80882A4C; // type:func
func_80882B2C_jp = 0x80882B2C; // type:func
func_80882D08_jp = 0x80882D08; // type:func
func_80882E74_jp = 0x80882E74; // type:func
func_80882F48_jp = 0x80882F48; // type:func
func_80882FAC_jp = 0x80882FAC; // type:func
func_80882FDC_jp = 0x80882FDC; // type:func
func_8088306C_jp = 0x8088306C; // type:func
func_808830E8_jp = 0x808830E8; // type:func

// .data

D_80883100_jp = 0x80883100; //
D_80883114_jp = 0x80883114; //

// .rodata

RO_FLT_80883120_jp = 0x80883120; // type:f32

// .text

func_808831A0_jp = 0x808831A0; // type:func
func_808831D8_jp = 0x808831D8; // type:func
func_80883210_jp = 0x80883210; // type:func
func_80883268_jp = 0x80883268; // type:func
func_80883308_jp = 0x80883308; // type:func
func_80883410_jp = 0x80883410; // type:func
func_80883440_jp = 0x80883440; // type:func
func_80883720_jp = 0x80883720; // type:func
func_80883774_jp = 0x80883774; // type:func
func_808837D4_jp = 0x808837D4; // type:func
func_80883960_jp = 0x80883960; // type:func
func_80883B40_jp = 0x80883B40; // type:func
func_80883E74_jp = 0x80883E74; // type:func
func_80883F08_jp = 0x80883F08; // type:func
func_80883F5C_jp = 0x80883F5C; // type:func
func_80883F8C_jp = 0x80883F8C; // type:func
func_80884120_jp = 0x80884120; // type:func
func_808841A8_jp = 0x808841A8; // type:func

// .data

D_808841C0_jp = 0x808841C0; //
D_808841D4_jp = 0x808841D4; //
D_808841E0_jp = 0x808841E0; //
D_808841EC_jp = 0x808841EC; //
D_808841FC_jp = 0x808841FC; //
D_80884204_jp = 0x80884204; //
D_80884208_jp = 0x80884208; //
D_80884214_jp = 0x80884214; //
D_FLT_80884220_jp = 0x80884220; // type:f32
D_80884248_jp = 0x80884248; //

// .bss

B_80884250_jp = 0x80884250; //

// .text

func_80884340_jp = 0x80884340; // type:func
func_80884370_jp = 0x80884370; // type:func
func_80884484_jp = 0x80884484; // type:func
func_808844B4_jp = 0x808844B4; // type:func
func_80884514_jp = 0x80884514; // type:func
func_80884AAC_jp = 0x80884AAC; // type:func
func_80884B00_jp = 0x80884B00; // type:func
func_80884B30_jp = 0x80884B30; // type:func
func_80884C84_jp = 0x80884C84; // type:func
func_80884D00_jp = 0x80884D00; // type:func

// .data

D_80884D20_jp = 0x80884D20; //
D_80884D28_jp = 0x80884D28; //
D_80884D34_jp = 0x80884D34; //
D_80884D40_jp = 0x80884D40; //
D_80884D4C_jp = 0x80884D4C; //
D_FLT_80884D58_jp = 0x80884D58; // type:f32
D_80884D70_jp = 0x80884D70; //
D_80884E20_jp = 0x80884E20; //
D_80884E34_jp = 0x80884E34; //
D_80884E38_jp = 0x80884E38; //

// .rodata

RO_STR_80884E40_jp = 0x80884E40; // type:asciz
RO_FLT_80884E54_jp = 0x80884E54; // type:f32

// .bss

B_80884E60_jp = 0x80884E60; //
B_80885088_jp = 0x80885088; //

// .text

func_80885140_jp = 0x80885140; // type:func
func_808851D8_jp = 0x808851D8; // type:func
func_8088537C_jp = 0x8088537C; // type:func
func_808854CC_jp = 0x808854CC; // type:func
func_80885530_jp = 0x80885530; // type:func
func_808855DC_jp = 0x808855DC; // type:func
func_80885608_jp = 0x80885608; // type:func
func_80885690_jp = 0x80885690; // type:func
func_80885708_jp = 0x80885708; // type:func
func_80885760_jp = 0x80885760; // type:func
func_808857F8_jp = 0x808857F8; // type:func
func_8088587C_jp = 0x8088587C; // type:func
func_8088596C_jp = 0x8088596C; // type:func
func_80885A74_jp = 0x80885A74; // type:func
func_80885AEC_jp = 0x80885AEC; // type:func
func_80885CBC_jp = 0x80885CBC; // type:func
func_80885D2C_jp = 0x80885D2C; // type:func
func_80885D94_jp = 0x80885D94; // type:func
func_80885DD4_jp = 0x80885DD4; // type:func
func_80885EC8_jp = 0x80885EC8; // type:func
func_80885F4C_jp = 0x80885F4C; // type:func
func_80885F6C_jp = 0x80885F6C; // type:func
func_80885FCC_jp = 0x80885FCC; // type:func
func_808860A0_jp = 0x808860A0; // type:func
func_808860FC_jp = 0x808860FC; // type:func
func_80886168_jp = 0x80886168; // type:func
func_808861AC_jp = 0x808861AC; // type:func
func_808861E0_jp = 0x808861E0; // type:func
func_808862EC_jp = 0x808862EC; // type:func
func_808863B8_jp = 0x808863B8; // type:func
func_80886490_jp = 0x80886490; // type:func
func_80886588_jp = 0x80886588; // type:func
func_80886674_jp = 0x80886674; // type:func
func_808866F4_jp = 0x808866F4; // type:func
func_80886724_jp = 0x80886724; // type:func
func_808869C0_jp = 0x808869C0; // type:func
func_80886A00_jp = 0x80886A00; // type:func
func_80886A60_jp = 0x80886A60; // type:func
func_80886C78_jp = 0x80886C78; // type:func
func_80886CC4_jp = 0x80886CC4; // type:func
func_80887768_jp = 0x80887768; // type:func
func_8088798C_jp = 0x8088798C; // type:func
func_80887A78_jp = 0x80887A78; // type:func
func_80887BF4_jp = 0x80887BF4; // type:func
func_80887D5C_jp = 0x80887D5C; // type:func
func_80887DF0_jp = 0x80887DF0; // type:func
func_80887F48_jp = 0x80887F48; // type:func
func_80888024_jp = 0x80888024; // type:func
func_808880E4_jp = 0x808880E4; // type:func
func_808881C0_jp = 0x808881C0; // type:func
func_80888294_jp = 0x80888294; // type:func
func_80888354_jp = 0x80888354; // type:func
func_80888384_jp = 0x80888384; // type:func
func_808883F8_jp = 0x808883F8; // type:func
func_808884E4_jp = 0x808884E4; // type:func

// .data

D_80888500_jp = 0x80888500; //
D_80888534_jp = 0x80888534; //
D_80888568_jp = 0x80888568; //
D_80888588_jp = 0x80888588; //
D_80888594_jp = 0x80888594; //
D_808885B4_jp = 0x808885B4; //
D_808885C8_jp = 0x808885C8; //
D_808885DC_jp = 0x808885DC; //
D_808885F0_jp = 0x808885F0; // type:s16
D_808885FC_jp = 0x808885FC; // type:u16
D_80888610_jp = 0x80888610; // type:u8
D_80888710_jp = 0x80888710; // type:u8
D_80888810_jp = 0x80888810; // type:s16
D_80888818_jp = 0x80888818; //
D_80888824_jp = 0x80888824; //
D_80888838_jp = 0x80888838; //
D_8088884C_jp = 0x8088884C; //
D_80888854_jp = 0x80888854; //
D_8088885C_jp = 0x8088885C; //
D_80888864_jp = 0x80888864; //
D_8088886C_jp = 0x8088886C; //
D_80888874_jp = 0x80888874; //
D_8088887C_jp = 0x8088887C; //
D_80888884_jp = 0x80888884; //
D_8088888C_jp = 0x8088888C; //
D_80888894_jp = 0x80888894; //
D_8088889C_jp = 0x8088889C; //
D_808888A8_jp = 0x808888A8; //
D_808888CC_jp = 0x808888CC; //
D_808888E0_jp = 0x808888E0; // type:u8
D_80888934_jp = 0x80888934; // type:u8
D_FLT_8088894C_jp = 0x8088894C; // type:f32
D_80888964_jp = 0x80888964; //
D_FLT_80888968_jp = 0x80888968; // type:f32
D_FLT_808889B8_jp = 0x808889B8; // type:f32
D_FLT_80888A08_jp = 0x80888A08; // type:f32
D_FLT_80888A80_jp = 0x80888A80; // type:f32
D_80888A8C_jp = 0x80888A8C; //

// .rodata

RO_FLT_80888AA0_jp = 0x80888AA0; // type:f32
jtbl_80888AA4_jp = 0x80888AA4; // type:jtbl
jtbl_80888AC4_jp = 0x80888AC4; // type:jtbl

// .bss

B_80888AF0_jp = 0x80888AF0; //
D_80888B20_jp = 0x80888B20; //

// .text

func_80888E90_jp = 0x80888E90; // type:func
func_80889028_jp = 0x80889028; // type:func
func_8088910C_jp = 0x8088910C; // type:func
func_8088913C_jp = 0x8088913C; // type:func
func_80889198_jp = 0x80889198; // type:func
func_8088920C_jp = 0x8088920C; // type:func
func_80889288_jp = 0x80889288; // type:func
func_808894E4_jp = 0x808894E4; // type:func
func_80889514_jp = 0x80889514; // type:func
func_80889574_jp = 0x80889574; // type:func
func_8088973C_jp = 0x8088973C; // type:func
func_80889878_jp = 0x80889878; // type:func
func_808899E4_jp = 0x808899E4; // type:func
func_80889A9C_jp = 0x80889A9C; // type:func
func_80889CD8_jp = 0x80889CD8; // type:func
func_80889FB0_jp = 0x80889FB0; // type:func
func_8088A15C_jp = 0x8088A15C; // type:func
func_8088A230_jp = 0x8088A230; // type:func
func_8088A2A0_jp = 0x8088A2A0; // type:func
func_8088A2D0_jp = 0x8088A2D0; // type:func
func_8088A604_jp = 0x8088A604; // type:func
func_8088A6E8_jp = 0x8088A6E8; // type:func
func_8088A77C_jp = 0x8088A77C; // type:func

// .data

D_8088A7A0_jp = 0x8088A7A0; //
D_8088A8A0_jp = 0x8088A8A0; //
D_8088A9A0_jp = 0x8088A9A0; //
D_8088AAA4_jp = 0x8088AAA4; //
D_8088ABA4_jp = 0x8088ABA4; //
D_8088ABB8_jp = 0x8088ABB8; //
D_8088ABBC_jp = 0x8088ABBC; //
D_8088ABC0_jp = 0x8088ABC0; //

// .rodata

RO_STR_8088ABD0_jp = 0x8088ABD0; // type:asciz
RO_FLT_8088ABE4_jp = 0x8088ABE4; // type:f32
RO_FLT_8088ABE8_jp = 0x8088ABE8; // type:f32
RO_FLT_8088ABEC_jp = 0x8088ABEC; // type:f32
RO_FLT_8088ABF0_jp = 0x8088ABF0; // type:f32

// .bss

B_8088AC00_jp = 0x8088AC00; //
D_8088ACC0_jp = 0x8088ACC0; //

// .text

func_8088ADB0_jp = 0x8088ADB0; // type:func
func_8088AE48_jp = 0x8088AE48; // type:func
func_8088AEB8_jp = 0x8088AEB8; // type:func
func_8088AFC8_jp = 0x8088AFC8; // type:func
func_8088B060_jp = 0x8088B060; // type:func
func_8088B140_jp = 0x8088B140; // type:func
func_8088B250_jp = 0x8088B250; // type:func
func_8088B330_jp = 0x8088B330; // type:func
func_8088B36C_jp = 0x8088B36C; // type:func
func_8088B3E4_jp = 0x8088B3E4; // type:func
func_8088B588_jp = 0x8088B588; // type:func
func_8088B708_jp = 0x8088B708; // type:func
func_8088B7C0_jp = 0x8088B7C0; // type:func
func_8088B804_jp = 0x8088B804; // type:func
func_8088B890_jp = 0x8088B890; // type:func
func_8088B8C0_jp = 0x8088B8C0; // type:func
func_8088B920_jp = 0x8088B920; // type:func
func_8088B9F4_jp = 0x8088B9F4; // type:func
func_8088BB78_jp = 0x8088BB78; // type:func
func_8088BCF4_jp = 0x8088BCF4; // type:func
func_8088BF80_jp = 0x8088BF80; // type:func
func_8088C18C_jp = 0x8088C18C; // type:func
func_8088C24C_jp = 0x8088C24C; // type:func
func_8088C344_jp = 0x8088C344; // type:func
func_8088C374_jp = 0x8088C374; // type:func
func_8088C4A0_jp = 0x8088C4A0; // type:func
func_8088C548_jp = 0x8088C548; // type:func

// .data

D_8088C560_jp = 0x8088C560; // type:s16
D_8088C860_jp = 0x8088C860; //
D_8088C874_jp = 0x8088C874; //
D_8088C888_jp = 0x8088C888; //
D_8088C894_jp = 0x8088C894; //
D_8088C8A0_jp = 0x8088C8A0; // type:u8
D_8088C8B8_jp = 0x8088C8B8; //
D_8088C8BC_jp = 0x8088C8BC; // type:u8
D_8088C8C0_jp = 0x8088C8C0; // type:u8
D_8088C8C4_jp = 0x8088C8C4; // type:u8
D_8088C8C8_jp = 0x8088C8C8; // type:u8
D_8088C8CC_jp = 0x8088C8CC; //

// .rodata

RO_FLT_8088C8E0_jp = 0x8088C8E0; // type:f32
RO_FLT_8088C8E4_jp = 0x8088C8E4; // type:f32
RO_FLT_8088C8E8_jp = 0x8088C8E8; // type:f32
RO_FLT_8088C8EC_jp = 0x8088C8EC; // type:f32

// .bss

B_8088C8F0_jp = 0x8088C8F0; //
D_8088CA90_jp = 0x8088CA90; //

// .text

func_8088CBD0_jp = 0x8088CBD0; // type:func
func_8088CC04_jp = 0x8088CC04; // type:func
func_8088CCF4_jp = 0x8088CCF4; // type:func
func_8088CDA4_jp = 0x8088CDA4; // type:func
func_8088CE48_jp = 0x8088CE48; // type:func
func_8088CFB0_jp = 0x8088CFB0; // type:func
func_8088D0DC_jp = 0x8088D0DC; // type:func
func_8088D10C_jp = 0x8088D10C; // type:func
func_8088D19C_jp = 0x8088D19C; // type:func
func_8088D1CC_jp = 0x8088D1CC; // type:func
func_8088D2A0_jp = 0x8088D2A0; // type:func
func_8088D418_jp = 0x8088D418; // type:func
func_8088D5D0_jp = 0x8088D5D0; // type:func
func_8088D6C4_jp = 0x8088D6C4; // type:func
func_8088D7C8_jp = 0x8088D7C8; // type:func
func_8088D81C_jp = 0x8088D81C; // type:func
func_8088D880_jp = 0x8088D880; // type:func
func_8088D924_jp = 0x8088D924; // type:func
func_8088D9D4_jp = 0x8088D9D4; // type:func

// .data

D_8088D9F0_jp = 0x8088D9F0; //
D_8088D9F4_jp = 0x8088D9F4; //
D_8088DA00_jp = 0x8088DA00; //
D_8088DA0C_jp = 0x8088DA0C; //
D_8088DA18_jp = 0x8088DA18; //
D_8088DA20_jp = 0x8088DA20; //
D_8088DA2C_jp = 0x8088DA2C; //
D_8088DA34_jp = 0x8088DA34; //
D_8088DA40_jp = 0x8088DA40; //
D_8088DA48_jp = 0x8088DA48; //
D_8088DA4C_jp = 0x8088DA4C; //
D_8088DA58_jp = 0x8088DA58; //
D_8088DA60_jp = 0x8088DA60; //
D_8088DA64_jp = 0x8088DA64; //
D_8088DAC4_jp = 0x8088DAC4; //
D_8088DAD8_jp = 0x8088DAD8; //

// .bss

B_8088DAE0_jp = 0x8088DAE0; //

// .text

func_8088DBD0_jp = 0x8088DBD0; // type:func
func_8088DC18_jp = 0x8088DC18; // type:func
func_8088DD44_jp = 0x8088DD44; // type:func
func_8088DDA4_jp = 0x8088DDA4; // type:func
func_8088DE44_jp = 0x8088DE44; // type:func
func_8088DE88_jp = 0x8088DE88; // type:func
func_8088E230_jp = 0x8088E230; // type:func
func_8088E430_jp = 0x8088E430; // type:func
func_8088E5EC_jp = 0x8088E5EC; // type:func
func_8088E61C_jp = 0x8088E61C; // type:func
func_8088E7E8_jp = 0x8088E7E8; // type:func
func_8088E8B0_jp = 0x8088E8B0; // type:func
func_8088E8E0_jp = 0x8088E8E0; // type:func
func_8088E940_jp = 0x8088E940; // type:func
func_8088EA34_jp = 0x8088EA34; // type:func
func_8088EA60_jp = 0x8088EA60; // type:func
func_8088EDE0_jp = 0x8088EDE0; // type:func
func_8088EFC8_jp = 0x8088EFC8; // type:func
func_8088F110_jp = 0x8088F110; // type:func
func_8088F37C_jp = 0x8088F37C; // type:func
func_8088F49C_jp = 0x8088F49C; // type:func
func_8088F73C_jp = 0x8088F73C; // type:func
func_8088F8BC_jp = 0x8088F8BC; // type:func
func_8088FAEC_jp = 0x8088FAEC; // type:func
func_8088FB40_jp = 0x8088FB40; // type:func
func_8088FB70_jp = 0x8088FB70; // type:func
func_8088FBF0_jp = 0x8088FBF0; // type:func
func_8088FCBC_jp = 0x8088FCBC; // type:func

// .data

D_8088FCE0_jp = 0x8088FCE0; //
D_8088FE30_jp = 0x8088FE30; // type:u8
D_8088FE84_jp = 0x8088FE84; //
D_8088FE8C_jp = 0x8088FE8C; //
D_8088FEA0_jp = 0x8088FEA0; //
D_8088FEC0_jp = 0x8088FEC0; //
D_8088FEE0_jp = 0x8088FEE0; //
D_8088FEE8_jp = 0x8088FEE8; //
D_8088FF00_jp = 0x8088FF00; //
D_8088FF04_jp = 0x8088FF04; //
D_8088FF08_jp = 0x8088FF08; //
D_8088FF0C_jp = 0x8088FF0C; //
D_8088FF10_jp = 0x8088FF10; //
D_8088FF14_jp = 0x8088FF14; //
D_8088FF18_jp = 0x8088FF18; //
D_8088FF20_jp = 0x8088FF20; //
D_8088FF90_jp = 0x8088FF90; //
D_FLT_80890000_jp = 0x80890000; // type:f32
D_FLT_8089000C_jp = 0x8089000C; // type:f32
D_80890018_jp = 0x80890018; //
D_FLT_80890060_jp = 0x80890060; // type:f32
D_808900A8_jp = 0x808900A8; //
D_808900B0_jp = 0x808900B0; //
D_808900B8_jp = 0x808900B8; //

// .rodata

RO_STR_808900C0_jp = 0x808900C0; // type:asciz
RO_FLT_808900D0_jp = 0x808900D0; // type:f32
RO_FLT_808900D4_jp = 0x808900D4; // type:f32
RO_FLT_808900D8_jp = 0x808900D8; // type:f32
RO_FLT_808900DC_jp = 0x808900DC; // type:f32
RO_FLT_808900E0_jp = 0x808900E0; // type:f32

// .bss

B_808900F0_jp = 0x808900F0; //
B_80894048_jp = 0x80894048; //
B_8089404C_jp = 0x8089404C; //
B_80894050_jp = 0x80894050; //
B_80894054_jp = 0x80894054; //
B_80894058_jp = 0x80894058; //
B_8089405C_jp = 0x8089405C; //
B_80894060_jp = 0x80894060; //

// .text

func_80894250_jp = 0x80894250; // type:func
func_8089429C_jp = 0x8089429C; // type:func
func_80894318_jp = 0x80894318; // type:func
func_8089447C_jp = 0x8089447C; // type:func
func_80894560_jp = 0x80894560; // type:func
func_80894814_jp = 0x80894814; // type:func
func_80894A34_jp = 0x80894A34; // type:func
func_80894B30_jp = 0x80894B30; // type:func
func_80894C24_jp = 0x80894C24; // type:func
func_80894C80_jp = 0x80894C80; // type:func
func_80894CC4_jp = 0x80894CC4; // type:func
func_80894D28_jp = 0x80894D28; // type:func
func_80894E40_jp = 0x80894E40; // type:func
func_80894E78_jp = 0x80894E78; // type:func
func_80894F64_jp = 0x80894F64; // type:func
func_80894FD0_jp = 0x80894FD0; // type:func
func_80895038_jp = 0x80895038; // type:func
func_808950DC_jp = 0x808950DC; // type:func
func_80895298_jp = 0x80895298; // type:func
func_80895328_jp = 0x80895328; // type:func
func_8089542C_jp = 0x8089542C; // type:func
func_8089562C_jp = 0x8089562C; // type:func
func_808958A0_jp = 0x808958A0; // type:func
func_80895998_jp = 0x80895998; // type:func
func_80895A30_jp = 0x80895A30; // type:func
func_80895A60_jp = 0x80895A60; // type:func
func_80895B04_jp = 0x80895B04; // type:func
func_80895B9C_jp = 0x80895B9C; // type:func

// .data

D_80895BC0_jp = 0x80895BC0; //
D_80895BD0_jp = 0x80895BD0; //
D_80895BE4_jp = 0x80895BE4; //
D_80895C08_jp = 0x80895C08; //
D_80895C10_jp = 0x80895C10; //
D_80895C15_jp = 0x80895C15; //
D_80895C18_jp = 0x80895C18; //
D_80895C1C_jp = 0x80895C1C; //

// .rodata

RO_FLT_80895C30_jp = 0x80895C30; // type:f32
RO_FLT_80895C34_jp = 0x80895C34; // type:f32
RO_FLT_80895C38_jp = 0x80895C38; // type:f32
RO_FLT_80895C3C_jp = 0x80895C3C; // type:f32
RO_FLT_80895C40_jp = 0x80895C40; // type:f32
RO_FLT_80895C44_jp = 0x80895C44; // type:f32
RO_FLT_80895C48_jp = 0x80895C48; // type:f32
RO_FLT_80895C4C_jp = 0x80895C4C; // type:f32

// .bss

B_80895C50_jp = 0x80895C50; //

// .text

func_80895E00_jp = 0x80895E00; // type:func
func_80895E30_jp = 0x80895E30; // type:func
func_8089607C_jp = 0x8089607C; // type:func
func_808960AC_jp = 0x808960AC; // type:func
func_8089610C_jp = 0x8089610C; // type:func
func_80896264_jp = 0x80896264; // type:func
func_8089646C_jp = 0x8089646C; // type:func
func_8089652C_jp = 0x8089652C; // type:func
func_808966A0_jp = 0x808966A0; // type:func
func_808967DC_jp = 0x808967DC; // type:func
func_80896830_jp = 0x80896830; // type:func
func_80896860_jp = 0x80896860; // type:func
func_80896898_jp = 0x80896898; // type:func
func_80896938_jp = 0x80896938; // type:func

// .data

D_80896950_jp = 0x80896950; //
D_808969E0_jp = 0x808969E0; //
D_808969F4_jp = 0x808969F4; //
D_80896A00_jp = 0x80896A00; //
D_80896A04_jp = 0x80896A04; //
D_80896A0C_jp = 0x80896A0C; //
D_80896A18_jp = 0x80896A18; //
D_80896A30_jp = 0x80896A30; //
D_80896A48_jp = 0x80896A48; //

// .rodata

RO_FLT_80896A50_jp = 0x80896A50; // type:f32

// .bss

B_80896A60_jp = 0x80896A60; // type:s8
D_80896A70_jp = 0x80896A70; //

// .text

func_80896B20_jp = 0x80896B20; // type:func
func_80896BA8_jp = 0x80896BA8; // type:func
func_80896C9C_jp = 0x80896C9C; // type:func
func_80896CCC_jp = 0x80896CCC; // type:func
func_80896D70_jp = 0x80896D70; // type:func
func_8089700C_jp = 0x8089700C; // type:func
func_808971D8_jp = 0x808971D8; // type:func
func_80897238_jp = 0x80897238; // type:func
func_8089728C_jp = 0x8089728C; // type:func
func_808972BC_jp = 0x808972BC; // type:func
func_8089730C_jp = 0x8089730C; // type:func
func_80897394_jp = 0x80897394; // type:func

// .data

D_FLT_808973B0_jp = 0x808973B0; // type:f32
D_808973B8_jp = 0x808973B8; //
D_808973CC_jp = 0x808973CC; //
D_808973D0_jp = 0x808973D0; //
D_808973D4_jp = 0x808973D4; //
D_808973E0_jp = 0x808973E0; //
D_808973F0_jp = 0x808973F0; //
D_808973FC_jp = 0x808973FC; //
D_8089740C_jp = 0x8089740C; //
D_80897418_jp = 0x80897418; //
D_80897424_jp = 0x80897424; //
D_80897430_jp = 0x80897430; //
D_8089743C_jp = 0x8089743C; //
D_80897444_jp = 0x80897444; //
D_8089744C_jp = 0x8089744C; //
D_80897458_jp = 0x80897458; //
D_80897460_jp = 0x80897460; //
D_80897468_jp = 0x80897468; //
D_80897474_jp = 0x80897474; //
D_80897480_jp = 0x80897480; //
D_8089748C_jp = 0x8089748C; //
D_80897498_jp = 0x80897498; //
D_808974A4_jp = 0x808974A4; //
D_808974B0_jp = 0x808974B0; //
D_808974B8_jp = 0x808974B8; //
D_808974C8_jp = 0x808974C8; //
D_808974D8_jp = 0x808974D8; //
D_808974E4_jp = 0x808974E4; //
D_808974F0_jp = 0x808974F0; //
D_808974FC_jp = 0x808974FC; //
D_80897508_jp = 0x80897508; //
D_80897548_jp = 0x80897548; //
D_80897568_jp = 0x80897568; //
D_80897588_jp = 0x80897588; //
D_808975A8_jp = 0x808975A8; //
D_808975C8_jp = 0x808975C8; //
D_808975E8_jp = 0x808975E8; //
D_80897608_jp = 0x80897608; //
D_80897628_jp = 0x80897628; //
D_80897648_jp = 0x80897648; //
D_80897668_jp = 0x80897668; //
D_80897688_jp = 0x80897688; //
D_808976A8_jp = 0x808976A8; //
D_808976C8_jp = 0x808976C8; //
D_808976E8_jp = 0x808976E8; //
D_80897708_jp = 0x80897708; //
D_80897728_jp = 0x80897728; //
D_80897828_jp = 0x80897828; //
D_80897834_jp = 0x80897834; //
D_80897840_jp = 0x80897840; //
D_8089784C_jp = 0x8089784C; //

// .bss

B_80897860_jp = 0x80897860; //
D_80897870_jp = 0x80897870; //

// .text

func_808979C0_jp = 0x808979C0; // type:func
func_80897AE8_jp = 0x80897AE8; // type:func
func_80897B18_jp = 0x80897B18; // type:func
func_80897E98_jp = 0x80897E98; // type:func
func_80897EC8_jp = 0x80897EC8; // type:func
func_80897F28_jp = 0x80897F28; // type:func
func_8089808C_jp = 0x8089808C; // type:func
func_80898128_jp = 0x80898128; // type:func
func_8089844C_jp = 0x8089844C; // type:func
func_808984CC_jp = 0x808984CC; // type:func
func_80898520_jp = 0x80898520; // type:func
func_80898550_jp = 0x80898550; // type:func
func_80898688_jp = 0x80898688; // type:func
func_80898710_jp = 0x80898710; // type:func

// .data

D_80898730_jp = 0x80898730; // type:u16
D_80898738_jp = 0x80898738; //
D_80898748_jp = 0x80898748; //
D_8089874C_jp = 0x8089874C; //
D_80898760_jp = 0x80898760; //
D_80898774_jp = 0x80898774; //
D_80898780_jp = 0x80898780; //
D_80898784_jp = 0x80898784; //
D_80898788_jp = 0x80898788; // type:u8
D_8089878C_jp = 0x8089878C; // type:u8
D_80898790_jp = 0x80898790; // type:u8
D_80898794_jp = 0x80898794; //
D_80898798_jp = 0x80898798; //

// .rodata

RO_FLT_808987A0_jp = 0x808987A0; // type:f32
RO_FLT_808987A4_jp = 0x808987A4; // type:f32

// .bss

B_808987B0_jp = 0x808987B0; //

// .text

func_808988F0_jp = 0x808988F0; // type:func
func_80898920_jp = 0x80898920; // type:func
func_80898C20_jp = 0x80898C20; // type:func
func_80898CEC_jp = 0x80898CEC; // type:func
func_80898EA4_jp = 0x80898EA4; // type:func
func_80898ED4_jp = 0x80898ED4; // type:func
func_80898F34_jp = 0x80898F34; // type:func
func_80899088_jp = 0x80899088; // type:func
func_80899D30_jp = 0x80899D30; // type:func
func_80899D84_jp = 0x80899D84; // type:func
func_80899DB4_jp = 0x80899DB4; // type:func
func_80899E34_jp = 0x80899E34; // type:func
func_80899F00_jp = 0x80899F00; // type:func

// .data

D_80899F40_jp = 0x80899F40; //
D_80899F54_jp = 0x80899F54; //
D_80899F68_jp = 0x80899F68; //
D_80899F7C_jp = 0x80899F7C; //
D_80899F90_jp = 0x80899F90; //
D_8089A0D0_jp = 0x8089A0D0; //
D_8089A0D8_jp = 0x8089A0D8; //
D_8089A0E0_jp = 0x8089A0E0; //
D_8089A0E8_jp = 0x8089A0E8; //
D_8089A0F0_jp = 0x8089A0F0; // type:u16
D_8089A110_jp = 0x8089A110; //
D_8089A124_jp = 0x8089A124; // type:u8
D_8089A128_jp = 0x8089A128; // type:u8
D_8089A12C_jp = 0x8089A12C; // type:u8
D_8089A134_jp = 0x8089A134; //
D_8089A13C_jp = 0x8089A13C; //
D_8089A140_jp = 0x8089A140; //
D_8089A148_jp = 0x8089A148; //
D_8089A150_jp = 0x8089A150; //

// .rodata

RO_FLT_8089A160_jp = 0x8089A160; // type:f32
RO_FLT_8089A164_jp = 0x8089A164; // type:f32
RO_FLT_8089A168_jp = 0x8089A168; // type:f32
RO_FLT_8089A16C_jp = 0x8089A16C; // type:f32
RO_FLT_8089A170_jp = 0x8089A170; // type:f32
RO_FLT_8089A174_jp = 0x8089A174; // type:f32

// .bss

B_8089A180_jp = 0x8089A180; //
B_8089A1A4_jp = 0x8089A1A4; //

// .text

func_8089A350_jp = 0x8089A350; // type:func
func_8089A3C4_jp = 0x8089A3C4; // type:func
func_8089A3F4_jp = 0x8089A3F4; // type:func
func_8089A5F4_jp = 0x8089A5F4; // type:func
func_8089A624_jp = 0x8089A624; // type:func
func_8089A684_jp = 0x8089A684; // type:func
func_8089AA90_jp = 0x8089AA90; // type:func
func_8089AAE4_jp = 0x8089AAE4; // type:func
func_8089AB14_jp = 0x8089AB14; // type:func
func_8089AB8C_jp = 0x8089AB8C; // type:func
func_8089AC14_jp = 0x8089AC14; // type:func

// .data

D_8089AC30_jp = 0x8089AC30; //
D_8089AC35_jp = 0x8089AC35; // type:s8
D_8089AC38_jp = 0x8089AC38; //
D_8089AC4C_jp = 0x8089AC4C; //
D_8089AC58_jp = 0x8089AC58; //
D_8089AC5C_jp = 0x8089AC5C; // type:u8
D_8089AC64_jp = 0x8089AC64; //

// .bss

B_8089AC70_jp = 0x8089AC70; //

// .text

func_8089AD40_jp = 0x8089AD40; // type:func
func_8089AD70_jp = 0x8089AD70; // type:func
func_8089AF38_jp = 0x8089AF38; // type:func
func_8089B088_jp = 0x8089B088; // type:func
func_8089B148_jp = 0x8089B148; // type:func
func_8089B178_jp = 0x8089B178; // type:func
func_8089B218_jp = 0x8089B218; // type:func
func_8089B474_jp = 0x8089B474; // type:func
func_8089B4B4_jp = 0x8089B4B4; // type:func
func_8089BB00_jp = 0x8089BB00; // type:func
func_8089BC0C_jp = 0x8089BC0C; // type:func
func_8089BC60_jp = 0x8089BC60; // type:func
func_8089BCE0_jp = 0x8089BCE0; // type:func
func_8089BD4C_jp = 0x8089BD4C; // type:func
func_8089BE68_jp = 0x8089BE68; // type:func
func_8089BF10_jp = 0x8089BF10; // type:func

// .data

D_8089BFB0_jp = 0x8089BFB0; //
D_8089C050_jp = 0x8089C050; //
D_8089C064_jp = 0x8089C064; //

// .rodata

RO_FLT_8089C070_jp = 0x8089C070; // type:f32
RO_FLT_8089C074_jp = 0x8089C074; // type:f32
RO_FLT_8089C078_jp = 0x8089C078; // type:f32

// .bss

B_8089C080_jp = 0x8089C080; // type:u8
D_808A2E00_jp = 0x808A2E00; //

// .text

func_808A2EA0_jp = 0x808A2EA0; // type:func
func_808A2FF0_jp = 0x808A2FF0; // type:func
func_808A3054_jp = 0x808A3054; // type:func
func_808A309C_jp = 0x808A309C; // type:func
func_808A30D0_jp = 0x808A30D0; // type:func
func_808A3164_jp = 0x808A3164; // type:func
func_808A32B4_jp = 0x808A32B4; // type:func
func_808A3434_jp = 0x808A3434; // type:func
func_808A35EC_jp = 0x808A35EC; // type:func
func_808A3758_jp = 0x808A3758; // type:func
func_808A3788_jp = 0x808A3788; // type:func
func_808A37F0_jp = 0x808A37F0; // type:func
func_808A4004_jp = 0x808A4004; // type:func
func_808A4058_jp = 0x808A4058; // type:func
func_808A4084_jp = 0x808A4084; // type:func
func_808A40F0_jp = 0x808A40F0; // type:func
func_808A4188_jp = 0x808A4188; // type:func

// .data

D_808A41A0_jp = 0x808A41A0; //
D_808A41B0_jp = 0x808A41B0; //
D_808A41B8_jp = 0x808A41B8; //
D_808A41C4_jp = 0x808A41C4; //
D_808A41D0_jp = 0x808A41D0; //
D_808A41E0_jp = 0x808A41E0; //
D_808A41EC_jp = 0x808A41EC; //
D_808A41F4_jp = 0x808A41F4; //
D_808A4200_jp = 0x808A4200; //
D_808A420C_jp = 0x808A420C; //
D_808A4214_jp = 0x808A4214; //
D_808A421C_jp = 0x808A421C; //
D_808A4224_jp = 0x808A4224; //
D_808A4234_jp = 0x808A4234; //
D_808A4240_jp = 0x808A4240; //
D_808A424C_jp = 0x808A424C; //
D_808A4254_jp = 0x808A4254; //
D_808A4260_jp = 0x808A4260; //
D_808A426C_jp = 0x808A426C; //
D_808A4278_jp = 0x808A4278; //
D_808A4284_jp = 0x808A4284; //
D_808A4290_jp = 0x808A4290; //
D_808A429C_jp = 0x808A429C; //
D_808A42A8_jp = 0x808A42A8; //
D_808A42B0_jp = 0x808A42B0; //
D_808A42B8_jp = 0x808A42B8; //
D_808A42C0_jp = 0x808A42C0; //
D_808A42C8_jp = 0x808A42C8; //
D_808A42CC_jp = 0x808A42CC; //
D_808A42D0_jp = 0x808A42D0; //
D_808A4300_jp = 0x808A4300; //
D_808A4310_jp = 0x808A4310; //
D_808A4330_jp = 0x808A4330; //
D_808A4360_jp = 0x808A4360; //
D_808A4380_jp = 0x808A4380; //
D_808A43A0_jp = 0x808A43A0; //
D_808A43C0_jp = 0x808A43C0; //
D_808A43E0_jp = 0x808A43E0; //
D_808A4420_jp = 0x808A4420; //
D_808A4460_jp = 0x808A4460; //
D_808A4490_jp = 0x808A4490; //
D_808A44B0_jp = 0x808A44B0; //
D_808A4560_jp = 0x808A4560; //
D_808A4570_jp = 0x808A4570; //
D_808A4580_jp = 0x808A4580; //
D_808A4594_jp = 0x808A4594; //
D_808A459C_jp = 0x808A459C; //
D_808A45A4_jp = 0x808A45A4; //
D_808A45A8_jp = 0x808A45A8; //
D_808A45AC_jp = 0x808A45AC; // type:u8
D_808A45B0_jp = 0x808A45B0; // type:u8
D_808A45B4_jp = 0x808A45B4; //

// .rodata

RO_FLT_808A45C0_jp = 0x808A45C0; // type:f32
RO_FLT_808A45C4_jp = 0x808A45C4; // type:f32
RO_FLT_808A45C8_jp = 0x808A45C8; // type:f32
RO_FLT_808A45CC_jp = 0x808A45CC; // type:f32

// .bss

B_808A45D0_jp = 0x808A45D0; //
D_808A45E0_jp = 0x808A45E0; //

// .text

func_808A4780_jp = 0x808A4780; // type:func
func_808A4840_jp = 0x808A4840; // type:func
func_808A4978_jp = 0x808A4978; // type:func
func_808A49A8_jp = 0x808A49A8; // type:func
func_808A4A58_jp = 0x808A4A58; // type:func
func_808A4B94_jp = 0x808A4B94; // type:func
func_808A4C10_jp = 0x808A4C10; // type:func
func_808A4C40_jp = 0x808A4C40; // type:func
func_808A4DB0_jp = 0x808A4DB0; // type:func
func_808A5034_jp = 0x808A5034; // type:func
func_808A5594_jp = 0x808A5594; // type:func
func_808A5BD4_jp = 0x808A5BD4; // type:func
func_808A5C28_jp = 0x808A5C28; // type:func
func_808A5C94_jp = 0x808A5C94; // type:func
func_808A5D7C_jp = 0x808A5D7C; // type:func
func_808A5E14_jp = 0x808A5E14; // type:func

// .data

D_808A5E30_jp = 0x808A5E30; //
D_808A5E70_jp = 0x808A5E70; //
D_808A5E84_jp = 0x808A5E84; //
D_808A5E88_jp = 0x808A5E88; //
D_808A5E8C_jp = 0x808A5E8C; // type:u8
D_808A5E90_jp = 0x808A5E90; //
D_808A5E9C_jp = 0x808A5E9C; //
D_808A5EB0_jp = 0x808A5EB0; //

// .bss

B_808A5EC0_jp = 0x808A5EC0; //

// .text

func_808A6100_jp = 0x808A6100; // type:func
func_808A6148_jp = 0x808A6148; // type:func
func_808A61C8_jp = 0x808A61C8; // type:func
func_808A627C_jp = 0x808A627C; // type:func
func_808A6730_jp = 0x808A6730; // type:func
func_808A6854_jp = 0x808A6854; // type:func
func_808A694C_jp = 0x808A694C; // type:func
func_808A6A44_jp = 0x808A6A44; // type:func
func_808A6A8C_jp = 0x808A6A8C; // type:func
func_808A6C54_jp = 0x808A6C54; // type:func
func_808A6E88_jp = 0x808A6E88; // type:func
func_808A6EB8_jp = 0x808A6EB8; // type:func
func_808A70E8_jp = 0x808A70E8; // type:func
func_808A7118_jp = 0x808A7118; // type:func
func_808A7250_jp = 0x808A7250; // type:func
func_808A75AC_jp = 0x808A75AC; // type:func
func_808A7670_jp = 0x808A7670; // type:func
func_808A7710_jp = 0x808A7710; // type:func
func_808A77B4_jp = 0x808A77B4; // type:func
func_808A7814_jp = 0x808A7814; // type:func
func_808A78E0_jp = 0x808A78E0; // type:func
func_808A7B68_jp = 0x808A7B68; // type:func
func_808A7C4C_jp = 0x808A7C4C; // type:func
func_808A7D58_jp = 0x808A7D58; // type:func
func_808A7EAC_jp = 0x808A7EAC; // type:func
func_808A7F84_jp = 0x808A7F84; // type:func
func_808A8218_jp = 0x808A8218; // type:func
func_808A835C_jp = 0x808A835C; // type:func
func_808A8DFC_jp = 0x808A8DFC; // type:func
func_808A917C_jp = 0x808A917C; // type:func
func_808A9298_jp = 0x808A9298; // type:func
func_808A92EC_jp = 0x808A92EC; // type:func
func_808A931C_jp = 0x808A931C; // type:func
func_808A93A8_jp = 0x808A93A8; // type:func
func_808A96AC_jp = 0x808A96AC; // type:func
func_808A97C0_jp = 0x808A97C0; // type:func

// .data

D_808A97E0_jp = 0x808A97E0; //
D_808A97F8_jp = 0x808A97F8; //
D_808A9810_jp = 0x808A9810; //
D_808A9828_jp = 0x808A9828; //
D_808A9840_jp = 0x808A9840; //
D_808A9858_jp = 0x808A9858; //
D_808A9888_jp = 0x808A9888; //
D_808AD3B8_jp = 0x808AD3B8; //
D_808AE2B0_jp = 0x808AE2B0; //
D_808AE3B0_jp = 0x808AE3B0; //
D_808AE880_jp = 0x808AE880; //
D_808AE980_jp = 0x808AE980; //
D_808AEA80_jp = 0x808AEA80; //
D_808AEB84_jp = 0x808AEB84; // type:u16
D_808AF254_jp = 0x808AF254; //
D_808AF2D4_jp = 0x808AF2D4; //
D_808AF354_jp = 0x808AF354; //
D_808AF540_jp = 0x808AF540; //
D_808AF580_jp = 0x808AF580; //
D_808AF600_jp = 0x808AF600; //
D_808AF700_jp = 0x808AF700; //
D_808AF734_jp = 0x808AF734; //
D_808AF7A4_jp = 0x808AF7A4; //
D_808AF7AC_jp = 0x808AF7AC; //
D_808AF7EC_jp = 0x808AF7EC; //
D_FLT_808AF87C_jp = 0x808AF87C; // type:f32
D_808AF90C_jp = 0x808AF90C; //
D_808AF920_jp = 0x808AF920; //
D_808AF92C_jp = 0x808AF92C; //
D_808AF938_jp = 0x808AF938; //
D_808AF940_jp = 0x808AF940; //
D_808AF950_jp = 0x808AF950; //
D_808AF964_jp = 0x808AF964; //
D_808AF96C_jp = 0x808AF96C; //
D_808AF988_jp = 0x808AF988; // type:u8
D_808AF990_jp = 0x808AF990; //

// .rodata

RO_STR_808AF9A0_jp = 0x808AF9A0; // type:asciz
RO_STR_808AF9B4_jp = 0x808AF9B4; // type:asciz
RO_STR_808AF9C8_jp = 0x808AF9C8; // type:asciz
RO_STR_808AF9DC_jp = 0x808AF9DC; // type:asciz
RO_FLT_808AF9F0_jp = 0x808AF9F0; // type:f32
RO_FLT_808AF9F4_jp = 0x808AF9F4; // type:f32
RO_FLT_808AF9F8_jp = 0x808AF9F8; // type:f32
RO_FLT_808AF9FC_jp = 0x808AF9FC; // type:f32
RO_FLT_808AFA00_jp = 0x808AFA00; // type:f32
RO_FLT_808AFA04_jp = 0x808AFA04; // type:f32

// .bss

B_808AFA10_jp = 0x808AFA10; //
D_808B2B30_jp = 0x808B2B30; //

// .text

func_808B2D50_jp = 0x808B2D50; // type:func
func_808B2DE4_jp = 0x808B2DE4; // type:func
func_808B2E4C_jp = 0x808B2E4C; // type:func
func_808B2EB8_jp = 0x808B2EB8; // type:func
func_808B2F24_jp = 0x808B2F24; // type:func
func_808B2F90_jp = 0x808B2F90; // type:func
func_808B3010_jp = 0x808B3010; // type:func
func_808B30B4_jp = 0x808B30B4; // type:func
func_808B30EC_jp = 0x808B30EC; // type:func
func_808B312C_jp = 0x808B312C; // type:func
func_808B3170_jp = 0x808B3170; // type:func
func_808B31B4_jp = 0x808B31B4; // type:func
func_808B31F8_jp = 0x808B31F8; // type:func
func_808B323C_jp = 0x808B323C; // type:func
func_808B3280_jp = 0x808B3280; // type:func
func_808B32C4_jp = 0x808B32C4; // type:func
func_808B3308_jp = 0x808B3308; // type:func
func_808B3334_jp = 0x808B3334; // type:func
func_808B3370_jp = 0x808B3370; // type:func
func_808B33B8_jp = 0x808B33B8; // type:func
func_808B33EC_jp = 0x808B33EC; // type:func
func_808B3438_jp = 0x808B3438; // type:func
func_808B3458_jp = 0x808B3458; // type:func
func_808B34C8_jp = 0x808B34C8; // type:func
func_808B34E8_jp = 0x808B34E8; // type:func
func_808B3584_jp = 0x808B3584; // type:func
func_808B35C8_jp = 0x808B35C8; // type:func
func_808B360C_jp = 0x808B360C; // type:func
func_808B3648_jp = 0x808B3648; // type:func
func_808B36E8_jp = 0x808B36E8; // type:func
func_808B36F4_jp = 0x808B36F4; // type:func
func_808B37D4_jp = 0x808B37D4; // type:func
func_808B37F8_jp = 0x808B37F8; // type:func
func_808B3804_jp = 0x808B3804; // type:func
func_808B3828_jp = 0x808B3828; // type:func
func_808B3960_jp = 0x808B3960; // type:func
func_808B39D4_jp = 0x808B39D4; // type:func
func_808B3A44_jp = 0x808B3A44; // type:func
func_808B3A84_jp = 0x808B3A84; // type:func
func_808B3AE4_jp = 0x808B3AE4; // type:func
func_808B3AF0_jp = 0x808B3AF0; // type:func
func_808B3B08_jp = 0x808B3B08; // type:func
func_808B3B3C_jp = 0x808B3B3C; // type:func
func_808B3BD0_jp = 0x808B3BD0; // type:func
func_808B3BF0_jp = 0x808B3BF0; // type:func
func_808B3C10_jp = 0x808B3C10; // type:func
func_808B3C74_jp = 0x808B3C74; // type:func
func_808B3C94_jp = 0x808B3C94; // type:func
func_808B3D28_jp = 0x808B3D28; // type:func
func_808B3D7C_jp = 0x808B3D7C; // type:func
func_808B3E10_jp = 0x808B3E10; // type:func
func_808B400C_jp = 0x808B400C; // type:func
func_808B4428_jp = 0x808B4428; // type:func
func_808B4660_jp = 0x808B4660; // type:func
func_808B468C_jp = 0x808B468C; // type:func
func_808B46C4_jp = 0x808B46C4; // type:func
func_808B47F8_jp = 0x808B47F8; // type:func
func_808B482C_jp = 0x808B482C; // type:func
func_808B488C_jp = 0x808B488C; // type:func
func_808B48F0_jp = 0x808B48F0; // type:func
func_808B4924_jp = 0x808B4924; // type:func
func_808B4A44_jp = 0x808B4A44; // type:func
func_808B4B6C_jp = 0x808B4B6C; // type:func
func_808B4C88_jp = 0x808B4C88; // type:func
func_808B4CA8_jp = 0x808B4CA8; // type:func
func_808B4D5C_jp = 0x808B4D5C; // type:func
func_808B4DAC_jp = 0x808B4DAC; // type:func
func_808B4DE8_jp = 0x808B4DE8; // type:func
func_808B4E34_jp = 0x808B4E34; // type:func
func_808B4EE4_jp = 0x808B4EE4; // type:func
func_808B4EF4_jp = 0x808B4EF4; // type:func
func_808B4F04_jp = 0x808B4F04; // type:func
func_808B5150_jp = 0x808B5150; // type:func
func_808B525C_jp = 0x808B525C; // type:func
func_808B527C_jp = 0x808B527C; // type:func
func_808B5310_jp = 0x808B5310; // type:func
func_808B5348_jp = 0x808B5348; // type:func
func_808B5374_jp = 0x808B5374; // type:func
func_808B53A0_jp = 0x808B53A0; // type:func
func_808B53F8_jp = 0x808B53F8; // type:func
func_808B5470_jp = 0x808B5470; // type:func
func_808B54B8_jp = 0x808B54B8; // type:func
func_808B54FC_jp = 0x808B54FC; // type:func
func_808B5544_jp = 0x808B5544; // type:func
func_808B5584_jp = 0x808B5584; // type:func
func_808B55E8_jp = 0x808B55E8; // type:func
func_808B5644_jp = 0x808B5644; // type:func
func_808B5698_jp = 0x808B5698; // type:func
func_808B56C4_jp = 0x808B56C4; // type:func
func_808B5844_jp = 0x808B5844; // type:func
func_808B5878_jp = 0x808B5878; // type:func
func_808B589C_jp = 0x808B589C; // type:func
func_808B58D4_jp = 0x808B58D4; // type:func
func_808B58E4_jp = 0x808B58E4; // type:func
func_808B58F0_jp = 0x808B58F0; // type:func
func_808B5944_jp = 0x808B5944; // type:func
func_808B5960_jp = 0x808B5960; // type:func
func_808B59C0_jp = 0x808B59C0; // type:func
func_808B5A10_jp = 0x808B5A10; // type:func
func_808B5B38_jp = 0x808B5B38; // type:func
func_808B5B60_jp = 0x808B5B60; // type:func
func_808B5C58_jp = 0x808B5C58; // type:func
func_808B5C68_jp = 0x808B5C68; // type:func
func_808B5D44_jp = 0x808B5D44; // type:func
func_808B5DA4_jp = 0x808B5DA4; // type:func
func_808B5DE4_jp = 0x808B5DE4; // type:func
func_808B5E8C_jp = 0x808B5E8C; // type:func
func_808B5F6C_jp = 0x808B5F6C; // type:func
func_808B5FB0_jp = 0x808B5FB0; // type:func
func_808B5FFC_jp = 0x808B5FFC; // type:func
func_808B603C_jp = 0x808B603C; // type:func
func_808B606C_jp = 0x808B606C; // type:func
func_808B612C_jp = 0x808B612C; // type:func
func_808B6138_jp = 0x808B6138; // type:func
func_808B61E4_jp = 0x808B61E4; // type:func
func_808B6234_jp = 0x808B6234; // type:func
func_808B6258_jp = 0x808B6258; // type:func
func_808B6284_jp = 0x808B6284; // type:func
func_808B6310_jp = 0x808B6310; // type:func
func_808B6334_jp = 0x808B6334; // type:func
func_808B6360_jp = 0x808B6360; // type:func
func_808B638C_jp = 0x808B638C; // type:func
func_808B63B4_jp = 0x808B63B4; // type:func
func_808B63EC_jp = 0x808B63EC; // type:func
func_808B6424_jp = 0x808B6424; // type:func
func_808B6458_jp = 0x808B6458; // type:func
func_808B7CDC_jp = 0x808B7CDC; // type:func
func_808B7DD8_jp = 0x808B7DD8; // type:func
func_808B7E6C_jp = 0x808B7E6C; // type:func
func_808B7F10_jp = 0x808B7F10; // type:func
func_808B8058_jp = 0x808B8058; // type:func
func_808B8094_jp = 0x808B8094; // type:func
func_808B80D0_jp = 0x808B80D0; // type:func
func_808B8114_jp = 0x808B8114; // type:func
func_808B81B4_jp = 0x808B81B4; // type:func
func_808B8204_jp = 0x808B8204; // type:func
func_808B828C_jp = 0x808B828C; // type:func
func_808B83B4_jp = 0x808B83B4; // type:func
func_808B846C_jp = 0x808B846C; // type:func
func_808B84DC_jp = 0x808B84DC; // type:func
func_808B856C_jp = 0x808B856C; // type:func
func_808B8628_jp = 0x808B8628; // type:func
func_808B8730_jp = 0x808B8730; // type:func
func_808B8778_jp = 0x808B8778; // type:func
func_808B87C8_jp = 0x808B87C8; // type:func
func_808B87FC_jp = 0x808B87FC; // type:func
func_808B8874_jp = 0x808B8874; // type:func
func_808B88D4_jp = 0x808B88D4; // type:func
func_808B8928_jp = 0x808B8928; // type:func
func_808B8948_jp = 0x808B8948; // type:func
func_808B89F8_jp = 0x808B89F8; // type:func
func_808B8B00_jp = 0x808B8B00; // type:func
func_808B8B54_jp = 0x808B8B54; // type:func
func_808B8B90_jp = 0x808B8B90; // type:func
func_808B8C04_jp = 0x808B8C04; // type:func
func_808B8C5C_jp = 0x808B8C5C; // type:func
func_808B8CF4_jp = 0x808B8CF4; // type:func
func_808B8DB8_jp = 0x808B8DB8; // type:func
func_808B8EA8_jp = 0x808B8EA8; // type:func
func_808B8F34_jp = 0x808B8F34; // type:func
func_808B8F90_jp = 0x808B8F90; // type:func
func_808B8FD0_jp = 0x808B8FD0; // type:func
func_808B9008_jp = 0x808B9008; // type:func
func_808B9028_jp = 0x808B9028; // type:func
func_808B90C8_jp = 0x808B90C8; // type:func
func_808B91CC_jp = 0x808B91CC; // type:func
func_808B9248_jp = 0x808B9248; // type:func
func_808B9288_jp = 0x808B9288; // type:func
func_808B937C_jp = 0x808B937C; // type:func
func_808B93B8_jp = 0x808B93B8; // type:func
func_808B93F4_jp = 0x808B93F4; // type:func
func_808B9568_jp = 0x808B9568; // type:func
func_808B9594_jp = 0x808B9594; // type:func
func_808B95EC_jp = 0x808B95EC; // type:func
func_808B9634_jp = 0x808B9634; // type:func
func_808B9698_jp = 0x808B9698; // type:func
func_808B96C8_jp = 0x808B96C8; // type:func
func_808B96F8_jp = 0x808B96F8; // type:func
func_808B996C_jp = 0x808B996C; // type:func
func_808BA0B0_jp = 0x808BA0B0; // type:func
func_808BA13C_jp = 0x808BA13C; // type:func
func_808BA1DC_jp = 0x808BA1DC; // type:func
func_808BA388_jp = 0x808BA388; // type:func
func_808BA75C_jp = 0x808BA75C; // type:func
func_808BA7BC_jp = 0x808BA7BC; // type:func
func_808BA88C_jp = 0x808BA88C; // type:func
func_808BA94C_jp = 0x808BA94C; // type:func
func_808BAA18_jp = 0x808BAA18; // type:func
func_808BAAE4_jp = 0x808BAAE4; // type:func
func_808BAB34_jp = 0x808BAB34; // type:func
func_808BAC20_jp = 0x808BAC20; // type:func
func_808BADFC_jp = 0x808BADFC; // type:func
func_808BAE38_jp = 0x808BAE38; // type:func
func_808BAF40_jp = 0x808BAF40; // type:func
func_808BB098_jp = 0x808BB098; // type:func
func_808BB158_jp = 0x808BB158; // type:func
func_808BB1DC_jp = 0x808BB1DC; // type:func
func_808BB43C_jp = 0x808BB43C; // type:func
func_808BB4D0_jp = 0x808BB4D0; // type:func
func_808BB520_jp = 0x808BB520; // type:func
func_808BB570_jp = 0x808BB570; // type:func
func_808BB604_jp = 0x808BB604; // type:func
func_808BB650_jp = 0x808BB650; // type:func
func_808BB6A4_jp = 0x808BB6A4; // type:func
func_808BB6B8_jp = 0x808BB6B8; // type:func
func_808BB724_jp = 0x808BB724; // type:func
func_808BB904_jp = 0x808BB904; // type:func
func_808BB98C_jp = 0x808BB98C; // type:func
func_808BBA0C_jp = 0x808BBA0C; // type:func
func_808BBB7C_jp = 0x808BBB7C; // type:func
func_808BBCA8_jp = 0x808BBCA8; // type:func
func_808BBD34_jp = 0x808BBD34; // type:func
func_808BBD80_jp = 0x808BBD80; // type:func
func_808BBDE8_jp = 0x808BBDE8; // type:func
func_808BBE50_jp = 0x808BBE50; // type:func
func_808BBF38_jp = 0x808BBF38; // type:func
func_808BBFA0_jp = 0x808BBFA0; // type:func
func_808BBFD4_jp = 0x808BBFD4; // type:func
func_808BC2D8_jp = 0x808BC2D8; // type:func
func_808BC308_jp = 0x808BC308; // type:func
func_808BC358_jp = 0x808BC358; // type:func
func_808BC3A0_jp = 0x808BC3A0; // type:func
func_808BC3D0_jp = 0x808BC3D0; // type:func
func_808BC494_jp = 0x808BC494; // type:func
func_808BC4C4_jp = 0x808BC4C4; // type:func
func_808BC4F0_jp = 0x808BC4F0; // type:func
func_808BC520_jp = 0x808BC520; // type:func
func_808BC584_jp = 0x808BC584; // type:func
func_808BC5C0_jp = 0x808BC5C0; // type:func
func_808BC5E8_jp = 0x808BC5E8; // type:func
func_808BC610_jp = 0x808BC610; // type:func
func_808BC638_jp = 0x808BC638; // type:func
func_808BC658_jp = 0x808BC658; // type:func
func_808BC678_jp = 0x808BC678; // type:func
func_808BC6E0_jp = 0x808BC6E0; // type:func
func_808BC748_jp = 0x808BC748; // type:func
func_808BC798_jp = 0x808BC798; // type:func
func_808BC7D4_jp = 0x808BC7D4; // type:func
func_808BC7F4_jp = 0x808BC7F4; // type:func
func_808BC814_jp = 0x808BC814; // type:func
func_808BC834_jp = 0x808BC834; // type:func
func_808BC854_jp = 0x808BC854; // type:func
func_808BC874_jp = 0x808BC874; // type:func
func_808BC894_jp = 0x808BC894; // type:func
func_808BC8B4_jp = 0x808BC8B4; // type:func
func_808BC8D4_jp = 0x808BC8D4; // type:func
func_808BC8F4_jp = 0x808BC8F4; // type:func
func_808BC914_jp = 0x808BC914; // type:func
func_808BC934_jp = 0x808BC934; // type:func
func_808BC954_jp = 0x808BC954; // type:func
func_808BC974_jp = 0x808BC974; // type:func
func_808BC994_jp = 0x808BC994; // type:func
func_808BC9B4_jp = 0x808BC9B4; // type:func
func_808BC9D8_jp = 0x808BC9D8; // type:func
func_808BC9FC_jp = 0x808BC9FC; // type:func
func_808BCA1C_jp = 0x808BCA1C; // type:func
func_808BCA3C_jp = 0x808BCA3C; // type:func
func_808BCA5C_jp = 0x808BCA5C; // type:func
func_808BCA7C_jp = 0x808BCA7C; // type:func
func_808BCABC_jp = 0x808BCABC; // type:func
func_808BCAE0_jp = 0x808BCAE0; // type:func
func_808BCB00_jp = 0x808BCB00; // type:func
func_808BCB20_jp = 0x808BCB20; // type:func
func_808BCB40_jp = 0x808BCB40; // type:func
func_808BCB60_jp = 0x808BCB60; // type:func
func_808BCB88_jp = 0x808BCB88; // type:func
func_808BCBA8_jp = 0x808BCBA8; // type:func
func_808BCBC8_jp = 0x808BCBC8; // type:func
func_808BCBE8_jp = 0x808BCBE8; // type:func
func_808BCC08_jp = 0x808BCC08; // type:func
func_808BCC28_jp = 0x808BCC28; // type:func
func_808BCC48_jp = 0x808BCC48; // type:func
func_808BCCD8_jp = 0x808BCCD8; // type:func
func_808BCCEC_jp = 0x808BCCEC; // type:func
func_808BCD0C_jp = 0x808BCD0C; // type:func
func_808BCD64_jp = 0x808BCD64; // type:func
func_808BCD84_jp = 0x808BCD84; // type:func
func_808BCDDC_jp = 0x808BCDDC; // type:func
func_808BCDEC_jp = 0x808BCDEC; // type:func
func_808BCE30_jp = 0x808BCE30; // type:func
func_808BCE50_jp = 0x808BCE50; // type:func
func_808BCE70_jp = 0x808BCE70; // type:func
func_808BCE90_jp = 0x808BCE90; // type:func
func_808BCEB0_jp = 0x808BCEB0; // type:func
func_808BCED4_jp = 0x808BCED4; // type:func
func_808BCEF8_jp = 0x808BCEF8; // type:func
func_808BCF68_jp = 0x808BCF68; // type:func
func_808BCFE4_jp = 0x808BCFE4; // type:func
func_808BD0B8_jp = 0x808BD0B8; // type:func
func_808BD1A8_jp = 0x808BD1A8; // type:func
func_808BD218_jp = 0x808BD218; // type:func
func_808BD320_jp = 0x808BD320; // type:func
func_808BD340_jp = 0x808BD340; // type:func
func_808BD350_jp = 0x808BD350; // type:func
func_808BD360_jp = 0x808BD360; // type:func
func_808BD380_jp = 0x808BD380; // type:func
func_808BD3D8_jp = 0x808BD3D8; // type:func
func_808BD3F8_jp = 0x808BD3F8; // type:func
func_808BD584_jp = 0x808BD584; // type:func
func_808BD5C4_jp = 0x808BD5C4; // type:func
func_808BD668_jp = 0x808BD668; // type:func
func_808BD690_jp = 0x808BD690; // type:func
func_808BD6B8_jp = 0x808BD6B8; // type:func
func_808BD6E0_jp = 0x808BD6E0; // type:func
func_808BD708_jp = 0x808BD708; // type:func
func_808BD7D8_jp = 0x808BD7D8; // type:func
func_808BD81C_jp = 0x808BD81C; // type:func
func_808BD880_jp = 0x808BD880; // type:func
func_808BD8B0_jp = 0x808BD8B0; // type:func
func_808BD934_jp = 0x808BD934; // type:func
func_808BDACC_jp = 0x808BDACC; // type:func
func_808BDAE4_jp = 0x808BDAE4; // type:func
func_808BDBF4_jp = 0x808BDBF4; // type:func
func_808BDD04_jp = 0x808BDD04; // type:func
func_808BDD30_jp = 0x808BDD30; // type:func
func_808BDD88_jp = 0x808BDD88; // type:func
func_808BDDB4_jp = 0x808BDDB4; // type:func
func_808BDEF0_jp = 0x808BDEF0; // type:func
func_808BDF6C_jp = 0x808BDF6C; // type:func
func_808BE000_jp = 0x808BE000; // type:func
func_808BE014_jp = 0x808BE014; // type:func
func_808BE0B0_jp = 0x808BE0B0; // type:func
func_808BE140_jp = 0x808BE140; // type:func
func_808BE184_jp = 0x808BE184; // type:func
func_808BE1C8_jp = 0x808BE1C8; // type:func
func_808BE4AC_jp = 0x808BE4AC; // type:func
func_808BE4EC_jp = 0x808BE4EC; // type:func
func_808BE530_jp = 0x808BE530; // type:func
func_808BE570_jp = 0x808BE570; // type:func
func_808BE5A0_jp = 0x808BE5A0; // type:func
func_808BE5D0_jp = 0x808BE5D0; // type:func
func_808BE620_jp = 0x808BE620; // type:func
func_808BE670_jp = 0x808BE670; // type:func
func_808BE6A4_jp = 0x808BE6A4; // type:func
func_808BE6DC_jp = 0x808BE6DC; // type:func
func_808BE71C_jp = 0x808BE71C; // type:func
func_808BE788_jp = 0x808BE788; // type:func
func_808BE85C_jp = 0x808BE85C; // type:func
func_808BE880_jp = 0x808BE880; // type:func
func_808BE8C4_jp = 0x808BE8C4; // type:func
func_808BE968_jp = 0x808BE968; // type:func
func_808BE9CC_jp = 0x808BE9CC; // type:func
func_808BEA04_jp = 0x808BEA04; // type:func
func_808BEA58_jp = 0x808BEA58; // type:func
func_808BEA8C_jp = 0x808BEA8C; // type:func
func_808BEAC4_jp = 0x808BEAC4; // type:func
func_808BEB18_jp = 0x808BEB18; // type:func
func_808BEB50_jp = 0x808BEB50; // type:func
func_808BEBA4_jp = 0x808BEBA4; // type:func
func_808BEBF8_jp = 0x808BEBF8; // type:func
func_808BEC2C_jp = 0x808BEC2C; // type:func
func_808BECFC_jp = 0x808BECFC; // type:func
func_808BED44_jp = 0x808BED44; // type:func
func_808BED64_jp = 0x808BED64; // type:func
func_808BED9C_jp = 0x808BED9C; // type:func
func_808BEDF0_jp = 0x808BEDF0; // type:func
func_808BEE20_jp = 0x808BEE20; // type:func
func_808BEE58_jp = 0x808BEE58; // type:func
func_808BEF40_jp = 0x808BEF40; // type:func
func_808BEFA0_jp = 0x808BEFA0; // type:func
func_808BEFD0_jp = 0x808BEFD0; // type:func
func_808BF008_jp = 0x808BF008; // type:func
func_808BF068_jp = 0x808BF068; // type:func
func_808BF098_jp = 0x808BF098; // type:func
func_808BF0D0_jp = 0x808BF0D0; // type:func
func_808BF148_jp = 0x808BF148; // type:func
func_808BF1A8_jp = 0x808BF1A8; // type:func
func_808BF1E8_jp = 0x808BF1E8; // type:func
func_808BF21C_jp = 0x808BF21C; // type:func
func_808BF288_jp = 0x808BF288; // type:func
func_808BF360_jp = 0x808BF360; // type:func
func_808BF374_jp = 0x808BF374; // type:func
func_808BF410_jp = 0x808BF410; // type:func
func_808BF494_jp = 0x808BF494; // type:func
func_808BF6C8_jp = 0x808BF6C8; // type:func
func_808BF77C_jp = 0x808BF77C; // type:func
func_808BF7E8_jp = 0x808BF7E8; // type:func
func_808BF824_jp = 0x808BF824; // type:func
func_808BF858_jp = 0x808BF858; // type:func
func_808BF890_jp = 0x808BF890; // type:func
func_808BF91C_jp = 0x808BF91C; // type:func
func_808BF954_jp = 0x808BF954; // type:func
func_808BFA84_jp = 0x808BFA84; // type:func
func_808BFAC4_jp = 0x808BFAC4; // type:func
func_808BFB30_jp = 0x808BFB30; // type:func
func_808BFEB8_jp = 0x808BFEB8; // type:func
func_808BFF08_jp = 0x808BFF08; // type:func
func_808BFF28_jp = 0x808BFF28; // type:func
func_808C0150_jp = 0x808C0150; // type:func
func_808C0188_jp = 0x808C0188; // type:func
func_808C01D8_jp = 0x808C01D8; // type:func
func_808C0260_jp = 0x808C0260; // type:func
func_808C0280_jp = 0x808C0280; // type:func
func_808C02A0_jp = 0x808C02A0; // type:func
func_808C02C0_jp = 0x808C02C0; // type:func
func_808C02E0_jp = 0x808C02E0; // type:func
func_808C031C_jp = 0x808C031C; // type:func
func_808C037C_jp = 0x808C037C; // type:func
func_808C0408_jp = 0x808C0408; // type:func
func_808C0458_jp = 0x808C0458; // type:func
func_808C04E0_jp = 0x808C04E0; // type:func
func_808C0500_jp = 0x808C0500; // type:func
func_808C0520_jp = 0x808C0520; // type:func
func_808C0540_jp = 0x808C0540; // type:func
func_808C0560_jp = 0x808C0560; // type:func
func_808C05D4_jp = 0x808C05D4; // type:func
func_808C0624_jp = 0x808C0624; // type:func
func_808C06AC_jp = 0x808C06AC; // type:func
func_808C0734_jp = 0x808C0734; // type:func
func_808C0758_jp = 0x808C0758; // type:func
func_808C0778_jp = 0x808C0778; // type:func
func_808C0798_jp = 0x808C0798; // type:func
func_808C07B8_jp = 0x808C07B8; // type:func
func_808C0808_jp = 0x808C0808; // type:func
func_808C0888_jp = 0x808C0888; // type:func
func_808C08FC_jp = 0x808C08FC; // type:func
func_808C0998_jp = 0x808C0998; // type:func
func_808C09B8_jp = 0x808C09B8; // type:func
func_808C09D8_jp = 0x808C09D8; // type:func
func_808C09F8_jp = 0x808C09F8; // type:func
func_808C0A18_jp = 0x808C0A18; // type:func
func_808C0AA4_jp = 0x808C0AA4; // type:func
func_808C0B24_jp = 0x808C0B24; // type:func
func_808C0BA0_jp = 0x808C0BA0; // type:func
func_808C0C48_jp = 0x808C0C48; // type:func
func_808C0C68_jp = 0x808C0C68; // type:func
func_808C0C88_jp = 0x808C0C88; // type:func
func_808C0CA8_jp = 0x808C0CA8; // type:func
func_808C0CC8_jp = 0x808C0CC8; // type:func
func_808C0D34_jp = 0x808C0D34; // type:func
func_808C0DB4_jp = 0x808C0DB4; // type:func
func_808C0E30_jp = 0x808C0E30; // type:func
func_808C0ED8_jp = 0x808C0ED8; // type:func
func_808C0EF8_jp = 0x808C0EF8; // type:func
func_808C0F18_jp = 0x808C0F18; // type:func
func_808C0F38_jp = 0x808C0F38; // type:func
func_808C0F58_jp = 0x808C0F58; // type:func
func_808C0FE4_jp = 0x808C0FE4; // type:func
func_808C1064_jp = 0x808C1064; // type:func
func_808C10E4_jp = 0x808C10E4; // type:func
func_808C1118_jp = 0x808C1118; // type:func
func_808C11EC_jp = 0x808C11EC; // type:func
func_808C1210_jp = 0x808C1210; // type:func
func_808C1230_jp = 0x808C1230; // type:func
func_808C1250_jp = 0x808C1250; // type:func
func_808C1270_jp = 0x808C1270; // type:func
func_808C1370_jp = 0x808C1370; // type:func
func_808C13F0_jp = 0x808C13F0; // type:func
func_808C14B0_jp = 0x808C14B0; // type:func
func_808C15D8_jp = 0x808C15D8; // type:func
func_808C15F8_jp = 0x808C15F8; // type:func
func_808C1678_jp = 0x808C1678; // type:func
func_808C1790_jp = 0x808C1790; // type:func
func_808C18C0_jp = 0x808C18C0; // type:func
func_808C191C_jp = 0x808C191C; // type:func
func_808C1C08_jp = 0x808C1C08; // type:func
func_808C1C28_jp = 0x808C1C28; // type:func
func_808C1C48_jp = 0x808C1C48; // type:func
func_808C1DB8_jp = 0x808C1DB8; // type:func
func_808C1E5C_jp = 0x808C1E5C; // type:func
func_808C1EDC_jp = 0x808C1EDC; // type:func
func_808C1FC4_jp = 0x808C1FC4; // type:func
func_808C1FE4_jp = 0x808C1FE4; // type:func
func_808C200C_jp = 0x808C200C; // type:func
func_808C203C_jp = 0x808C203C; // type:func
func_808C2098_jp = 0x808C2098; // type:func
func_808C20B8_jp = 0x808C20B8; // type:func
func_808C20D8_jp = 0x808C20D8; // type:func
func_808C20F8_jp = 0x808C20F8; // type:func
func_808C223C_jp = 0x808C223C; // type:func
func_808C225C_jp = 0x808C225C; // type:func
func_808C2300_jp = 0x808C2300; // type:func
func_808C2380_jp = 0x808C2380; // type:func
func_808C2468_jp = 0x808C2468; // type:func
func_808C2490_jp = 0x808C2490; // type:func
func_808C2630_jp = 0x808C2630; // type:func
func_808C278C_jp = 0x808C278C; // type:func
func_808C27E8_jp = 0x808C27E8; // type:func
func_808C2808_jp = 0x808C2808; // type:func
func_808C2828_jp = 0x808C2828; // type:func
func_808C2848_jp = 0x808C2848; // type:func
func_808C2994_jp = 0x808C2994; // type:func
func_808C2B78_jp = 0x808C2B78; // type:func
func_808C2B98_jp = 0x808C2B98; // type:func
func_808C2C3C_jp = 0x808C2C3C; // type:func
func_808C2C8C_jp = 0x808C2C8C; // type:func
func_808C2D4C_jp = 0x808C2D4C; // type:func
func_808C2D74_jp = 0x808C2D74; // type:func
func_808C2E10_jp = 0x808C2E10; // type:func
func_808C2ECC_jp = 0x808C2ECC; // type:func
func_808C2EF0_jp = 0x808C2EF0; // type:func
func_808C2F68_jp = 0x808C2F68; // type:func
func_808C2F88_jp = 0x808C2F88; // type:func
func_808C305C_jp = 0x808C305C; // type:func
func_808C30A4_jp = 0x808C30A4; // type:func
func_808C30C4_jp = 0x808C30C4; // type:func
func_808C30E4_jp = 0x808C30E4; // type:func
func_808C3114_jp = 0x808C3114; // type:func
func_808C31BC_jp = 0x808C31BC; // type:func
func_808C320C_jp = 0x808C320C; // type:func
func_808C32CC_jp = 0x808C32CC; // type:func
func_808C32F4_jp = 0x808C32F4; // type:func
func_808C33A0_jp = 0x808C33A0; // type:func
func_808C33E0_jp = 0x808C33E0; // type:func
func_808C3464_jp = 0x808C3464; // type:func
func_808C34CC_jp = 0x808C34CC; // type:func
func_808C3504_jp = 0x808C3504; // type:func
func_808C3610_jp = 0x808C3610; // type:func
func_808C3630_jp = 0x808C3630; // type:func
func_808C36C4_jp = 0x808C36C4; // type:func
func_808C36E8_jp = 0x808C36E8; // type:func
func_808C3728_jp = 0x808C3728; // type:func
func_808C3748_jp = 0x808C3748; // type:func
func_808C3768_jp = 0x808C3768; // type:func
func_808C3788_jp = 0x808C3788; // type:func
func_808C37D0_jp = 0x808C37D0; // type:func
func_808C37F0_jp = 0x808C37F0; // type:func
func_808C3888_jp = 0x808C3888; // type:func
func_808C3908_jp = 0x808C3908; // type:func
func_808C39B4_jp = 0x808C39B4; // type:func
func_808C39D4_jp = 0x808C39D4; // type:func
func_808C39F4_jp = 0x808C39F4; // type:func
func_808C3A14_jp = 0x808C3A14; // type:func
func_808C3A34_jp = 0x808C3A34; // type:func
func_808C3AB0_jp = 0x808C3AB0; // type:func
func_808C3AD0_jp = 0x808C3AD0; // type:func
func_808C3B50_jp = 0x808C3B50; // type:func
func_808C3BB8_jp = 0x808C3BB8; // type:func
func_808C3BE4_jp = 0x808C3BE4; // type:func
func_808C3D2C_jp = 0x808C3D2C; // type:func
func_808C3D4C_jp = 0x808C3D4C; // type:func
func_808C3D70_jp = 0x808C3D70; // type:func
func_808C3D90_jp = 0x808C3D90; // type:func
func_808C3E30_jp = 0x808C3E30; // type:func
func_808C3E50_jp = 0x808C3E50; // type:func
func_808C3E70_jp = 0x808C3E70; // type:func
func_808C3EDC_jp = 0x808C3EDC; // type:func
func_808C3F34_jp = 0x808C3F34; // type:func
func_808C3F44_jp = 0x808C3F44; // type:func
func_808C3FE0_jp = 0x808C3FE0; // type:func
func_808C4098_jp = 0x808C4098; // type:func
func_808C41B0_jp = 0x808C41B0; // type:func
func_808C41D4_jp = 0x808C41D4; // type:func
func_808C4260_jp = 0x808C4260; // type:func
func_808C4298_jp = 0x808C4298; // type:func
func_808C4338_jp = 0x808C4338; // type:func
func_808C4358_jp = 0x808C4358; // type:func
func_808C43C4_jp = 0x808C43C4; // type:func
func_808C4458_jp = 0x808C4458; // type:func
func_808C44E8_jp = 0x808C44E8; // type:func
func_808C4588_jp = 0x808C4588; // type:func
func_808C4698_jp = 0x808C4698; // type:func
func_808C46B8_jp = 0x808C46B8; // type:func
func_808C470C_jp = 0x808C470C; // type:func
func_808C472C_jp = 0x808C472C; // type:func
func_808C479C_jp = 0x808C479C; // type:func
func_808C4810_jp = 0x808C4810; // type:func
func_808C48B0_jp = 0x808C48B0; // type:func
func_808C48D4_jp = 0x808C48D4; // type:func
func_808C48F4_jp = 0x808C48F4; // type:func
func_808C492C_jp = 0x808C492C; // type:func
func_808C494C_jp = 0x808C494C; // type:func
func_808C49A4_jp = 0x808C49A4; // type:func
func_808C49B0_jp = 0x808C49B0; // type:func
func_808C4A18_jp = 0x808C4A18; // type:func
func_808C4AA8_jp = 0x808C4AA8; // type:func
func_808C4AF8_jp = 0x808C4AF8; // type:func
func_808C4B24_jp = 0x808C4B24; // type:func
func_808C4BAC_jp = 0x808C4BAC; // type:func
func_808C4BCC_jp = 0x808C4BCC; // type:func
func_808C4BEC_jp = 0x808C4BEC; // type:func
func_808C4C0C_jp = 0x808C4C0C; // type:func
func_808C4C2C_jp = 0x808C4C2C; // type:func
func_808C4CA0_jp = 0x808C4CA0; // type:func
func_808C4CF4_jp = 0x808C4CF4; // type:func
func_808C4DB4_jp = 0x808C4DB4; // type:func
func_808C4E4C_jp = 0x808C4E4C; // type:func
func_808C4E6C_jp = 0x808C4E6C; // type:func
func_808C4F18_jp = 0x808C4F18; // type:func
func_808C4F38_jp = 0x808C4F38; // type:func
func_808C4F58_jp = 0x808C4F58; // type:func
func_808C51E0_jp = 0x808C51E0; // type:func
func_808C5260_jp = 0x808C5260; // type:func
func_808C5300_jp = 0x808C5300; // type:func
func_808C532C_jp = 0x808C532C; // type:func
func_808C5418_jp = 0x808C5418; // type:func
func_808C5438_jp = 0x808C5438; // type:func
func_808C5480_jp = 0x808C5480; // type:func
func_808C54C8_jp = 0x808C54C8; // type:func
func_808C54E8_jp = 0x808C54E8; // type:func
func_808C5508_jp = 0x808C5508; // type:func
func_808C5578_jp = 0x808C5578; // type:func
func_808C5618_jp = 0x808C5618; // type:func
func_808C56F0_jp = 0x808C56F0; // type:func
func_808C5734_jp = 0x808C5734; // type:func
func_808C5858_jp = 0x808C5858; // type:func
func_808C5878_jp = 0x808C5878; // type:func
func_808C59BC_jp = 0x808C59BC; // type:func
func_808C5A04_jp = 0x808C5A04; // type:func
func_808C5A24_jp = 0x808C5A24; // type:func
func_808C5A44_jp = 0x808C5A44; // type:func
func_808C5AB4_jp = 0x808C5AB4; // type:func
func_808C5B54_jp = 0x808C5B54; // type:func
func_808C5BFC_jp = 0x808C5BFC; // type:func
func_808C5D14_jp = 0x808C5D14; // type:func
func_808C5D34_jp = 0x808C5D34; // type:func
func_808C5D54_jp = 0x808C5D54; // type:func
func_808C5DC0_jp = 0x808C5DC0; // type:func
func_808C5DE0_jp = 0x808C5DE0; // type:func
func_808C5E00_jp = 0x808C5E00; // type:func
func_808C5EB4_jp = 0x808C5EB4; // type:func
func_808C5F48_jp = 0x808C5F48; // type:func
func_808C5FE8_jp = 0x808C5FE8; // type:func
func_808C6014_jp = 0x808C6014; // type:func
func_808C6104_jp = 0x808C6104; // type:func
func_808C6124_jp = 0x808C6124; // type:func
func_808C6170_jp = 0x808C6170; // type:func
func_808C61B8_jp = 0x808C61B8; // type:func
func_808C61D8_jp = 0x808C61D8; // type:func
func_808C61F8_jp = 0x808C61F8; // type:func
func_808C6258_jp = 0x808C6258; // type:func
func_808C62F8_jp = 0x808C62F8; // type:func
func_808C638C_jp = 0x808C638C; // type:func
func_808C645C_jp = 0x808C645C; // type:func
func_808C6488_jp = 0x808C6488; // type:func
func_808C64A8_jp = 0x808C64A8; // type:func
func_808C64C8_jp = 0x808C64C8; // type:func
func_808C64E8_jp = 0x808C64E8; // type:func
func_808C6554_jp = 0x808C6554; // type:func
func_808C65F8_jp = 0x808C65F8; // type:func
func_808C6624_jp = 0x808C6624; // type:func
func_808C66F8_jp = 0x808C66F8; // type:func
func_808C6718_jp = 0x808C6718; // type:func
func_808C6760_jp = 0x808C6760; // type:func
func_808C67A8_jp = 0x808C67A8; // type:func
func_808C67C8_jp = 0x808C67C8; // type:func
func_808C67E8_jp = 0x808C67E8; // type:func
func_808C685C_jp = 0x808C685C; // type:func
func_808C68FC_jp = 0x808C68FC; // type:func
func_808C6948_jp = 0x808C6948; // type:func
func_808C6A10_jp = 0x808C6A10; // type:func
func_808C6AE4_jp = 0x808C6AE4; // type:func
func_808C6BE8_jp = 0x808C6BE8; // type:func
func_808C6C38_jp = 0x808C6C38; // type:func
func_808C6C58_jp = 0x808C6C58; // type:func
func_808C6C94_jp = 0x808C6C94; // type:func
func_808C6DCC_jp = 0x808C6DCC; // type:func
func_808C6E18_jp = 0x808C6E18; // type:func
func_808C6E40_jp = 0x808C6E40; // type:func
func_808C6EB8_jp = 0x808C6EB8; // type:func
func_808C6EF4_jp = 0x808C6EF4; // type:func
func_808C6F54_jp = 0x808C6F54; // type:func
func_808C6FE0_jp = 0x808C6FE0; // type:func
func_808C7000_jp = 0x808C7000; // type:func
func_808C7020_jp = 0x808C7020; // type:func
func_808C71C0_jp = 0x808C71C0; // type:func
func_808C721C_jp = 0x808C721C; // type:func
func_808C7250_jp = 0x808C7250; // type:func
func_808C72C8_jp = 0x808C72C8; // type:func
func_808C72F4_jp = 0x808C72F4; // type:func
func_808C73C8_jp = 0x808C73C8; // type:func
func_808C74B0_jp = 0x808C74B0; // type:func
func_808C74D0_jp = 0x808C74D0; // type:func
func_808C751C_jp = 0x808C751C; // type:func
func_808C7544_jp = 0x808C7544; // type:func
func_808C75AC_jp = 0x808C75AC; // type:func
func_808C75E0_jp = 0x808C75E0; // type:func
func_808C779C_jp = 0x808C779C; // type:func
func_808C7800_jp = 0x808C7800; // type:func
func_808C78D4_jp = 0x808C78D4; // type:func
func_808C79C0_jp = 0x808C79C0; // type:func
func_808C79E0_jp = 0x808C79E0; // type:func
func_808C7A1C_jp = 0x808C7A1C; // type:func
func_808C7B64_jp = 0x808C7B64; // type:func
func_808C7BB0_jp = 0x808C7BB0; // type:func
func_808C7BD0_jp = 0x808C7BD0; // type:func
func_808C7C10_jp = 0x808C7C10; // type:func
func_808C7C98_jp = 0x808C7C98; // type:func
func_808C7D3C_jp = 0x808C7D3C; // type:func
func_808C7E80_jp = 0x808C7E80; // type:func
func_808C7EA0_jp = 0x808C7EA0; // type:func
func_808C7EC0_jp = 0x808C7EC0; // type:func
func_808C7EE0_jp = 0x808C7EE0; // type:func
func_808C7F00_jp = 0x808C7F00; // type:func
func_808C7F5C_jp = 0x808C7F5C; // type:func
func_808C7FB0_jp = 0x808C7FB0; // type:func
func_808C8100_jp = 0x808C8100; // type:func
func_808C8170_jp = 0x808C8170; // type:func
func_808C8218_jp = 0x808C8218; // type:func
func_808C82A8_jp = 0x808C82A8; // type:func
func_808C843C_jp = 0x808C843C; // type:func
func_808C8478_jp = 0x808C8478; // type:func
func_808C850C_jp = 0x808C850C; // type:func
func_808C8538_jp = 0x808C8538; // type:func
func_808C8558_jp = 0x808C8558; // type:func
func_808C8578_jp = 0x808C8578; // type:func
func_808C8598_jp = 0x808C8598; // type:func
func_808C8898_jp = 0x808C8898; // type:func
func_808C88D4_jp = 0x808C88D4; // type:func
func_808C8944_jp = 0x808C8944; // type:func
func_808C89DC_jp = 0x808C89DC; // type:func
func_808C8A64_jp = 0x808C8A64; // type:func
func_808C8B94_jp = 0x808C8B94; // type:func
func_808C8BD0_jp = 0x808C8BD0; // type:func
func_808C8C64_jp = 0x808C8C64; // type:func
func_808C8C90_jp = 0x808C8C90; // type:func
func_808C8CB0_jp = 0x808C8CB0; // type:func
func_808C8CD0_jp = 0x808C8CD0; // type:func
func_808C8CF0_jp = 0x808C8CF0; // type:func
func_808C8F64_jp = 0x808C8F64; // type:func
func_808C8FC4_jp = 0x808C8FC4; // type:func
func_808C9024_jp = 0x808C9024; // type:func
func_808C9094_jp = 0x808C9094; // type:func
func_808C9134_jp = 0x808C9134; // type:func
func_808C91C8_jp = 0x808C91C8; // type:func
func_808C9288_jp = 0x808C9288; // type:func
func_808C9330_jp = 0x808C9330; // type:func
func_808C9354_jp = 0x808C9354; // type:func
func_808C9374_jp = 0x808C9374; // type:func
func_808C9394_jp = 0x808C9394; // type:func
func_808C93B4_jp = 0x808C93B4; // type:func
func_808C943C_jp = 0x808C943C; // type:func
func_808C9578_jp = 0x808C9578; // type:func
func_808C95A8_jp = 0x808C95A8; // type:func
func_808C963C_jp = 0x808C963C; // type:func
func_808C9688_jp = 0x808C9688; // type:func
func_808C9748_jp = 0x808C9748; // type:func
func_808C978C_jp = 0x808C978C; // type:func
func_808C9878_jp = 0x808C9878; // type:func
func_808C9898_jp = 0x808C9898; // type:func
func_808C98D8_jp = 0x808C98D8; // type:func
func_808C9928_jp = 0x808C9928; // type:func
func_808C9974_jp = 0x808C9974; // type:func
func_808C9994_jp = 0x808C9994; // type:func
func_808C99C8_jp = 0x808C99C8; // type:func
func_808C9A60_jp = 0x808C9A60; // type:func
func_808C9AC8_jp = 0x808C9AC8; // type:func
func_808C9B38_jp = 0x808C9B38; // type:func
func_808C9B58_jp = 0x808C9B58; // type:func
func_808C9B78_jp = 0x808C9B78; // type:func
func_808C9BE8_jp = 0x808C9BE8; // type:func
func_808C9C60_jp = 0x808C9C60; // type:func
func_808C9D40_jp = 0x808C9D40; // type:func
func_808C9E20_jp = 0x808C9E20; // type:func
func_808C9E60_jp = 0x808C9E60; // type:func
func_808C9E80_jp = 0x808C9E80; // type:func
func_808C9EA4_jp = 0x808C9EA4; // type:func
func_808C9EE0_jp = 0x808C9EE0; // type:func
func_808C9F24_jp = 0x808C9F24; // type:func
func_808C9F70_jp = 0x808C9F70; // type:func
func_808C9F90_jp = 0x808C9F90; // type:func
func_808C9FD0_jp = 0x808C9FD0; // type:func
func_808CA060_jp = 0x808CA060; // type:func
func_808CA104_jp = 0x808CA104; // type:func
func_808CA1A8_jp = 0x808CA1A8; // type:func
func_808CA23C_jp = 0x808CA23C; // type:func
func_808CA268_jp = 0x808CA268; // type:func
func_808CA288_jp = 0x808CA288; // type:func
func_808CA3C4_jp = 0x808CA3C4; // type:func
func_808CA400_jp = 0x808CA400; // type:func
func_808CA4C8_jp = 0x808CA4C8; // type:func
func_808CA62C_jp = 0x808CA62C; // type:func
func_808CA668_jp = 0x808CA668; // type:func
func_808CA6B0_jp = 0x808CA6B0; // type:func
func_808CA724_jp = 0x808CA724; // type:func
func_808CA798_jp = 0x808CA798; // type:func
func_808CA7B8_jp = 0x808CA7B8; // type:func
func_808CA7D8_jp = 0x808CA7D8; // type:func
func_808CA93C_jp = 0x808CA93C; // type:func
func_808CA9E4_jp = 0x808CA9E4; // type:func
func_808CAA58_jp = 0x808CAA58; // type:func
func_808CAACC_jp = 0x808CAACC; // type:func
func_808CAAEC_jp = 0x808CAAEC; // type:func
func_808CAB0C_jp = 0x808CAB0C; // type:func
func_808CAB2C_jp = 0x808CAB2C; // type:func
func_808CAB4C_jp = 0x808CAB4C; // type:func
func_808CABA8_jp = 0x808CABA8; // type:func
func_808CACB8_jp = 0x808CACB8; // type:func
func_808CAD58_jp = 0x808CAD58; // type:func
func_808CAE00_jp = 0x808CAE00; // type:func
func_808CAE90_jp = 0x808CAE90; // type:func
func_808CAEAC_jp = 0x808CAEAC; // type:func
func_808CAF04_jp = 0x808CAF04; // type:func
func_808CAF24_jp = 0x808CAF24; // type:func
func_808CAF50_jp = 0x808CAF50; // type:func
func_808CAF8C_jp = 0x808CAF8C; // type:func
func_808CAFDC_jp = 0x808CAFDC; // type:func
func_808CB088_jp = 0x808CB088; // type:func
func_808CB104_jp = 0x808CB104; // type:func
func_808CB17C_jp = 0x808CB17C; // type:func
func_808CB28C_jp = 0x808CB28C; // type:func
func_808CB32C_jp = 0x808CB32C; // type:func
func_808CB39C_jp = 0x808CB39C; // type:func
func_808CB4A4_jp = 0x808CB4A4; // type:func
func_808CB534_jp = 0x808CB534; // type:func
func_808CB554_jp = 0x808CB554; // type:func
func_808CB578_jp = 0x808CB578; // type:func
func_808CB598_jp = 0x808CB598; // type:func
func_808CB5B8_jp = 0x808CB5B8; // type:func
func_808CB5D8_jp = 0x808CB5D8; // type:func
func_808CB6BC_jp = 0x808CB6BC; // type:func
func_808CB74C_jp = 0x808CB74C; // type:func
func_808CB7E4_jp = 0x808CB7E4; // type:func
func_808CB834_jp = 0x808CB834; // type:func
func_808CB8B8_jp = 0x808CB8B8; // type:func
func_808CB8DC_jp = 0x808CB8DC; // type:func
func_808CB8FC_jp = 0x808CB8FC; // type:func
func_808CB91C_jp = 0x808CB91C; // type:func
func_808CB93C_jp = 0x808CB93C; // type:func
func_808CBA3C_jp = 0x808CBA3C; // type:func
func_808CBABC_jp = 0x808CBABC; // type:func
func_808CBB0C_jp = 0x808CBB0C; // type:func
func_808CBB90_jp = 0x808CBB90; // type:func
func_808CBC8C_jp = 0x808CBC8C; // type:func
func_808CBCE8_jp = 0x808CBCE8; // type:func
func_808CBEF8_jp = 0x808CBEF8; // type:func
func_808CBF18_jp = 0x808CBF18; // type:func
func_808CBF38_jp = 0x808CBF38; // type:func
func_808CC064_jp = 0x808CC064; // type:func
func_808CC108_jp = 0x808CC108; // type:func
func_808CC178_jp = 0x808CC178; // type:func
func_808CC240_jp = 0x808CC240; // type:func
func_808CC380_jp = 0x808CC380; // type:func
func_808CC3A0_jp = 0x808CC3A0; // type:func
func_808CC54C_jp = 0x808CC54C; // type:func
func_808CC7B4_jp = 0x808CC7B4; // type:func
func_808CC7E0_jp = 0x808CC7E0; // type:func
func_808CC988_jp = 0x808CC988; // type:func
func_808CCA60_jp = 0x808CCA60; // type:func
func_808CCA80_jp = 0x808CCA80; // type:func
func_808CCABC_jp = 0x808CCABC; // type:func
func_808CCADC_jp = 0x808CCADC; // type:func
func_808CCB28_jp = 0x808CCB28; // type:func
func_808CCB70_jp = 0x808CCB70; // type:func
func_808CCB90_jp = 0x808CCB90; // type:func
func_808CCBB0_jp = 0x808CCBB0; // type:func
func_808CCC20_jp = 0x808CCC20; // type:func
func_808CCCF4_jp = 0x808CCCF4; // type:func
func_808CCD64_jp = 0x808CCD64; // type:func
func_808CCE5C_jp = 0x808CCE5C; // type:func
func_808CCEC8_jp = 0x808CCEC8; // type:func
func_808CCF34_jp = 0x808CCF34; // type:func
func_808CCF54_jp = 0x808CCF54; // type:func
func_808CCF74_jp = 0x808CCF74; // type:func
func_808CCF94_jp = 0x808CCF94; // type:func
func_808CCFDC_jp = 0x808CCFDC; // type:func
func_808CD0EC_jp = 0x808CD0EC; // type:func
func_808CD188_jp = 0x808CD188; // type:func
func_808CD1C8_jp = 0x808CD1C8; // type:func
func_808CD280_jp = 0x808CD280; // type:func
func_808CD2D0_jp = 0x808CD2D0; // type:func
func_808CD340_jp = 0x808CD340; // type:func
func_808CD360_jp = 0x808CD360; // type:func
func_808CD380_jp = 0x808CD380; // type:func
func_808CD3A0_jp = 0x808CD3A0; // type:func
func_808CD3C0_jp = 0x808CD3C0; // type:func
func_808CD3EC_jp = 0x808CD3EC; // type:func
func_808CD46C_jp = 0x808CD46C; // type:func
func_808CD4D4_jp = 0x808CD4D4; // type:func
func_808CD5C4_jp = 0x808CD5C4; // type:func
func_808CD6B4_jp = 0x808CD6B4; // type:func
func_808CD6D4_jp = 0x808CD6D4; // type:func
func_808CD6F4_jp = 0x808CD6F4; // type:func
func_808CD714_jp = 0x808CD714; // type:func
func_808CD76C_jp = 0x808CD76C; // type:func
func_808CD78C_jp = 0x808CD78C; // type:func
func_808CD7AC_jp = 0x808CD7AC; // type:func
func_808CD9E8_jp = 0x808CD9E8; // type:func
func_808CDA78_jp = 0x808CDA78; // type:func
func_808CDB24_jp = 0x808CDB24; // type:func
func_808CDB8C_jp = 0x808CDB8C; // type:func
func_808CDC40_jp = 0x808CDC40; // type:func
func_808CDC60_jp = 0x808CDC60; // type:func
func_808CDC80_jp = 0x808CDC80; // type:func
func_808CDD70_jp = 0x808CDD70; // type:func
func_808CDDB0_jp = 0x808CDDB0; // type:func
func_808CDDD0_jp = 0x808CDDD0; // type:func
func_808CDDF0_jp = 0x808CDDF0; // type:func
func_808CDE88_jp = 0x808CDE88; // type:func
func_808CDF28_jp = 0x808CDF28; // type:func
func_808CDF78_jp = 0x808CDF78; // type:func
func_808CE018_jp = 0x808CE018; // type:func
func_808CE038_jp = 0x808CE038; // type:func
func_808CE058_jp = 0x808CE058; // type:func
func_808CE078_jp = 0x808CE078; // type:func
func_808CE098_jp = 0x808CE098; // type:func
func_808CE0E0_jp = 0x808CE0E0; // type:func
func_808CE338_jp = 0x808CE338; // type:func
func_808CE3D0_jp = 0x808CE3D0; // type:func
func_808CE44C_jp = 0x808CE44C; // type:func
func_808CE534_jp = 0x808CE534; // type:func
func_808CE554_jp = 0x808CE554; // type:func
func_808CE574_jp = 0x808CE574; // type:func
func_808CE5B0_jp = 0x808CE5B0; // type:func
func_808CE604_jp = 0x808CE604; // type:func
func_808CE624_jp = 0x808CE624; // type:func
func_808CE644_jp = 0x808CE644; // type:func
func_808CE66C_jp = 0x808CE66C; // type:func
func_808CE708_jp = 0x808CE708; // type:func
func_808CE758_jp = 0x808CE758; // type:func
func_808CE860_jp = 0x808CE860; // type:func
func_808CE880_jp = 0x808CE880; // type:func
func_808CE8A0_jp = 0x808CE8A0; // type:func
func_808CE8DC_jp = 0x808CE8DC; // type:func
func_808CE930_jp = 0x808CE930; // type:func
func_808CE950_jp = 0x808CE950; // type:func
func_808CE970_jp = 0x808CE970; // type:func
func_808CE9B0_jp = 0x808CE9B0; // type:func
func_808CEA50_jp = 0x808CEA50; // type:func
func_808CEAA0_jp = 0x808CEAA0; // type:func
func_808CEB44_jp = 0x808CEB44; // type:func
func_808CEB74_jp = 0x808CEB74; // type:func
func_808CEB94_jp = 0x808CEB94; // type:func
func_808CEBB4_jp = 0x808CEBB4; // type:func
func_808CEBD4_jp = 0x808CEBD4; // type:func
func_808CED20_jp = 0x808CED20; // type:func
func_808CEDB4_jp = 0x808CEDB4; // type:func
func_808CEE04_jp = 0x808CEE04; // type:func
func_808CEF14_jp = 0x808CEF14; // type:func
func_808CEF34_jp = 0x808CEF34; // type:func
func_808CEF54_jp = 0x808CEF54; // type:func
func_808CEF74_jp = 0x808CEF74; // type:func
func_808CEFBC_jp = 0x808CEFBC; // type:func
func_808CEFDC_jp = 0x808CEFDC; // type:func
func_808CEFFC_jp = 0x808CEFFC; // type:func
func_808CF044_jp = 0x808CF044; // type:func
func_808CF0F4_jp = 0x808CF0F4; // type:func
func_808CF144_jp = 0x808CF144; // type:func
func_808CF1E0_jp = 0x808CF1E0; // type:func
func_808CF210_jp = 0x808CF210; // type:func
func_808CF230_jp = 0x808CF230; // type:func
func_808CF250_jp = 0x808CF250; // type:func
func_808CF270_jp = 0x808CF270; // type:func
func_808CF298_jp = 0x808CF298; // type:func
func_808CF328_jp = 0x808CF328; // type:func
func_808CF378_jp = 0x808CF378; // type:func
func_808CF418_jp = 0x808CF418; // type:func
func_808CF438_jp = 0x808CF438; // type:func
func_808CF458_jp = 0x808CF458; // type:func
func_808CF478_jp = 0x808CF478; // type:func
func_808CF4C0_jp = 0x808CF4C0; // type:func
func_808CF4E0_jp = 0x808CF4E0; // type:func
func_808CF500_jp = 0x808CF500; // type:func
func_808CF540_jp = 0x808CF540; // type:func
func_808CF5F0_jp = 0x808CF5F0; // type:func
func_808CF664_jp = 0x808CF664; // type:func
func_808CF7B4_jp = 0x808CF7B4; // type:func
func_808CF7FC_jp = 0x808CF7FC; // type:func
func_808CF84C_jp = 0x808CF84C; // type:func
func_808CF86C_jp = 0x808CF86C; // type:func
func_808CF8A4_jp = 0x808CF8A4; // type:func
func_808CF8C4_jp = 0x808CF8C4; // type:func
func_808CF8E4_jp = 0x808CF8E4; // type:func
func_808CF92C_jp = 0x808CF92C; // type:func
func_808CFA54_jp = 0x808CFA54; // type:func
func_808CFD10_jp = 0x808CFD10; // type:func
func_808CFDB4_jp = 0x808CFDB4; // type:func
func_808CFE6C_jp = 0x808CFE6C; // type:func
func_808CFEEC_jp = 0x808CFEEC; // type:func
func_808CFFB0_jp = 0x808CFFB0; // type:func
func_808CFFD0_jp = 0x808CFFD0; // type:func
func_808CFFF0_jp = 0x808CFFF0; // type:func
func_808D0010_jp = 0x808D0010; // type:func
func_808D0030_jp = 0x808D0030; // type:func
func_808D0078_jp = 0x808D0078; // type:func
func_808D0094_jp = 0x808D0094; // type:func
func_808D0128_jp = 0x808D0128; // type:func
func_808D01D0_jp = 0x808D01D0; // type:func
func_808D0258_jp = 0x808D0258; // type:func
func_808D0300_jp = 0x808D0300; // type:func
func_808D032C_jp = 0x808D032C; // type:func
func_808D034C_jp = 0x808D034C; // type:func
func_808D0508_jp = 0x808D0508; // type:func
func_808D052C_jp = 0x808D052C; // type:func
func_808D0640_jp = 0x808D0640; // type:func
func_808D0748_jp = 0x808D0748; // type:func
func_808D07B4_jp = 0x808D07B4; // type:func
func_808D07D4_jp = 0x808D07D4; // type:func
func_808D07F4_jp = 0x808D07F4; // type:func
func_808D08B0_jp = 0x808D08B0; // type:func
func_808D08D4_jp = 0x808D08D4; // type:func
func_808D0A44_jp = 0x808D0A44; // type:func
func_808D0AE4_jp = 0x808D0AE4; // type:func
func_808D0B60_jp = 0x808D0B60; // type:func
func_808D0BE4_jp = 0x808D0BE4; // type:func
func_808D0C10_jp = 0x808D0C10; // type:func
func_808D0C30_jp = 0x808D0C30; // type:func
func_808D0CD0_jp = 0x808D0CD0; // type:func
func_808D0F0C_jp = 0x808D0F0C; // type:func
func_808D0F2C_jp = 0x808D0F2C; // type:func
func_808D0FBC_jp = 0x808D0FBC; // type:func
func_808D102C_jp = 0x808D102C; // type:func
func_808D104C_jp = 0x808D104C; // type:func
func_808D106C_jp = 0x808D106C; // type:func
func_808D10D8_jp = 0x808D10D8; // type:func
func_808D1248_jp = 0x808D1248; // type:func
func_808D12F0_jp = 0x808D12F0; // type:func
func_808D1380_jp = 0x808D1380; // type:func
func_808D1414_jp = 0x808D1414; // type:func
func_808D1430_jp = 0x808D1430; // type:func
func_808D1488_jp = 0x808D1488; // type:func
func_808D14A8_jp = 0x808D14A8; // type:func
func_808D1A78_jp = 0x808D1A78; // type:func
func_808D1A98_jp = 0x808D1A98; // type:func
func_808D1AE8_jp = 0x808D1AE8; // type:func
func_808D1F4C_jp = 0x808D1F4C; // type:func
func_808D1FB8_jp = 0x808D1FB8; // type:func
func_808D1FD8_jp = 0x808D1FD8; // type:func
func_808D1FF8_jp = 0x808D1FF8; // type:func
func_808D2108_jp = 0x808D2108; // type:func
func_808D21A8_jp = 0x808D21A8; // type:func
func_808D21F8_jp = 0x808D21F8; // type:func
func_808D2268_jp = 0x808D2268; // type:func
func_808D2288_jp = 0x808D2288; // type:func
func_808D22A8_jp = 0x808D22A8; // type:func
func_808D22E4_jp = 0x808D22E4; // type:func
func_808D2338_jp = 0x808D2338; // type:func
func_808D2358_jp = 0x808D2358; // type:func
func_808D2378_jp = 0x808D2378; // type:func
func_808D23B8_jp = 0x808D23B8; // type:func
func_808D2458_jp = 0x808D2458; // type:func
func_808D24E0_jp = 0x808D24E0; // type:func
func_808D251C_jp = 0x808D251C; // type:func
func_808D2648_jp = 0x808D2648; // type:func
func_808D2674_jp = 0x808D2674; // type:func
func_808D2694_jp = 0x808D2694; // type:func
func_808D26B4_jp = 0x808D26B4; // type:func
func_808D2710_jp = 0x808D2710; // type:func
func_808D2730_jp = 0x808D2730; // type:func
func_808D2750_jp = 0x808D2750; // type:func
func_808D2774_jp = 0x808D2774; // type:func
func_808D2794_jp = 0x808D2794; // type:func
func_808D283C_jp = 0x808D283C; // type:func
func_808D28CC_jp = 0x808D28CC; // type:func
func_808D2974_jp = 0x808D2974; // type:func
func_808D2994_jp = 0x808D2994; // type:func
func_808D29B4_jp = 0x808D29B4; // type:func
func_808D29D4_jp = 0x808D29D4; // type:func
func_808D29F4_jp = 0x808D29F4; // type:func
func_808D2A3C_jp = 0x808D2A3C; // type:func
func_808D2A58_jp = 0x808D2A58; // type:func
func_808D2AD4_jp = 0x808D2AD4; // type:func
func_808D2B7C_jp = 0x808D2B7C; // type:func
func_808D2C04_jp = 0x808D2C04; // type:func
func_808D2D5C_jp = 0x808D2D5C; // type:func
func_808D2DD0_jp = 0x808D2DD0; // type:func
func_808D2E40_jp = 0x808D2E40; // type:func
func_808D2E60_jp = 0x808D2E60; // type:func
func_808D2E84_jp = 0x808D2E84; // type:func
func_808D2ED8_jp = 0x808D2ED8; // type:func
func_808D2F44_jp = 0x808D2F44; // type:func
func_808D2F7C_jp = 0x808D2F7C; // type:func
func_808D2F9C_jp = 0x808D2F9C; // type:func
func_808D2FBC_jp = 0x808D2FBC; // type:func
func_808D307C_jp = 0x808D307C; // type:func
func_808D3134_jp = 0x808D3134; // type:func
func_808D3318_jp = 0x808D3318; // type:func
func_808D3384_jp = 0x808D3384; // type:func
func_808D3404_jp = 0x808D3404; // type:func
func_808D34C0_jp = 0x808D34C0; // type:func
func_808D3544_jp = 0x808D3544; // type:func
func_808D3614_jp = 0x808D3614; // type:func
func_808D3660_jp = 0x808D3660; // type:func
func_808D371C_jp = 0x808D371C; // type:func
func_808D373C_jp = 0x808D373C; // type:func
func_808D3788_jp = 0x808D3788; // type:func
func_808D37C0_jp = 0x808D37C0; // type:func
func_808D38F8_jp = 0x808D38F8; // type:func
func_808D391C_jp = 0x808D391C; // type:func
func_808D39A8_jp = 0x808D39A8; // type:func
func_808D39C8_jp = 0x808D39C8; // type:func
func_808D3A44_jp = 0x808D3A44; // type:func
func_808D3A64_jp = 0x808D3A64; // type:func
func_808D3A84_jp = 0x808D3A84; // type:func
func_808D3B40_jp = 0x808D3B40; // type:func
func_808D3BD8_jp = 0x808D3BD8; // type:func
func_808D3C8C_jp = 0x808D3C8C; // type:func
func_808D3CAC_jp = 0x808D3CAC; // type:func
func_808D3CCC_jp = 0x808D3CCC; // type:func
func_808D3CEC_jp = 0x808D3CEC; // type:func
func_808D3D88_jp = 0x808D3D88; // type:func
func_808D3E08_jp = 0x808D3E08; // type:func
func_808D3EA0_jp = 0x808D3EA0; // type:func
func_808D3F88_jp = 0x808D3F88; // type:func
func_808D3FA8_jp = 0x808D3FA8; // type:func
func_808D3FC8_jp = 0x808D3FC8; // type:func
func_808D3FE8_jp = 0x808D3FE8; // type:func
func_808D406C_jp = 0x808D406C; // type:func
func_808D40F4_jp = 0x808D40F4; // type:func
func_808D418C_jp = 0x808D418C; // type:func
func_808D4284_jp = 0x808D4284; // type:func
func_808D42A4_jp = 0x808D42A4; // type:func
func_808D42C4_jp = 0x808D42C4; // type:func
func_808D42E4_jp = 0x808D42E4; // type:func
func_808D4380_jp = 0x808D4380; // type:func
func_808D4410_jp = 0x808D4410; // type:func
func_808D44A8_jp = 0x808D44A8; // type:func
func_808D45A8_jp = 0x808D45A8; // type:func
func_808D45CC_jp = 0x808D45CC; // type:func
func_808D45EC_jp = 0x808D45EC; // type:func
func_808D460C_jp = 0x808D460C; // type:func
func_808D462C_jp = 0x808D462C; // type:func
func_808D46B4_jp = 0x808D46B4; // type:func
func_808D4744_jp = 0x808D4744; // type:func
func_808D47EC_jp = 0x808D47EC; // type:func
func_808D4870_jp = 0x808D4870; // type:func
func_808D4990_jp = 0x808D4990; // type:func
func_808D49B0_jp = 0x808D49B0; // type:func
func_808D49D0_jp = 0x808D49D0; // type:func
func_808D49F0_jp = 0x808D49F0; // type:func
func_808D4A70_jp = 0x808D4A70; // type:func
func_808D4B00_jp = 0x808D4B00; // type:func
func_808D4B98_jp = 0x808D4B98; // type:func
func_808D4CAC_jp = 0x808D4CAC; // type:func
func_808D4CDC_jp = 0x808D4CDC; // type:func
func_808D4CFC_jp = 0x808D4CFC; // type:func
func_808D4D1C_jp = 0x808D4D1C; // type:func
func_808D4D3C_jp = 0x808D4D3C; // type:func
func_808D4D68_jp = 0x808D4D68; // type:func
func_808D4DFC_jp = 0x808D4DFC; // type:func
func_808D4E84_jp = 0x808D4E84; // type:func
func_808D4EE8_jp = 0x808D4EE8; // type:func
func_808D5088_jp = 0x808D5088; // type:func
func_808D50A8_jp = 0x808D50A8; // type:func
func_808D50C8_jp = 0x808D50C8; // type:func
func_808D50E8_jp = 0x808D50E8; // type:func
func_808D5108_jp = 0x808D5108; // type:func
func_808D5150_jp = 0x808D5150; // type:func
func_808D5170_jp = 0x808D5170; // type:func
func_808D5274_jp = 0x808D5274; // type:func
func_808D5324_jp = 0x808D5324; // type:func
func_808D53D0_jp = 0x808D53D0; // type:func
func_808D5434_jp = 0x808D5434; // type:func
func_808D55DC_jp = 0x808D55DC; // type:func
func_808D55FC_jp = 0x808D55FC; // type:func
func_808D561C_jp = 0x808D561C; // type:func
func_808D563C_jp = 0x808D563C; // type:func
func_808D565C_jp = 0x808D565C; // type:func
func_808D56FC_jp = 0x808D56FC; // type:func
func_808D5744_jp = 0x808D5744; // type:func
func_808D57A0_jp = 0x808D57A0; // type:func
func_808D5848_jp = 0x808D5848; // type:func
func_808D58BC_jp = 0x808D58BC; // type:func
func_808D5960_jp = 0x808D5960; // type:func
func_808D59AC_jp = 0x808D59AC; // type:func
func_808D5A34_jp = 0x808D5A34; // type:func
func_808D5A54_jp = 0x808D5A54; // type:func
func_808D5A8C_jp = 0x808D5A8C; // type:func
func_808D5AB0_jp = 0x808D5AB0; // type:func
func_808D5AD0_jp = 0x808D5AD0; // type:func
func_808D5AF0_jp = 0x808D5AF0; // type:func
func_808D5B54_jp = 0x808D5B54; // type:func
func_808D5C18_jp = 0x808D5C18; // type:func
func_808D5C9C_jp = 0x808D5C9C; // type:func
func_808D5DA0_jp = 0x808D5DA0; // type:func
func_808D5DE4_jp = 0x808D5DE4; // type:func
func_808D5E18_jp = 0x808D5E18; // type:func
func_808D6258_jp = 0x808D6258; // type:func
func_808D6278_jp = 0x808D6278; // type:func
func_808D6298_jp = 0x808D6298; // type:func
func_808D6318_jp = 0x808D6318; // type:func
func_808D63C0_jp = 0x808D63C0; // type:func
func_808D6448_jp = 0x808D6448; // type:func
func_808D6524_jp = 0x808D6524; // type:func
func_808D655C_jp = 0x808D655C; // type:func
func_808D657C_jp = 0x808D657C; // type:func
func_808D65C4_jp = 0x808D65C4; // type:func
func_808D6610_jp = 0x808D6610; // type:func
func_808D6648_jp = 0x808D6648; // type:func
func_808D66D0_jp = 0x808D66D0; // type:func
func_808D6720_jp = 0x808D6720; // type:func
func_808D678C_jp = 0x808D678C; // type:func
func_808D67AC_jp = 0x808D67AC; // type:func
func_808D67CC_jp = 0x808D67CC; // type:func
func_808D6820_jp = 0x808D6820; // type:func
func_808D68A8_jp = 0x808D68A8; // type:func
func_808D6984_jp = 0x808D6984; // type:func
func_808D69BC_jp = 0x808D69BC; // type:func
func_808D69DC_jp = 0x808D69DC; // type:func
func_808D6A24_jp = 0x808D6A24; // type:func
func_808D6A70_jp = 0x808D6A70; // type:func
func_808D6AD4_jp = 0x808D6AD4; // type:func
func_808D6B5C_jp = 0x808D6B5C; // type:func
func_808D6BAC_jp = 0x808D6BAC; // type:func
func_808D6C34_jp = 0x808D6C34; // type:func
func_808D6C54_jp = 0x808D6C54; // type:func
func_808D6CDC_jp = 0x808D6CDC; // type:func
func_808D6D3C_jp = 0x808D6D3C; // type:func
func_808D6DA4_jp = 0x808D6DA4; // type:func
func_808D6EDC_jp = 0x808D6EDC; // type:func
func_808D6F00_jp = 0x808D6F00; // type:func
func_808D6F20_jp = 0x808D6F20; // type:func
func_808D6FC0_jp = 0x808D6FC0; // type:func
func_808D6FE0_jp = 0x808D6FE0; // type:func
func_808D7000_jp = 0x808D7000; // type:func
func_808D706C_jp = 0x808D706C; // type:func
func_808D70DC_jp = 0x808D70DC; // type:func
func_808D715C_jp = 0x808D715C; // type:func
func_808D71AC_jp = 0x808D71AC; // type:func
func_808D71CC_jp = 0x808D71CC; // type:func
func_808D71F8_jp = 0x808D71F8; // type:func
func_808D729C_jp = 0x808D729C; // type:func
func_808D72E0_jp = 0x808D72E0; // type:func
func_808D7460_jp = 0x808D7460; // type:func
func_808D7488_jp = 0x808D7488; // type:func
func_808D74AC_jp = 0x808D74AC; // type:func
func_808D74CC_jp = 0x808D74CC; // type:func
func_808D74EC_jp = 0x808D74EC; // type:func
func_808D750C_jp = 0x808D750C; // type:func
func_808D7570_jp = 0x808D7570; // type:func
func_808D7814_jp = 0x808D7814; // type:func
func_808D787C_jp = 0x808D787C; // type:func
func_808D7904_jp = 0x808D7904; // type:func
func_808D79BC_jp = 0x808D79BC; // type:func
func_808D7A7C_jp = 0x808D7A7C; // type:func
func_808D7ADC_jp = 0x808D7ADC; // type:func
func_808D7C0C_jp = 0x808D7C0C; // type:func
func_808D7C74_jp = 0x808D7C74; // type:func
func_808D7CAC_jp = 0x808D7CAC; // type:func
func_808D7CE8_jp = 0x808D7CE8; // type:func
func_808D7D30_jp = 0x808D7D30; // type:func
func_808D7D80_jp = 0x808D7D80; // type:func
func_808D7E00_jp = 0x808D7E00; // type:func
func_808D7E24_jp = 0x808D7E24; // type:func
func_808D7E44_jp = 0x808D7E44; // type:func
func_808D7EE4_jp = 0x808D7EE4; // type:func
func_808D7F24_jp = 0x808D7F24; // type:func
func_808D7F44_jp = 0x808D7F44; // type:func
func_808D7F64_jp = 0x808D7F64; // type:func
func_808D7FE4_jp = 0x808D7FE4; // type:func
func_808D8090_jp = 0x808D8090; // type:func
func_808D817C_jp = 0x808D817C; // type:func
func_808D81B4_jp = 0x808D81B4; // type:func
func_808D8200_jp = 0x808D8200; // type:func
func_808D8220_jp = 0x808D8220; // type:func
func_808D8240_jp = 0x808D8240; // type:func
func_808D8260_jp = 0x808D8260; // type:func
func_808D82E8_jp = 0x808D82E8; // type:func
func_808D8374_jp = 0x808D8374; // type:func
func_808D8408_jp = 0x808D8408; // type:func
func_808D850C_jp = 0x808D850C; // type:func
func_808D8544_jp = 0x808D8544; // type:func
func_808D8564_jp = 0x808D8564; // type:func
func_808D85B0_jp = 0x808D85B0; // type:func
func_808D85D0_jp = 0x808D85D0; // type:func
func_808D85F0_jp = 0x808D85F0; // type:func
func_808D862C_jp = 0x808D862C; // type:func
func_808D8668_jp = 0x808D8668; // type:func
func_808D86B0_jp = 0x808D86B0; // type:func
func_808D8748_jp = 0x808D8748; // type:func
func_808D87DC_jp = 0x808D87DC; // type:func
func_808D88F4_jp = 0x808D88F4; // type:func
func_808D8958_jp = 0x808D8958; // type:func
func_808D8978_jp = 0x808D8978; // type:func
func_808D89C4_jp = 0x808D89C4; // type:func
func_808D89E4_jp = 0x808D89E4; // type:func
func_808D8A04_jp = 0x808D8A04; // type:func
func_808D8A44_jp = 0x808D8A44; // type:func
func_808D8AD0_jp = 0x808D8AD0; // type:func
func_808D8B68_jp = 0x808D8B68; // type:func
func_808D8C2C_jp = 0x808D8C2C; // type:func
func_808D8C58_jp = 0x808D8C58; // type:func
func_808D8C78_jp = 0x808D8C78; // type:func
func_808D90B8_jp = 0x808D90B8; // type:func
func_808D90FC_jp = 0x808D90FC; // type:func
func_808D9144_jp = 0x808D9144; // type:func
func_808D91B8_jp = 0x808D91B8; // type:func
func_808D91D8_jp = 0x808D91D8; // type:func
func_808D91F8_jp = 0x808D91F8; // type:func
func_808D9348_jp = 0x808D9348; // type:func
func_808D93F0_jp = 0x808D93F0; // type:func
func_808D9484_jp = 0x808D9484; // type:func
func_808D9584_jp = 0x808D9584; // type:func
func_808D95BC_jp = 0x808D95BC; // type:func
func_808D95DC_jp = 0x808D95DC; // type:func
func_808D9628_jp = 0x808D9628; // type:func
func_808D9648_jp = 0x808D9648; // type:func
func_808D9668_jp = 0x808D9668; // type:func
func_808D96DC_jp = 0x808D96DC; // type:func
func_808D972C_jp = 0x808D972C; // type:func
func_808D9758_jp = 0x808D9758; // type:func
func_808D97D8_jp = 0x808D97D8; // type:func
func_808D97FC_jp = 0x808D97FC; // type:func
func_808D981C_jp = 0x808D981C; // type:func
func_808D983C_jp = 0x808D983C; // type:func
func_808D985C_jp = 0x808D985C; // type:func
func_808D995C_jp = 0x808D995C; // type:func
func_808D99E4_jp = 0x808D99E4; // type:func
func_808D9A60_jp = 0x808D9A60; // type:func
func_808D9B58_jp = 0x808D9B58; // type:func
func_808D9BA0_jp = 0x808D9BA0; // type:func
func_808D9BC0_jp = 0x808D9BC0; // type:func
func_808D9C0C_jp = 0x808D9C0C; // type:func
func_808D9C48_jp = 0x808D9C48; // type:func
func_808D9C84_jp = 0x808D9C84; // type:func
func_808D9CA4_jp = 0x808D9CA4; // type:func
func_808D9CC4_jp = 0x808D9CC4; // type:func
func_808D9CEC_jp = 0x808D9CEC; // type:func
func_808D9D78_jp = 0x808D9D78; // type:func
func_808D9DC8_jp = 0x808D9DC8; // type:func
func_808D9DF8_jp = 0x808D9DF8; // type:func
func_808D9F00_jp = 0x808D9F00; // type:func
func_808D9F2C_jp = 0x808D9F2C; // type:func
func_808D9F4C_jp = 0x808D9F4C; // type:func
func_808D9F98_jp = 0x808D9F98; // type:func
func_808D9FB8_jp = 0x808D9FB8; // type:func
func_808D9FD8_jp = 0x808D9FD8; // type:func
func_808DA000_jp = 0x808DA000; // type:func
func_808DA080_jp = 0x808DA080; // type:func
func_808DA0D0_jp = 0x808DA0D0; // type:func
func_808DA16C_jp = 0x808DA16C; // type:func
func_808DA1A8_jp = 0x808DA1A8; // type:func
func_808DA1C8_jp = 0x808DA1C8; // type:func
func_808DA380_jp = 0x808DA380; // type:func
func_808DA3A0_jp = 0x808DA3A0; // type:func
func_808DA3D0_jp = 0x808DA3D0; // type:func
func_808DA3F0_jp = 0x808DA3F0; // type:func
func_808DA418_jp = 0x808DA418; // type:func
func_808DA49C_jp = 0x808DA49C; // type:func
func_808DA4EC_jp = 0x808DA4EC; // type:func
func_808DA51C_jp = 0x808DA51C; // type:func
func_808DA6C4_jp = 0x808DA6C4; // type:func
func_808DA6F0_jp = 0x808DA6F0; // type:func
func_808DA710_jp = 0x808DA710; // type:func
func_808DA75C_jp = 0x808DA75C; // type:func
func_808DA780_jp = 0x808DA780; // type:func
func_808DA7A0_jp = 0x808DA7A0; // type:func
func_808DA7C0_jp = 0x808DA7C0; // type:func
func_808DA800_jp = 0x808DA800; // type:func
func_808DA88C_jp = 0x808DA88C; // type:func
func_808DA91C_jp = 0x808DA91C; // type:func
func_808DA9E4_jp = 0x808DA9E4; // type:func
func_808DAA4C_jp = 0x808DAA4C; // type:func
func_808DAA6C_jp = 0x808DAA6C; // type:func
func_808DAAFC_jp = 0x808DAAFC; // type:func
func_808DABB8_jp = 0x808DABB8; // type:func
func_808DABD8_jp = 0x808DABD8; // type:func
func_808DABF8_jp = 0x808DABF8; // type:func
func_808DAC18_jp = 0x808DAC18; // type:func
func_808DAC84_jp = 0x808DAC84; // type:func
func_808DAD2C_jp = 0x808DAD2C; // type:func
func_808DAD7C_jp = 0x808DAD7C; // type:func
func_808DAE7C_jp = 0x808DAE7C; // type:func
func_808DAEC0_jp = 0x808DAEC0; // type:func
func_808DAEE0_jp = 0x808DAEE0; // type:func
func_808DAF2C_jp = 0x808DAF2C; // type:func
func_808DAF70_jp = 0x808DAF70; // type:func
func_808DAF90_jp = 0x808DAF90; // type:func
func_808DAFB0_jp = 0x808DAFB0; // type:func
func_808DB028_jp = 0x808DB028; // type:func
func_808DB10C_jp = 0x808DB10C; // type:func
func_808DB154_jp = 0x808DB154; // type:func
func_808DB1F0_jp = 0x808DB1F0; // type:func
func_808DB280_jp = 0x808DB280; // type:func
func_808DB338_jp = 0x808DB338; // type:func
func_808DB358_jp = 0x808DB358; // type:func
func_808DB378_jp = 0x808DB378; // type:func
func_808DB4C8_jp = 0x808DB4C8; // type:func
func_808DB508_jp = 0x808DB508; // type:func
func_808DB528_jp = 0x808DB528; // type:func
func_808DB548_jp = 0x808DB548; // type:func
func_808DB588_jp = 0x808DB588; // type:func
func_808DB628_jp = 0x808DB628; // type:func
func_808DB6AC_jp = 0x808DB6AC; // type:func
func_808DB76C_jp = 0x808DB76C; // type:func
func_808DB7AC_jp = 0x808DB7AC; // type:func
func_808DB7F8_jp = 0x808DB7F8; // type:func
func_808DB818_jp = 0x808DB818; // type:func
func_808DB860_jp = 0x808DB860; // type:func
func_808DB89C_jp = 0x808DB89C; // type:func
func_808DB96C_jp = 0x808DB96C; // type:func
func_808DB9E0_jp = 0x808DB9E0; // type:func
func_808DBA00_jp = 0x808DBA00; // type:func
func_808DBA20_jp = 0x808DBA20; // type:func
func_808DBAE8_jp = 0x808DBAE8; // type:func
func_808DBB90_jp = 0x808DBB90; // type:func
func_808DBC20_jp = 0x808DBC20; // type:func
func_808DBD4C_jp = 0x808DBD4C; // type:func
func_808DBD84_jp = 0x808DBD84; // type:func
func_808DBDA4_jp = 0x808DBDA4; // type:func
func_808DBDF0_jp = 0x808DBDF0; // type:func
func_808DBE40_jp = 0x808DBE40; // type:func
func_808DBE7C_jp = 0x808DBE7C; // type:func
func_808DBE9C_jp = 0x808DBE9C; // type:func
func_808DBEBC_jp = 0x808DBEBC; // type:func
func_808DBF10_jp = 0x808DBF10; // type:func
func_808DBFA8_jp = 0x808DBFA8; // type:func
func_808DC034_jp = 0x808DC034; // type:func
func_808DC0A4_jp = 0x808DC0A4; // type:func
func_808DC1E8_jp = 0x808DC1E8; // type:func
func_808DC274_jp = 0x808DC274; // type:func
func_808DC294_jp = 0x808DC294; // type:func
func_808DC344_jp = 0x808DC344; // type:func
func_808DC3E4_jp = 0x808DC3E4; // type:func
func_808DC430_jp = 0x808DC430; // type:func
func_808DC450_jp = 0x808DC450; // type:func
func_808DC470_jp = 0x808DC470; // type:func
func_808DC4F8_jp = 0x808DC4F8; // type:func
func_808DC594_jp = 0x808DC594; // type:func
func_808DC648_jp = 0x808DC648; // type:func
func_808DC6F4_jp = 0x808DC6F4; // type:func
func_808DC714_jp = 0x808DC714; // type:func
func_808DC744_jp = 0x808DC744; // type:func
func_808DC7A0_jp = 0x808DC7A0; // type:func
func_808DC7E4_jp = 0x808DC7E4; // type:func
func_808DC85C_jp = 0x808DC85C; // type:func
func_808DC8AC_jp = 0x808DC8AC; // type:func
func_808DC988_jp = 0x808DC988; // type:func
func_808DC9A8_jp = 0x808DC9A8; // type:func
func_808DC9C8_jp = 0x808DC9C8; // type:func
func_808DC9E8_jp = 0x808DC9E8; // type:func
func_808DCA08_jp = 0x808DCA08; // type:func
func_808DCB18_jp = 0x808DCB18; // type:func
func_808DCBA4_jp = 0x808DCBA4; // type:func
func_808DCBF4_jp = 0x808DCBF4; // type:func
func_808DCC78_jp = 0x808DCC78; // type:func
func_808DCCB4_jp = 0x808DCCB4; // type:func
func_808DCCD4_jp = 0x808DCCD4; // type:func
func_808DCD24_jp = 0x808DCD24; // type:func
func_808DCD5C_jp = 0x808DCD5C; // type:func
func_808DCD7C_jp = 0x808DCD7C; // type:func
func_808DCD9C_jp = 0x808DCD9C; // type:func
func_808DCE40_jp = 0x808DCE40; // type:func
func_808DCF6C_jp = 0x808DCF6C; // type:func
func_808DCFA0_jp = 0x808DCFA0; // type:func
func_808DD02C_jp = 0x808DD02C; // type:func
func_808DD07C_jp = 0x808DD07C; // type:func
func_808DD0F0_jp = 0x808DD0F0; // type:func
func_808DD108_jp = 0x808DD108; // type:func
func_808DD12C_jp = 0x808DD12C; // type:func
func_808DD14C_jp = 0x808DD14C; // type:func
func_808DD16C_jp = 0x808DD16C; // type:func
func_808DD18C_jp = 0x808DD18C; // type:func
func_808DD1F8_jp = 0x808DD1F8; // type:func
func_808DD2D8_jp = 0x808DD2D8; // type:func
func_808DD318_jp = 0x808DD318; // type:func
func_808DD398_jp = 0x808DD398; // type:func
func_808DD748_jp = 0x808DD748; // type:func
func_808DD81C_jp = 0x808DD81C; // type:func
func_808DD874_jp = 0x808DD874; // type:func
func_808DD8F0_jp = 0x808DD8F0; // type:func
func_808DD9B4_jp = 0x808DD9B4; // type:func
func_808DDA18_jp = 0x808DDA18; // type:func
func_808DDB34_jp = 0x808DDB34; // type:func
func_808DDB5C_jp = 0x808DDB5C; // type:func
func_808DDBD4_jp = 0x808DDBD4; // type:func

// .data

D_808DDC50_jp = 0x808DDC50; //
D_808DDCF0_jp = 0x808DDCF0; //
D_808DDD10_jp = 0x808DDD10; //
D_808DDD90_jp = 0x808DDD90; //
D_808DDE88_jp = 0x808DDE88; // type:s8
D_808DDEF4_jp = 0x808DDEF4; // type:s8
D_808DDF60_jp = 0x808DDF60; // type:s8
D_808DDFCC_jp = 0x808DDFCC; // type:s8
D_808DE038_jp = 0x808DE038; // type:s8
D_808DE0A4_jp = 0x808DE0A4; // type:s8
D_808DE110_jp = 0x808DE110; // type:s8
D_808DE118_jp = 0x808DE118; // type:s8
D_808DE184_jp = 0x808DE184; // type:u8
D_808DE1F0_jp = 0x808DE1F0; // type:s8
D_808DE25C_jp = 0x808DE25C; //
D_808DE268_jp = 0x808DE268; //
D_808DE470_jp = 0x808DE470; //
D_808DE480_jp = 0x808DE480; //
D_808DE4A8_jp = 0x808DE4A8; //
D_808DE4B4_jp = 0x808DE4B4; // type:s16
D_808DE4B6_jp = 0x808DE4B6; // type:s16
D_808DE4B8_jp = 0x808DE4B8; // type:s16
D_808DE4BA_jp = 0x808DE4BA; // type:s16
D_808DE4C4_jp = 0x808DE4C4; // type:s8
D_808DE548_jp = 0x808DE548; // type:s8
D_808DE56C_jp = 0x808DE56C; // type:s8
D_808DE5D8_jp = 0x808DE5D8; // type:s8
D_808DE644_jp = 0x808DE644; // type:s8
D_808DE6B0_jp = 0x808DE6B0; //
D_808DE6D0_jp = 0x808DE6D0; //
D_808DE6F0_jp = 0x808DE6F0; // type:s8
D_808DE75C_jp = 0x808DE75C; // type:s8
D_808DE7C8_jp = 0x808DE7C8; // type:s8
D_808DE834_jp = 0x808DE834; // type:s8
D_808DE8A0_jp = 0x808DE8A0; //
D_808DE8A4_jp = 0x808DE8A4; //
D_808DE8A8_jp = 0x808DE8A8; //
D_808DE8AC_jp = 0x808DE8AC; //
D_808DE8B0_jp = 0x808DE8B0; //
D_808DE8B4_jp = 0x808DE8B4; //
D_808DE8B8_jp = 0x808DE8B8; //
D_808DE8BC_jp = 0x808DE8BC; //
D_808DE8C0_jp = 0x808DE8C0; //
D_808DE8C4_jp = 0x808DE8C4; //
D_808DE8C8_jp = 0x808DE8C8; //
D_808DE8CC_jp = 0x808DE8CC; //
D_808DE8D0_jp = 0x808DE8D0; //
D_808DE8D4_jp = 0x808DE8D4; //
D_808DE8D8_jp = 0x808DE8D8; //
D_808DE8DC_jp = 0x808DE8DC; //
D_808DE8E0_jp = 0x808DE8E0; //
D_808DE8E4_jp = 0x808DE8E4; //
D_808DE8E8_jp = 0x808DE8E8; //
D_808DE8EC_jp = 0x808DE8EC; //
D_808DE8F0_jp = 0x808DE8F0; //
D_808DE8F4_jp = 0x808DE8F4; //
D_808DE8F8_jp = 0x808DE8F8; //
D_808DE8FC_jp = 0x808DE8FC; //
D_808DE900_jp = 0x808DE900; //
D_808DE904_jp = 0x808DE904; //
D_808DE908_jp = 0x808DE908; //
D_808DE90C_jp = 0x808DE90C; //
D_808DE910_jp = 0x808DE910; //
D_808DE914_jp = 0x808DE914; //
D_808DE918_jp = 0x808DE918; //
D_808DE91C_jp = 0x808DE91C; //
D_808DE920_jp = 0x808DE920; //
D_808DE924_jp = 0x808DE924; //
D_808DE928_jp = 0x808DE928; //
D_808DE92C_jp = 0x808DE92C; //
D_808DE930_jp = 0x808DE930; //
D_808DE934_jp = 0x808DE934; //
D_808DE938_jp = 0x808DE938; //
D_808DE93C_jp = 0x808DE93C; //
D_808DE940_jp = 0x808DE940; //
D_808DE944_jp = 0x808DE944; //
D_808DE948_jp = 0x808DE948; //
D_808DE954_jp = 0x808DE954; //
D_808DE958_jp = 0x808DE958; //
D_808DE95C_jp = 0x808DE95C; //
D_808DE960_jp = 0x808DE960; //
D_808DE964_jp = 0x808DE964; //
D_808DE968_jp = 0x808DE968; //
D_808DE96C_jp = 0x808DE96C; //
D_808DE970_jp = 0x808DE970; //
D_808DE974_jp = 0x808DE974; //
D_808DE978_jp = 0x808DE978; //
D_808DE97C_jp = 0x808DE97C; //
D_808DE980_jp = 0x808DE980; //
D_808DE984_jp = 0x808DE984; //
D_808DE988_jp = 0x808DE988; //
D_808DE98C_jp = 0x808DE98C; //
D_808DE990_jp = 0x808DE990; //
D_808DE994_jp = 0x808DE994; //
D_808DE998_jp = 0x808DE998; //
D_808DE9A0_jp = 0x808DE9A0; //
D_808DE9A4_jp = 0x808DE9A4; //
D_808DE9A8_jp = 0x808DE9A8; //
D_808DE9AC_jp = 0x808DE9AC; //
D_808DE9B0_jp = 0x808DE9B0; //
D_808DE9B4_jp = 0x808DE9B4; //
D_808DE9B8_jp = 0x808DE9B8; //
D_808DE9BC_jp = 0x808DE9BC; //
D_808DE9C0_jp = 0x808DE9C0; //
D_808DE9C4_jp = 0x808DE9C4; //
D_808DE9C8_jp = 0x808DE9C8; //
D_808DE9CC_jp = 0x808DE9CC; //
D_808DE9D0_jp = 0x808DE9D0; //
D_808DE9D4_jp = 0x808DE9D4; //
D_808DE9D8_jp = 0x808DE9D8; //
D_808DE9DC_jp = 0x808DE9DC; //
D_808DE9E0_jp = 0x808DE9E0; //
D_808DE9E4_jp = 0x808DE9E4; //
D_808DE9E8_jp = 0x808DE9E8; //
D_808DE9F0_jp = 0x808DE9F0; //
D_808DE9F4_jp = 0x808DE9F4; //
D_808DE9F8_jp = 0x808DE9F8; //
D_808DE9FC_jp = 0x808DE9FC; //
D_808DEA00_jp = 0x808DEA00; //
D_808DEA04_jp = 0x808DEA04; //
D_808DEA08_jp = 0x808DEA08; //
D_808DEA10_jp = 0x808DEA10; //
D_808DEA14_jp = 0x808DEA14; //
D_808DEA18_jp = 0x808DEA18; //
D_808DEA20_jp = 0x808DEA20; //
D_808DEA24_jp = 0x808DEA24; //
D_808DEA28_jp = 0x808DEA28; //
D_808DEA2C_jp = 0x808DEA2C; //
D_808DEA30_jp = 0x808DEA30; //
D_808DEA34_jp = 0x808DEA34; //
D_808DEA38_jp = 0x808DEA38; //
D_808DEA3C_jp = 0x808DEA3C; //
D_808DEA40_jp = 0x808DEA40; //
D_808DEA44_jp = 0x808DEA44; //
D_808DEA48_jp = 0x808DEA48; //
D_808DEA4C_jp = 0x808DEA4C; //
D_808DEA50_jp = 0x808DEA50; //
D_808DEA54_jp = 0x808DEA54; //
D_808DEA58_jp = 0x808DEA58; //
D_808DEA5C_jp = 0x808DEA5C; //
D_808DEA60_jp = 0x808DEA60; //
D_808DEA64_jp = 0x808DEA64; //
D_808DEA68_jp = 0x808DEA68; //
D_808DEA6C_jp = 0x808DEA6C; //
D_808DEA70_jp = 0x808DEA70; //
D_808DEA74_jp = 0x808DEA74; //
D_808DEA78_jp = 0x808DEA78; //
D_808DEA7C_jp = 0x808DEA7C; //
D_808DEA80_jp = 0x808DEA80; //
D_808DEA84_jp = 0x808DEA84; //
D_808DEA88_jp = 0x808DEA88; //
D_808DEA8C_jp = 0x808DEA8C; //
D_808DEA90_jp = 0x808DEA90; //
D_808DEA94_jp = 0x808DEA94; //
D_808DEA98_jp = 0x808DEA98; //
D_808DEA9C_jp = 0x808DEA9C; //
D_808DEAA0_jp = 0x808DEAA0; //
D_808DEAA4_jp = 0x808DEAA4; //
D_808DEAA8_jp = 0x808DEAA8; //
D_808DEAAC_jp = 0x808DEAAC; //
D_808DEAB0_jp = 0x808DEAB0; //
D_808DEAB4_jp = 0x808DEAB4; //
D_808DEAB8_jp = 0x808DEAB8; //
D_808DEABC_jp = 0x808DEABC; //
D_808DEAC0_jp = 0x808DEAC0; //
D_808DECC8_jp = 0x808DECC8; //
D_808DED4C_jp = 0x808DED4C; //
D_808DED50_jp = 0x808DED50; //
D_808DED54_jp = 0x808DED54; //
D_808DED58_jp = 0x808DED58; //
D_808DED5C_jp = 0x808DED5C; //
D_808DED60_jp = 0x808DED60; //
D_808DED64_jp = 0x808DED64; //
D_808DED68_jp = 0x808DED68; //
D_808DED6C_jp = 0x808DED6C; //
D_808DED70_jp = 0x808DED70; //
D_808DED74_jp = 0x808DED74; //
D_808DED78_jp = 0x808DED78; //
D_808DED7C_jp = 0x808DED7C; //
D_808DED80_jp = 0x808DED80; //
D_808DED84_jp = 0x808DED84; //
D_808DED88_jp = 0x808DED88; //
D_808DED8C_jp = 0x808DED8C; //
D_808DED90_jp = 0x808DED90; //
D_808DED94_jp = 0x808DED94; //
D_808DED98_jp = 0x808DED98; //
D_808DED9C_jp = 0x808DED9C; //
D_808DEDA0_jp = 0x808DEDA0; //
D_808DEDA4_jp = 0x808DEDA4; //
D_808DEDA8_jp = 0x808DEDA8; //
D_808DEDAC_jp = 0x808DEDAC; //
D_808DEDB0_jp = 0x808DEDB0; //
D_808DEDB4_jp = 0x808DEDB4; //
D_808DEDB8_jp = 0x808DEDB8; //
D_808DEDBC_jp = 0x808DEDBC; //
D_808DEDC0_jp = 0x808DEDC0; //
D_808DEDC4_jp = 0x808DEDC4; //
D_808DEDC8_jp = 0x808DEDC8; //
D_808DEDCC_jp = 0x808DEDCC; //
D_808DEDD0_jp = 0x808DEDD0; //
D_808DEDD4_jp = 0x808DEDD4; //
D_808DEDD8_jp = 0x808DEDD8; //
D_808DEDDC_jp = 0x808DEDDC; //
D_808DEDE0_jp = 0x808DEDE0; //
D_808DEDE4_jp = 0x808DEDE4; //
D_808DEDE8_jp = 0x808DEDE8; //
D_808DEDEC_jp = 0x808DEDEC; //
D_808DEDF0_jp = 0x808DEDF0; //
D_808DEDF4_jp = 0x808DEDF4; //
D_808DEE00_jp = 0x808DEE00; //
D_808DEE04_jp = 0x808DEE04; //
D_808DEE08_jp = 0x808DEE08; //
D_808DEE0C_jp = 0x808DEE0C; //
D_808DEE10_jp = 0x808DEE10; //
D_808DEE14_jp = 0x808DEE14; //
D_808DEE18_jp = 0x808DEE18; //
D_808DEE1C_jp = 0x808DEE1C; //
D_808DEE20_jp = 0x808DEE20; //
D_808DEE24_jp = 0x808DEE24; //
D_808DEE28_jp = 0x808DEE28; //
D_808DEE2C_jp = 0x808DEE2C; //
D_808DEE30_jp = 0x808DEE30; //
D_808DEE34_jp = 0x808DEE34; //
D_808DEE38_jp = 0x808DEE38; //
D_808DEE3C_jp = 0x808DEE3C; //
D_808DEE40_jp = 0x808DEE40; //
D_808DEE44_jp = 0x808DEE44; //
D_808DEE48_jp = 0x808DEE48; //
D_808DEE4C_jp = 0x808DEE4C; //
D_808DEE50_jp = 0x808DEE50; //
D_808DEE54_jp = 0x808DEE54; //
D_808DEE58_jp = 0x808DEE58; //
D_808DEE5C_jp = 0x808DEE5C; //
D_808DEE60_jp = 0x808DEE60; //
D_808DEE64_jp = 0x808DEE64; //
D_808DEE68_jp = 0x808DEE68; //
D_808DEE6C_jp = 0x808DEE6C; //
D_808DEE70_jp = 0x808DEE70; //
D_808DEE74_jp = 0x808DEE74; //
D_808DEE78_jp = 0x808DEE78; //
D_808DEE7C_jp = 0x808DEE7C; //
D_808DEE80_jp = 0x808DEE80; //
D_808DEE84_jp = 0x808DEE84; //
D_808DEE88_jp = 0x808DEE88; //
D_808DEE8C_jp = 0x808DEE8C; //
D_808DEE90_jp = 0x808DEE90; //
D_808DEE98_jp = 0x808DEE98; //
D_808DEEA0_jp = 0x808DEEA0; //
D_808DEEA4_jp = 0x808DEEA4; //
D_808DEEA8_jp = 0x808DEEA8; //
D_808DEEAC_jp = 0x808DEEAC; //
D_808DEEB0_jp = 0x808DEEB0; //
D_808DEEB4_jp = 0x808DEEB4; //
D_808DEEBC_jp = 0x808DEEBC; //
D_808DEEC0_jp = 0x808DEEC0; //
D_808DEEC4_jp = 0x808DEEC4; //
D_808DEECC_jp = 0x808DEECC; //
D_808DEED0_jp = 0x808DEED0; //
D_808DEED4_jp = 0x808DEED4; //
D_808DEED8_jp = 0x808DEED8; //
D_808DEEDC_jp = 0x808DEEDC; //
D_808DEEE0_jp = 0x808DEEE0; //
D_808DEEE4_jp = 0x808DEEE4; //
D_808DEEE8_jp = 0x808DEEE8; //
D_808DEEEC_jp = 0x808DEEEC; //
D_808DEEF0_jp = 0x808DEEF0; //
D_808DEEF4_jp = 0x808DEEF4; //
D_808DEEF8_jp = 0x808DEEF8; //
D_808DEEFC_jp = 0x808DEEFC; //
D_808DEF00_jp = 0x808DEF00; //
D_808DEF04_jp = 0x808DEF04; //
D_808DEF08_jp = 0x808DEF08; //
D_808DEF0C_jp = 0x808DEF0C; //
D_808DEF10_jp = 0x808DEF10; //
D_808DEF14_jp = 0x808DEF14; //
D_808DEF18_jp = 0x808DEF18; //
D_808DEF1C_jp = 0x808DEF1C; //
D_808DEF20_jp = 0x808DEF20; //
D_808DEF24_jp = 0x808DEF24; //
D_808DEF28_jp = 0x808DEF28; //
D_808DEF2C_jp = 0x808DEF2C; //
D_808DEF30_jp = 0x808DEF30; //
D_808DEF34_jp = 0x808DEF34; //
D_808DEF38_jp = 0x808DEF38; //
D_808DEF3C_jp = 0x808DEF3C; //
D_808DEF40_jp = 0x808DEF40; //
D_808DEF44_jp = 0x808DEF44; //
D_808DEF48_jp = 0x808DEF48; //
D_808DEF4C_jp = 0x808DEF4C; //
D_808DEF50_jp = 0x808DEF50; //
D_808DEF54_jp = 0x808DEF54; //
D_808DEF58_jp = 0x808DEF58; //
D_808DEF5C_jp = 0x808DEF5C; //
D_808DEF60_jp = 0x808DEF60; //
D_808DEF64_jp = 0x808DEF64; //
D_808DEF68_jp = 0x808DEF68; //
D_808DEF6C_jp = 0x808DEF6C; //
D_808DF174_jp = 0x808DF174; //
D_808DF1F8_jp = 0x808DF1F8; // type:u8
D_FLT_808DF27C_jp = 0x808DF27C; // type:f32
D_FLT_808DF29C_jp = 0x808DF29C; // type:f32
D_808DF2BC_jp = 0x808DF2BC; // type:s8
D_808DF328_jp = 0x808DF328; // type:s8
D_808DF394_jp = 0x808DF394; //
D_808DF3A0_jp = 0x808DF3A0; // type:s8
D_808DF40C_jp = 0x808DF40C; // type:s8
D_808DF478_jp = 0x808DF478; // type:s8
D_808DF49C_jp = 0x808DF49C; // type:s8
D_808DF508_jp = 0x808DF508; // type:u8
D_808DF52C_jp = 0x808DF52C; // type:s8
D_808DF550_jp = 0x808DF550; // type:s8
D_808DF574_jp = 0x808DF574; // type:s8
D_808DF598_jp = 0x808DF598; //
D_808DF5A0_jp = 0x808DF5A0; //
D_808DF5A8_jp = 0x808DF5A8; //
D_808DF5B4_jp = 0x808DF5B4; //
D_808DF5C0_jp = 0x808DF5C0; //
D_808DF5CC_jp = 0x808DF5CC; //
D_808DF5D8_jp = 0x808DF5D8; //
D_808DF5E0_jp = 0x808DF5E0; //
D_808DF5EC_jp = 0x808DF5EC; //
D_808DF5F8_jp = 0x808DF5F8; //
D_808DF604_jp = 0x808DF604; //
D_808DF610_jp = 0x808DF610; //
D_808DF61C_jp = 0x808DF61C; //
D_808DF628_jp = 0x808DF628; //
D_808DF7CC_jp = 0x808DF7CC; //
D_808DF7E4_jp = 0x808DF7E4; //
D_808DF7F8_jp = 0x808DF7F8; //
D_808DF84C_jp = 0x808DF84C; //
D_808DF8A0_jp = 0x808DF8A0; //
D_808DF908_jp = 0x808DF908; //
D_FLT_808DF970_jp = 0x808DF970; // type:f32
D_808DF9D0_jp = 0x808DF9D0; // type:s8
D_808DF9F4_jp = 0x808DF9F4; // type:s8
D_FLT_808DFA18_jp = 0x808DFA18; // type:f32
D_FLT_808DFA1C_jp = 0x808DFA1C; // type:f32
D_FLT_808DFA20_jp = 0x808DFA20; // type:f32
D_FLT_808DFA24_jp = 0x808DFA24; // type:f32
D_FLT_808DFA38_jp = 0x808DFA38; // type:f32
D_808DFA4C_jp = 0x808DFA4C; // type:u8
D_808DFA54_jp = 0x808DFA54; //
D_808DFBF8_jp = 0x808DFBF8; //
D_808DFD9C_jp = 0x808DFD9C; //
D_808DFF40_jp = 0x808DFF40; //
D_808E00E4_jp = 0x808E00E4; // type:s8
D_808E0150_jp = 0x808E0150; //

// .rodata

RO_STR_808E0160_jp = 0x808E0160; // type:asciz
RO_STR_808E0184_jp = 0x808E0184; // type:asciz
RO_STR_808E01A8_jp = 0x808E01A8; // type:asciz
RO_FLT_808E01CC_jp = 0x808E01CC; // type:f32
RO_FLT_808E01D0_jp = 0x808E01D0; // type:f32
RO_FLT_808E01D4_jp = 0x808E01D4; // type:f32
RO_FLT_808E01D8_jp = 0x808E01D8; // type:f32
RO_FLT_808E01DC_jp = 0x808E01DC; // type:f32
RO_FLT_808E01E0_jp = 0x808E01E0; // type:f32
RO_FLT_808E01E4_jp = 0x808E01E4; // type:f32
RO_FLT_808E01E8_jp = 0x808E01E8; // type:f32
RO_FLT_808E01EC_jp = 0x808E01EC; // type:f32
RO_FLT_808E01F0_jp = 0x808E01F0; // type:f32
RO_FLT_808E01F4_jp = 0x808E01F4; // type:f32
RO_FLT_808E01F8_jp = 0x808E01F8; // type:f32
RO_FLT_808E01FC_jp = 0x808E01FC; // type:f32
RO_FLT_808E0200_jp = 0x808E0200; // type:f32
RO_FLT_808E0204_jp = 0x808E0204; // type:f32
RO_FLT_808E0208_jp = 0x808E0208; // type:f32
RO_FLT_808E020C_jp = 0x808E020C; // type:f32
RO_FLT_808E0210_jp = 0x808E0210; // type:f32
RO_FLT_808E0214_jp = 0x808E0214; // type:f32
RO_FLT_808E0218_jp = 0x808E0218; // type:f32
RO_FLT_808E021C_jp = 0x808E021C; // type:f32
RO_FLT_808E0220_jp = 0x808E0220; // type:f32
jtbl_808E0224_jp = 0x808E0224; // type:jtbl
jtbl_808E0240_jp = 0x808E0240; // type:jtbl
RO_FLT_808E025C_jp = 0x808E025C; // type:f32
RO_FLT_808E0260_jp = 0x808E0260; // type:f32
RO_FLT_808E0264_jp = 0x808E0264; // type:f32
RO_FLT_808E0268_jp = 0x808E0268; // type:f32
RO_FLT_808E026C_jp = 0x808E026C; // type:f32
RO_FLT_808E0270_jp = 0x808E0270; // type:f32
jtbl_808E0274_jp = 0x808E0274; // type:jtbl
RO_FLT_808E0304_jp = 0x808E0304; // type:f32
RO_FLT_808E0308_jp = 0x808E0308; // type:f32
RO_FLT_808E030C_jp = 0x808E030C; // type:f32
RO_FLT_808E0310_jp = 0x808E0310; // type:f32
RO_FLT_808E0314_jp = 0x808E0314; // type:f32
RO_FLT_808E0318_jp = 0x808E0318; // type:f32
RO_FLT_808E031C_jp = 0x808E031C; // type:f32
RO_FLT_808E0320_jp = 0x808E0320; // type:f32
RO_FLT_808E0324_jp = 0x808E0324; // type:f32
RO_FLT_808E0328_jp = 0x808E0328; // type:f32
RO_FLT_808E032C_jp = 0x808E032C; // type:f32
RO_FLT_808E0330_jp = 0x808E0330; // type:f32
RO_FLT_808E0334_jp = 0x808E0334; // type:f32
RO_FLT_808E0338_jp = 0x808E0338; // type:f32
RO_FLT_808E033C_jp = 0x808E033C; // type:f32
RO_FLT_808E0340_jp = 0x808E0340; // type:f32
RO_FLT_808E0344_jp = 0x808E0344; // type:f32
RO_FLT_808E0348_jp = 0x808E0348; // type:f32
RO_FLT_808E034C_jp = 0x808E034C; // type:f32
RO_FLT_808E0350_jp = 0x808E0350; // type:f32
RO_FLT_808E0354_jp = 0x808E0354; // type:f32
RO_FLT_808E0358_jp = 0x808E0358; // type:f32
RO_FLT_808E035C_jp = 0x808E035C; // type:f32
RO_FLT_808E0360_jp = 0x808E0360; // type:f32
RO_FLT_808E0364_jp = 0x808E0364; // type:f32
RO_FLT_808E0368_jp = 0x808E0368; // type:f32
RO_FLT_808E036C_jp = 0x808E036C; // type:f32
RO_FLT_808E0370_jp = 0x808E0370; // type:f32
jtbl_808E0374_jp = 0x808E0374; // type:jtbl
jtbl_808E03B4_jp = 0x808E03B4; // type:jtbl
RO_FLT_808E03E0_jp = 0x808E03E0; // type:f32
RO_FLT_808E03E4_jp = 0x808E03E4; // type:f32
RO_FLT_808E03E8_jp = 0x808E03E8; // type:f32
RO_FLT_808E03EC_jp = 0x808E03EC; // type:f32
RO_FLT_808E03F0_jp = 0x808E03F0; // type:f32
RO_FLT_808E03F4_jp = 0x808E03F4; // type:f32
RO_FLT_808E03F8_jp = 0x808E03F8; // type:f32
RO_FLT_808E03FC_jp = 0x808E03FC; // type:f32
RO_FLT_808E0400_jp = 0x808E0400; // type:f32
RO_FLT_808E0404_jp = 0x808E0404; // type:f32
RO_FLT_808E0408_jp = 0x808E0408; // type:f32
RO_FLT_808E040C_jp = 0x808E040C; // type:f32
RO_FLT_808E0410_jp = 0x808E0410; // type:f32
RO_FLT_808E0414_jp = 0x808E0414; // type:f32
RO_FLT_808E0418_jp = 0x808E0418; // type:f32
RO_FLT_808E041C_jp = 0x808E041C; // type:f32
RO_FLT_808E0420_jp = 0x808E0420; // type:f32
RO_FLT_808E0424_jp = 0x808E0424; // type:f32
RO_FLT_808E0428_jp = 0x808E0428; // type:f32
RO_FLT_808E042C_jp = 0x808E042C; // type:f32
RO_FLT_808E0430_jp = 0x808E0430; // type:f32
RO_FLT_808E0434_jp = 0x808E0434; // type:f32
RO_FLT_808E0438_jp = 0x808E0438; // type:f32
RO_FLT_808E043C_jp = 0x808E043C; // type:f32
RO_FLT_808E0440_jp = 0x808E0440; // type:f32
RO_FLT_808E0444_jp = 0x808E0444; // type:f32
RO_FLT_808E0448_jp = 0x808E0448; // type:f32
RO_FLT_808E044C_jp = 0x808E044C; // type:f32
RO_FLT_808E0450_jp = 0x808E0450; // type:f32
RO_FLT_808E0454_jp = 0x808E0454; // type:f32
RO_FLT_808E0458_jp = 0x808E0458; // type:f32
RO_FLT_808E045C_jp = 0x808E045C; // type:f32
jtbl_808E0460_jp = 0x808E0460; // type:jtbl
jtbl_808E0474_jp = 0x808E0474; // type:jtbl
RO_FLT_808E048C_jp = 0x808E048C; // type:f32
RO_FLT_808E0490_jp = 0x808E0490; // type:f32
RO_FLT_808E0494_jp = 0x808E0494; // type:f32
RO_FLT_808E0498_jp = 0x808E0498; // type:f32
RO_FLT_808E049C_jp = 0x808E049C; // type:f32
RO_FLT_808E04A0_jp = 0x808E04A0; // type:f32
RO_FLT_808E04A4_jp = 0x808E04A4; // type:f32
RO_FLT_808E04A8_jp = 0x808E04A8; // type:f32
RO_FLT_808E04AC_jp = 0x808E04AC; // type:f32
RO_FLT_808E04B0_jp = 0x808E04B0; // type:f32
RO_FLT_808E04B4_jp = 0x808E04B4; // type:f32
RO_FLT_808E04B8_jp = 0x808E04B8; // type:f32
RO_FLT_808E04BC_jp = 0x808E04BC; // type:f32
RO_FLT_808E04C0_jp = 0x808E04C0; // type:f32
D_808E04D0_jp = 0x808E04D0; //

// .text

func_808E4980_jp = 0x808E4980; // type:func
func_808E4B7C_jp = 0x808E4B7C; // type:func
func_808E4C04_jp = 0x808E4C04; // type:func
func_808E4D50_jp = 0x808E4D50; // type:func
func_808E4F40_jp = 0x808E4F40; // type:func
func_808E541C_jp = 0x808E541C; // type:func
func_808E5518_jp = 0x808E5518; // type:func
func_808E5648_jp = 0x808E5648; // type:func
func_808E5668_jp = 0x808E5668; // type:func
func_808E5774_jp = 0x808E5774; // type:func
func_808E57C0_jp = 0x808E57C0; // type:func

// .data

D_808E5920_jp = 0x808E5920; // type:u8
D_808E5924_jp = 0x808E5924; // type:s16
D_808E5928_jp = 0x808E5928; //
D_808E5934_jp = 0x808E5934; //

// .rodata

RO_STR_808E5940_jp = 0x808E5940; // type:asciz
RO_FLT_808E5954_jp = 0x808E5954; // type:f32
jtbl_808E5958_jp = 0x808E5958; // type:jtbl
RO_FLT_808E5970_jp = 0x808E5970; // type:f32
RO_FLT_808E5974_jp = 0x808E5974; // type:f32
RO_FLT_808E5978_jp = 0x808E5978; // type:f32
RO_FLT_808E597C_jp = 0x808E597C; // type:f32
RO_FLT_808E5980_jp = 0x808E5980; // type:f32
RO_FLT_808E5984_jp = 0x808E5984; // type:f32
RO_FLT_808E5988_jp = 0x808E5988; // type:f32
RO_FLT_808E598C_jp = 0x808E598C; // type:f32
RO_FLT_808E5990_jp = 0x808E5990; // type:f32
RO_FLT_808E5994_jp = 0x808E5994; // type:f32

// .text

func_808E5AB0_jp = 0x808E5AB0; // type:func
func_808E5D30_jp = 0x808E5D30; // type:func
func_808E5E20_jp = 0x808E5E20; // type:func
func_808E5E60_jp = 0x808E5E60; // type:func
func_808E5EF0_jp = 0x808E5EF0; // type:func
func_808E5FCC_jp = 0x808E5FCC; // type:func
func_808E6144_jp = 0x808E6144; // type:func
func_808E6304_jp = 0x808E6304; // type:func
func_808E6410_jp = 0x808E6410; // type:func
func_808E649C_jp = 0x808E649C; // type:func
func_808E6568_jp = 0x808E6568; // type:func
func_808E65F8_jp = 0x808E65F8; // type:func
func_808E6710_jp = 0x808E6710; // type:func
func_808E67E8_jp = 0x808E67E8; // type:func
func_808E6B34_jp = 0x808E6B34; // type:func
func_808E6C28_jp = 0x808E6C28; // type:func
func_808E6C78_jp = 0x808E6C78; // type:func
func_808E6CE4_jp = 0x808E6CE4; // type:func
func_808E6D34_jp = 0x808E6D34; // type:func
func_808E6F3C_jp = 0x808E6F3C; // type:func

// .data

D_808E6FB0_jp = 0x808E6FB0; //
D_808E6FD0_jp = 0x808E6FD0; //
D_FLT_808E6FF0_jp = 0x808E6FF0; // type:f32
D_FLT_808E6FF8_jp = 0x808E6FF8; // type:f32
D_FLT_808E7008_jp = 0x808E7008; // type:f32
D_FLT_808E7018_jp = 0x808E7018; // type:f32
D_FLT_808E7028_jp = 0x808E7028; // type:f32
D_808E7038_jp = 0x808E7038; // type:s16
D_FLT_808E703C_jp = 0x808E703C; // type:f32
D_808E7060_jp = 0x808E7060; //
D_808E706C_jp = 0x808E706C; //

// .rodata

RO_FLT_808E7080_jp = 0x808E7080; // type:f32
RO_FLT_808E7084_jp = 0x808E7084; // type:f32
RO_FLT_808E7088_jp = 0x808E7088; // type:f32
RO_FLT_808E708C_jp = 0x808E708C; // type:f32
RO_FLT_808E7090_jp = 0x808E7090; // type:f32
RO_FLT_808E7094_jp = 0x808E7094; // type:f32
RO_FLT_808E7098_jp = 0x808E7098; // type:f32
RO_FLT_808E709C_jp = 0x808E709C; // type:f32
RO_FLT_808E70A0_jp = 0x808E70A0; // type:f32

// .text

func_808E7200_jp = 0x808E7200; // type:func
func_808E73FC_jp = 0x808E73FC; // type:func
func_808E748C_jp = 0x808E748C; // type:func
func_808E7510_jp = 0x808E7510; // type:func
func_808E759C_jp = 0x808E759C; // type:func
func_808E764C_jp = 0x808E764C; // type:func
func_808E7690_jp = 0x808E7690; // type:func
func_808E7768_jp = 0x808E7768; // type:func
func_808E78C0_jp = 0x808E78C0; // type:func
func_808E7C34_jp = 0x808E7C34; // type:func
func_808E7D34_jp = 0x808E7D34; // type:func
func_808E7D5C_jp = 0x808E7D5C; // type:func
func_808E7F64_jp = 0x808E7F64; // type:func
func_808E7FB0_jp = 0x808E7FB0; // type:func

// .data

D_808E80C0_jp = 0x808E80C0; // type:s16
D_808E80C8_jp = 0x808E80C8; //
D_808E80D4_jp = 0x808E80D4; //

// .rodata

RO_FLT_808E80E0_jp = 0x808E80E0; // type:f32
RO_FLT_808E80E4_jp = 0x808E80E4; // type:f32
RO_FLT_808E80E8_jp = 0x808E80E8; // type:f32
RO_FLT_808E80EC_jp = 0x808E80EC; // type:f32
RO_FLT_808E80F0_jp = 0x808E80F0; // type:f32
jtbl_808E80F4_jp = 0x808E80F4; // type:jtbl
RO_FLT_808E8114_jp = 0x808E8114; // type:f32
RO_FLT_808E8118_jp = 0x808E8118; // type:f32

// .text

func_808E8220_jp = 0x808E8220; // type:func
func_808E8408_jp = 0x808E8408; // type:func
func_808E844C_jp = 0x808E844C; // type:func
func_808E85A0_jp = 0x808E85A0; // type:func
func_808E8800_jp = 0x808E8800; // type:func
func_808E8868_jp = 0x808E8868; // type:func
func_808E892C_jp = 0x808E892C; // type:func
func_808E8968_jp = 0x808E8968; // type:func
func_808E89B8_jp = 0x808E89B8; // type:func
func_808E8A04_jp = 0x808E8A04; // type:func

// .data

D_FLT_808E8BF0_jp = 0x808E8BF0; // type:f32
D_808E8C2C_jp = 0x808E8C2C; //
D_808E8C6C_jp = 0x808E8C6C; //
D_808E8C78_jp = 0x808E8C78; //

// .rodata

RO_FLT_808E8C90_jp = 0x808E8C90; // type:f32
RO_FLT_808E8C94_jp = 0x808E8C94; // type:f32
RO_FLT_808E8C98_jp = 0x808E8C98; // type:f32
RO_FLT_808E8C9C_jp = 0x808E8C9C; // type:f32
RO_FLT_808E8CA0_jp = 0x808E8CA0; // type:f32
RO_FLT_808E8CA4_jp = 0x808E8CA4; // type:f32

// .text

func_808E8D70_jp = 0x808E8D70; // type:func
func_808E901C_jp = 0x808E901C; // type:func
func_808E90C4_jp = 0x808E90C4; // type:func
func_808E9174_jp = 0x808E9174; // type:func
func_808E9258_jp = 0x808E9258; // type:func
func_808E9348_jp = 0x808E9348; // type:func
func_808E94F8_jp = 0x808E94F8; // type:func
func_808E95B4_jp = 0x808E95B4; // type:func
func_808E95C8_jp = 0x808E95C8; // type:func
func_808E9614_jp = 0x808E9614; // type:func

// .data

D_808E9930_jp = 0x808E9930; //
D_FLT_808E9938_jp = 0x808E9938; // type:f32
D_FLT_808E9950_jp = 0x808E9950; // type:f32
D_808E99BC_jp = 0x808E99BC; //
D_808E99C8_jp = 0x808E99C8; //
D_808E99D0_jp = 0x808E99D0; //

// .rodata

RO_FLT_808E99E0_jp = 0x808E99E0; // type:f32
RO_FLT_808E99E4_jp = 0x808E99E4; // type:f32
RO_FLT_808E99E8_jp = 0x808E99E8; // type:f32
RO_FLT_808E99EC_jp = 0x808E99EC; // type:f32

// .text

func_808E9AA0_jp = 0x808E9AA0; // type:func
func_808E9BE8_jp = 0x808E9BE8; // type:func
func_808E9C2C_jp = 0x808E9C2C; // type:func
func_808E9D40_jp = 0x808E9D40; // type:func
func_808EA020_jp = 0x808EA020; // type:func
func_808EA13C_jp = 0x808EA13C; // type:func
func_808EA150_jp = 0x808EA150; // type:func
func_808EA19C_jp = 0x808EA19C; // type:func

// .data

D_808EA1E0_jp = 0x808EA1E0; // type:u8
D_FLT_808EA1E4_jp = 0x808EA1E4; // type:f32
D_808EA1EC_jp = 0x808EA1EC; //
D_808EA1F4_jp = 0x808EA1F4; //

// .rodata

jtbl_808EA200_jp = 0x808EA200; // type:jtbl
RO_FLT_808EA214_jp = 0x808EA214; // type:f32
RO_FLT_808EA218_jp = 0x808EA218; // type:f32
RO_FLT_808EA21C_jp = 0x808EA21C; // type:f32

// .text

func_808EA2C0_jp = 0x808EA2C0; // type:func
func_808EA404_jp = 0x808EA404; // type:func
func_808EA448_jp = 0x808EA448; // type:func
func_808EA584_jp = 0x808EA584; // type:func
func_808EA778_jp = 0x808EA778; // type:func
func_808EA898_jp = 0x808EA898; // type:func
func_808EA8AC_jp = 0x808EA8AC; // type:func
func_808EA8F8_jp = 0x808EA8F8; // type:func

// .data

D_808EA940_jp = 0x808EA940; // type:s16
D_FLT_808EA944_jp = 0x808EA944; // type:f32
D_808EA94C_jp = 0x808EA94C; //
D_808EA954_jp = 0x808EA954; //

// .rodata

jtbl_808EA960_jp = 0x808EA960; // type:jtbl
RO_FLT_808EA994_jp = 0x808EA994; // type:f32
RO_FLT_808EA998_jp = 0x808EA998; // type:f32
RO_FLT_808EA99C_jp = 0x808EA99C; // type:f32

// .text

func_808EAA60_jp = 0x808EAA60; // type:func
func_808EAC8C_jp = 0x808EAC8C; // type:func
func_808EACD0_jp = 0x808EACD0; // type:func
func_808EAE0C_jp = 0x808EAE0C; // type:func
func_808EB350_jp = 0x808EB350; // type:func
func_808EB4A0_jp = 0x808EB4A0; // type:func
func_808EB508_jp = 0x808EB508; // type:func
func_808EB554_jp = 0x808EB554; // type:func

// .data

D_FLT_808EB5A0_jp = 0x808EB5A0; // type:f32
D_808EB5DC_jp = 0x808EB5DC; // type:s16
D_808EB5E0_jp = 0x808EB5E0; //
D_FLT_808EB620_jp = 0x808EB620; // type:f32
D_808EB628_jp = 0x808EB628; //
D_808EB630_jp = 0x808EB630; //

// .rodata

RO_FLT_808EB640_jp = 0x808EB640; // type:f32
RO_FLT_808EB644_jp = 0x808EB644; // type:f32
RO_FLT_808EB648_jp = 0x808EB648; // type:f32
RO_FLT_808EB64C_jp = 0x808EB64C; // type:f32
RO_FLT_808EB650_jp = 0x808EB650; // type:f32
RO_FLT_808EB654_jp = 0x808EB654; // type:f32

// .text

func_808EB720_jp = 0x808EB720; // type:func
func_808EB854_jp = 0x808EB854; // type:func
func_808EB954_jp = 0x808EB954; // type:func
func_808EBA24_jp = 0x808EBA24; // type:func
func_808EBA8C_jp = 0x808EBA8C; // type:func
func_808EBAF8_jp = 0x808EBAF8; // type:func
func_808EBB4C_jp = 0x808EBB4C; // type:func
func_808EBC7C_jp = 0x808EBC7C; // type:func
func_808EBD28_jp = 0x808EBD28; // type:func

// .data

_007E4DF0_Profile = 0x808EBD70; //
D_808EBD94_jp = 0x808EBD94; //
D_808EBE00_jp = 0x808EBE00; //
D_FLT_808EBE6C_jp = 0x808EBE6C; // type:f32

// .rodata

RO_STR_808EBEB0_jp = 0x808EBEB0; // type:asciz
RO_FLT_808EBED0_jp = 0x808EBED0; // type:f32

// .bss

B_808EBEE0_jp = 0x808EBEE0; //
B_808EBEE8_jp = 0x808EBEE8; //

// .text

func_808EBF90_jp = 0x808EBF90; // type:func
func_808EBFD8_jp = 0x808EBFD8; // type:func

// .data

_007E5640_Profile = 0x808EC150; //
D_FLT_808EC174_jp = 0x808EC174; // type:f32

// .rodata

RO_FLT_808EC190_jp = 0x808EC190; // type:f32

// .text

func_808EC1D0_jp = 0x808EC1D0; // type:func
func_808EC2FC_jp = 0x808EC2FC; // type:func
func_808EC4E0_jp = 0x808EC4E0; // type:func
func_808EC664_jp = 0x808EC664; // type:func
func_808EC694_jp = 0x808EC694; // type:func
func_808EC818_jp = 0x808EC818; // type:func
func_808EC954_jp = 0x808EC954; // type:func
func_808EC9A8_jp = 0x808EC9A8; // type:func
func_808ECA5C_jp = 0x808ECA5C; // type:func
func_808ECDE8_jp = 0x808ECDE8; // type:func
func_808ECE58_jp = 0x808ECE58; // type:func
func_808ECEA0_jp = 0x808ECEA0; // type:func
func_808ECFD8_jp = 0x808ECFD8; // type:func
func_808ED020_jp = 0x808ED020; // type:func
func_808ED088_jp = 0x808ED088; // type:func
func_808ED2CC_jp = 0x808ED2CC; // type:func
func_808ED354_jp = 0x808ED354; // type:func
func_808ED550_jp = 0x808ED550; // type:func
func_808ED594_jp = 0x808ED594; // type:func
func_808ED660_jp = 0x808ED660; // type:func
func_808ED704_jp = 0x808ED704; // type:func
func_808ED89C_jp = 0x808ED89C; // type:func
func_808ED8F4_jp = 0x808ED8F4; // type:func
func_808EDAAC_jp = 0x808EDAAC; // type:func
func_808EDB14_jp = 0x808EDB14; // type:func
func_808EDB74_jp = 0x808EDB74; // type:func
func_808EDD38_jp = 0x808EDD38; // type:func
func_808EDF2C_jp = 0x808EDF2C; // type:func
func_808EE00C_jp = 0x808EE00C; // type:func
func_808EE090_jp = 0x808EE090; // type:func
func_808EE2D0_jp = 0x808EE2D0; // type:func
func_808EE82C_jp = 0x808EE82C; // type:func
func_808EE868_jp = 0x808EE868; // type:func
func_808EEA24_jp = 0x808EEA24; // type:func
func_808EEB10_jp = 0x808EEB10; // type:func
func_808EEC5C_jp = 0x808EEC5C; // type:func
func_808EED04_jp = 0x808EED04; // type:func
func_808EED54_jp = 0x808EED54; // type:func
func_808EEFD8_jp = 0x808EEFD8; // type:func
func_808EF0F4_jp = 0x808EF0F4; // type:func
func_808EF300_jp = 0x808EF300; // type:func
func_808EF3E4_jp = 0x808EF3E4; // type:func
func_808EF590_jp = 0x808EF590; // type:func
func_808EF6C4_jp = 0x808EF6C4; // type:func
func_808EF89C_jp = 0x808EF89C; // type:func
func_808EF9D4_jp = 0x808EF9D4; // type:func
func_808EFA90_jp = 0x808EFA90; // type:func
func_808EFAF8_jp = 0x808EFAF8; // type:func
func_808EFC54_jp = 0x808EFC54; // type:func
func_808EFC74_jp = 0x808EFC74; // type:func
func_808EFCC0_jp = 0x808EFCC0; // type:func
func_808EFD34_jp = 0x808EFD34; // type:func
func_808EFD98_jp = 0x808EFD98; // type:func
func_808EFDFC_jp = 0x808EFDFC; // type:func
func_808F0218_jp = 0x808F0218; // type:func
func_808F0290_jp = 0x808F0290; // type:func
func_808F0330_jp = 0x808F0330; // type:func
func_808F0408_jp = 0x808F0408; // type:func
func_808F0590_jp = 0x808F0590; // type:func
func_808F0784_jp = 0x808F0784; // type:func
func_808F0978_jp = 0x808F0978; // type:func
func_808F0B2C_jp = 0x808F0B2C; // type:func
func_808F0BF8_jp = 0x808F0BF8; // type:func
func_808F0CE0_jp = 0x808F0CE0; // type:func
func_808F0D68_jp = 0x808F0D68; // type:func
func_808F104C_jp = 0x808F104C; // type:func
func_808F1120_jp = 0x808F1120; // type:func
func_808F1168_jp = 0x808F1168; // type:func
func_808F1214_jp = 0x808F1214; // type:func
func_808F14F0_jp = 0x808F14F0; // type:func
func_808F1638_jp = 0x808F1638; // type:func
func_808F1964_jp = 0x808F1964; // type:func
func_808F19E0_jp = 0x808F19E0; // type:func
func_808F1BAC_jp = 0x808F1BAC; // type:func
func_808F1C3C_jp = 0x808F1C3C; // type:func
func_808F1CB0_jp = 0x808F1CB0; // type:func
func_808F1FE4_jp = 0x808F1FE4; // type:func
func_808F20A4_jp = 0x808F20A4; // type:func
func_808F2294_jp = 0x808F2294; // type:func
func_808F2728_jp = 0x808F2728; // type:func
func_808F27A8_jp = 0x808F27A8; // type:func
func_808F281C_jp = 0x808F281C; // type:func
func_808F2868_jp = 0x808F2868; // type:func
func_808F28C4_jp = 0x808F28C4; // type:func
func_808F29A4_jp = 0x808F29A4; // type:func
func_808F2A84_jp = 0x808F2A84; // type:func
func_808F2ADC_jp = 0x808F2ADC; // type:func
func_808F2BC0_jp = 0x808F2BC0; // type:func
func_808F2D08_jp = 0x808F2D08; // type:func
func_808F2D98_jp = 0x808F2D98; // type:func
func_808F2E70_jp = 0x808F2E70; // type:func
func_808F2F38_jp = 0x808F2F38; // type:func
func_808F2FD0_jp = 0x808F2FD0; // type:func
func_808F3108_jp = 0x808F3108; // type:func
func_808F3244_jp = 0x808F3244; // type:func
func_808F32DC_jp = 0x808F32DC; // type:func
func_808F346C_jp = 0x808F346C; // type:func
func_808F360C_jp = 0x808F360C; // type:func
func_808F3698_jp = 0x808F3698; // type:func
func_808F3724_jp = 0x808F3724; // type:func
func_808F3900_jp = 0x808F3900; // type:func
func_808F3B78_jp = 0x808F3B78; // type:func
func_808F3BB0_jp = 0x808F3BB0; // type:func
func_808F3BE8_jp = 0x808F3BE8; // type:func
func_808F3C84_jp = 0x808F3C84; // type:func

// .data

_007E5880_Profile = 0x808F3CC0; //
D_808F3CE4_jp = 0x808F3CE4; //
D_808F3D24_jp = 0x808F3D24; //
D_808F3D64_jp = 0x808F3D64; //
D_808F42A4_jp = 0x808F42A4; //
D_808F4694_jp = 0x808F4694; //
D_808F46A0_jp = 0x808F46A0; //
D_808F471C_jp = 0x808F471C; //
D_808F4724_jp = 0x808F4724; //
D_808F472C_jp = 0x808F472C; //
D_808F4734_jp = 0x808F4734; //
D_808F473C_jp = 0x808F473C; //
D_808F4744_jp = 0x808F4744; //
D_808F474C_jp = 0x808F474C; //
D_808F4754_jp = 0x808F4754; //
D_808F475C_jp = 0x808F475C; //
D_808F4764_jp = 0x808F4764; //
D_808F476C_jp = 0x808F476C; //
D_808F4774_jp = 0x808F4774; //
D_808F477C_jp = 0x808F477C; //
D_808F4784_jp = 0x808F4784; //
D_808F478C_jp = 0x808F478C; //
D_808F4794_jp = 0x808F4794; //
D_808F479C_jp = 0x808F479C; //
D_808F47A4_jp = 0x808F47A4; //
D_808F47AC_jp = 0x808F47AC; //
D_808F47B4_jp = 0x808F47B4; //
D_808F47BC_jp = 0x808F47BC; //
D_808F47C4_jp = 0x808F47C4; //
D_808F47C8_jp = 0x808F47C8; //
D_808F47CC_jp = 0x808F47CC; //
D_808F47D8_jp = 0x808F47D8; //
D_808F47E4_jp = 0x808F47E4; //
D_808F47F0_jp = 0x808F47F0; //
D_808F47FC_jp = 0x808F47FC; //
D_808F4808_jp = 0x808F4808; //
D_808F4814_jp = 0x808F4814; //
D_808F4818_jp = 0x808F4818; //
D_808F481C_jp = 0x808F481C; //
D_808F483C_jp = 0x808F483C; //
D_808F485C_jp = 0x808F485C; //
D_808F487C_jp = 0x808F487C; //
D_808F489C_jp = 0x808F489C; //
D_808F48BC_jp = 0x808F48BC; //
D_808F48DC_jp = 0x808F48DC; //
D_808F48FC_jp = 0x808F48FC; //
D_808F491C_jp = 0x808F491C; //
D_808F493C_jp = 0x808F493C; //
D_808F495C_jp = 0x808F495C; //
D_808F497C_jp = 0x808F497C; //
D_808F499C_jp = 0x808F499C; //
D_808F49D4_jp = 0x808F49D4; //
D_808F49DC_jp = 0x808F49DC; //
D_808F49E4_jp = 0x808F49E4; //
D_808F49EC_jp = 0x808F49EC; //
D_808F49F4_jp = 0x808F49F4; //
D_808F49FC_jp = 0x808F49FC; //
D_808F4A04_jp = 0x808F4A04; //
D_808F4A0C_jp = 0x808F4A0C; //
D_808F4A10_jp = 0x808F4A10; //
D_808F4A14_jp = 0x808F4A14; //
D_808F4A18_jp = 0x808F4A18; //
D_808F4A1C_jp = 0x808F4A1C; //
D_808F4A20_jp = 0x808F4A20; //
D_808F4A40_jp = 0x808F4A40; //
D_808F4A60_jp = 0x808F4A60; //
D_808F4A80_jp = 0x808F4A80; //
D_808F4AA0_jp = 0x808F4AA0; //
D_808F4AB0_jp = 0x808F4AB0; //
D_808F4AB8_jp = 0x808F4AB8; //
D_808F4ABC_jp = 0x808F4ABC; //
D_808F4AC4_jp = 0x808F4AC4; //
D_808F4AC8_jp = 0x808F4AC8; //
D_808F4AE8_jp = 0x808F4AE8; //
D_808F4AF8_jp = 0x808F4AF8; //
D_808F4B00_jp = 0x808F4B00; //
D_808F4B04_jp = 0x808F4B04; //
D_808F4B0C_jp = 0x808F4B0C; //
D_808F4B10_jp = 0x808F4B10; //
D_808F4B30_jp = 0x808F4B30; //
D_808F4B40_jp = 0x808F4B40; //
D_808F4B48_jp = 0x808F4B48; //
D_808F4B4C_jp = 0x808F4B4C; //
D_808F4B54_jp = 0x808F4B54; //
D_808F4B58_jp = 0x808F4B58; //
D_808F4B78_jp = 0x808F4B78; //
D_808F4B88_jp = 0x808F4B88; //
D_808F4B90_jp = 0x808F4B90; //
D_808F4B94_jp = 0x808F4B94; //
D_808F4B9C_jp = 0x808F4B9C; //
D_808F4BA0_jp = 0x808F4BA0; //
D_808F4BC0_jp = 0x808F4BC0; //
D_808F4BD0_jp = 0x808F4BD0; //
D_808F4BD8_jp = 0x808F4BD8; //
D_808F4BDC_jp = 0x808F4BDC; //
D_808F4BE4_jp = 0x808F4BE4; //
D_808F4BE8_jp = 0x808F4BE8; //
D_808F4C08_jp = 0x808F4C08; //
D_808F4C74_jp = 0x808F4C74; //
D_808F4C7C_jp = 0x808F4C7C; //
D_808F4C80_jp = 0x808F4C80; //
D_808F4CA0_jp = 0x808F4CA0; //
D_808F4CA8_jp = 0x808F4CA8; //
D_808F4CAC_jp = 0x808F4CAC; //
D_808F4CCC_jp = 0x808F4CCC; //
D_808F4D38_jp = 0x808F4D38; //
D_808F4D40_jp = 0x808F4D40; //
D_808F4D44_jp = 0x808F4D44; //
D_808F4D64_jp = 0x808F4D64; //
D_808F4D6C_jp = 0x808F4D6C; //
D_808F4D70_jp = 0x808F4D70; //
D_808F4D90_jp = 0x808F4D90; //
D_808F4DB0_jp = 0x808F4DB0; //
D_808F4DB8_jp = 0x808F4DB8; //
D_808F4DC0_jp = 0x808F4DC0; //
D_808F4DC8_jp = 0x808F4DC8; //
D_808F4DD0_jp = 0x808F4DD0; //
D_808F4DD4_jp = 0x808F4DD4; //
D_808F4DD8_jp = 0x808F4DD8; //
D_808F4DDC_jp = 0x808F4DDC; //
D_808F4DE0_jp = 0x808F4DE0; //
D_808F4E00_jp = 0x808F4E00; //
D_808F4E20_jp = 0x808F4E20; //
D_808F4E40_jp = 0x808F4E40; //
D_808F4E60_jp = 0x808F4E60; //
D_808F4E70_jp = 0x808F4E70; //
D_808F4E78_jp = 0x808F4E78; //
D_808F4E7C_jp = 0x808F4E7C; //
D_808F4E9C_jp = 0x808F4E9C; //
D_808F4EA4_jp = 0x808F4EA4; //
D_808F4EAC_jp = 0x808F4EAC; //
D_808F4EB0_jp = 0x808F4EB0; //
D_808F4ED0_jp = 0x808F4ED0; //
D_808F4EDC_jp = 0x808F4EDC; //
D_808F4EE8_jp = 0x808F4EE8; //
D_808F4EF4_jp = 0x808F4EF4; //
D_808F4EFC_jp = 0x808F4EFC; //
D_808F4F08_jp = 0x808F4F08; //
D_808F4F38_jp = 0x808F4F38; //
D_808F4F40_jp = 0x808F4F40; //
D_808F4F48_jp = 0x808F4F48; //
D_808F4F4C_jp = 0x808F4F4C; //
D_808F4F6C_jp = 0x808F4F6C; //
D_808F4F8C_jp = 0x808F4F8C; //
D_808F4FAC_jp = 0x808F4FAC; //
D_808F4FCC_jp = 0x808F4FCC; //
D_808F4FEC_jp = 0x808F4FEC; //
D_808F4FF4_jp = 0x808F4FF4; //
D_808F4FFC_jp = 0x808F4FFC; //
D_808F5000_jp = 0x808F5000; //
D_808F5020_jp = 0x808F5020; //
D_808F502C_jp = 0x808F502C; //
D_808F5038_jp = 0x808F5038; //
D_808F5044_jp = 0x808F5044; //
D_808F504C_jp = 0x808F504C; //
D_808F5054_jp = 0x808F5054; //
D_808F5058_jp = 0x808F5058; //
D_808F5078_jp = 0x808F5078; //
D_808F5080_jp = 0x808F5080; //
D_808F5088_jp = 0x808F5088; //
D_808F508C_jp = 0x808F508C; //
D_808F50AC_jp = 0x808F50AC; //
D_808F50B4_jp = 0x808F50B4; //
D_808F50BC_jp = 0x808F50BC; //
D_808F50C0_jp = 0x808F50C0; //
D_808F50E0_jp = 0x808F50E0; //
D_808F50E8_jp = 0x808F50E8; //
D_808F50F0_jp = 0x808F50F0; //
D_808F50F4_jp = 0x808F50F4; //
D_808F5114_jp = 0x808F5114; //
D_808F511C_jp = 0x808F511C; //
D_808F5124_jp = 0x808F5124; //
D_808F5128_jp = 0x808F5128; //
D_808F5148_jp = 0x808F5148; //
D_808F5150_jp = 0x808F5150; //
D_808F5158_jp = 0x808F5158; //
D_808F515C_jp = 0x808F515C; //
D_808F517C_jp = 0x808F517C; //
D_808F5184_jp = 0x808F5184; //
D_808F518C_jp = 0x808F518C; //
D_808F5190_jp = 0x808F5190; //
D_808F51B0_jp = 0x808F51B0; //
D_808F51B8_jp = 0x808F51B8; //
D_808F51C0_jp = 0x808F51C0; //
D_808F51C4_jp = 0x808F51C4; //
D_808F51E4_jp = 0x808F51E4; //
D_808F51EC_jp = 0x808F51EC; //
D_808F51F4_jp = 0x808F51F4; //
D_808F51F8_jp = 0x808F51F8; //
D_808F5218_jp = 0x808F5218; //
D_808F5220_jp = 0x808F5220; //
D_808F5228_jp = 0x808F5228; //
D_808F522C_jp = 0x808F522C; //
D_808F524C_jp = 0x808F524C; //
D_808F5254_jp = 0x808F5254; //
D_808F525C_jp = 0x808F525C; //
D_808F5260_jp = 0x808F5260; //
D_808F5280_jp = 0x808F5280; //
D_808F5288_jp = 0x808F5288; //
D_808F5290_jp = 0x808F5290; //
D_808F5294_jp = 0x808F5294; //
D_808F52B4_jp = 0x808F52B4; //
D_808F52BC_jp = 0x808F52BC; //
D_808F52C4_jp = 0x808F52C4; //
D_808F52C8_jp = 0x808F52C8; //
D_808F52E8_jp = 0x808F52E8; //
D_808F52F0_jp = 0x808F52F0; //
D_808F52F8_jp = 0x808F52F8; //
D_808F52FC_jp = 0x808F52FC; //
D_808F531C_jp = 0x808F531C; //
D_808F5324_jp = 0x808F5324; //
D_808F532C_jp = 0x808F532C; //
D_808F5330_jp = 0x808F5330; //
D_808F5350_jp = 0x808F5350; //
D_808F5358_jp = 0x808F5358; //
D_808F5360_jp = 0x808F5360; //
D_808F5364_jp = 0x808F5364; //
D_808F5384_jp = 0x808F5384; //
D_808F538C_jp = 0x808F538C; //
D_808F5394_jp = 0x808F5394; //
D_808F5398_jp = 0x808F5398; //
D_808F53B8_jp = 0x808F53B8; //
D_808F53C0_jp = 0x808F53C0; //
D_808F53C8_jp = 0x808F53C8; //
D_808F53CC_jp = 0x808F53CC; //
D_808F53EC_jp = 0x808F53EC; //
D_808F53F4_jp = 0x808F53F4; //
D_808F53FC_jp = 0x808F53FC; //
D_808F5400_jp = 0x808F5400; //
D_808F5420_jp = 0x808F5420; //
D_808F5428_jp = 0x808F5428; //
D_808F5430_jp = 0x808F5430; //
D_808F5434_jp = 0x808F5434; //
D_808F5454_jp = 0x808F5454; //
D_808F545C_jp = 0x808F545C; //
D_808F5464_jp = 0x808F5464; //
D_808F5468_jp = 0x808F5468; //
D_808F5488_jp = 0x808F5488; //
D_808F54A0_jp = 0x808F54A0; //
D_808F54A8_jp = 0x808F54A8; //
D_808F54B0_jp = 0x808F54B0; //
D_808F54B8_jp = 0x808F54B8; //
D_808F54BC_jp = 0x808F54BC; //
D_808F54C0_jp = 0x808F54C0; //
D_808F54C4_jp = 0x808F54C4; //
D_808F54E4_jp = 0x808F54E4; //
D_808F5504_jp = 0x808F5504; //
D_808F5524_jp = 0x808F5524; //
D_FLT_808F5724_jp = 0x808F5724; // type:f32
D_FLT_808F5764_jp = 0x808F5764; // type:f32
D_808F57A4_jp = 0x808F57A4; //
D_FLT_808F57EC_jp = 0x808F57EC; // type:f32
D_808F57F8_jp = 0x808F57F8; //
D_808F5804_jp = 0x808F5804; // type:u16
D_808F5822_jp = 0x808F5822; //
D_808F5824_jp = 0x808F5824; // type:u16
D_808F583C_jp = 0x808F583C; //
D_808F5854_jp = 0x808F5854; //
D_808F5878_jp = 0x808F5878; //
D_808F589C_jp = 0x808F589C; //
D_808F58C0_jp = 0x808F58C0; //
D_808F58CC_jp = 0x808F58CC; //
D_808F5934_jp = 0x808F5934; //
D_FLT_808F5938_jp = 0x808F5938; // type:f32
D_FLT_808F593C_jp = 0x808F593C; // type:f32
D_808F5940_jp = 0x808F5940; //
D_808F5A30_jp = 0x808F5A30; //

// .rodata

RO_STR_808F5A50_jp = 0x808F5A50; // type:asciz
RO_STR_808F5A68_jp = 0x808F5A68; // type:asciz
RO_STR_808F5A80_jp = 0x808F5A80; // type:asciz
RO_FLT_808F5A94_jp = 0x808F5A94; // type:f32
jtbl_808F5A98_jp = 0x808F5A98; // type:jtbl
jtbl_808F5AB4_jp = 0x808F5AB4; // type:jtbl
jtbl_808F5AD0_jp = 0x808F5AD0; // type:jtbl
RO_FLT_808F5AE8_jp = 0x808F5AE8; // type:f32
RO_FLT_808F5AEC_jp = 0x808F5AEC; // type:f32
RO_FLT_808F5AF0_jp = 0x808F5AF0; // type:f32
RO_FLT_808F5AF4_jp = 0x808F5AF4; // type:f32
RO_FLT_808F5AF8_jp = 0x808F5AF8; // type:f32
RO_FLT_808F5AFC_jp = 0x808F5AFC; // type:f32
RO_FLT_808F5B00_jp = 0x808F5B00; // type:f32
RO_FLT_808F5B04_jp = 0x808F5B04; // type:f32
RO_FLT_808F5B08_jp = 0x808F5B08; // type:f32
RO_FLT_808F5B0C_jp = 0x808F5B0C; // type:f32
RO_FLT_808F5B10_jp = 0x808F5B10; // type:f32
RO_FLT_808F5B14_jp = 0x808F5B14; // type:f32
RO_FLT_808F5B18_jp = 0x808F5B18; // type:f32
RO_FLT_808F5B1C_jp = 0x808F5B1C; // type:f32
RO_FLT_808F5B20_jp = 0x808F5B20; // type:f32
jtbl_808F5B24_jp = 0x808F5B24; // type:jtbl
RO_FLT_808F5B38_jp = 0x808F5B38; // type:f32
RO_FLT_808F5B3C_jp = 0x808F5B3C; // type:f32

// .bss

B_808F5B40_jp = 0x808F5B40; //
B_808F5F40_jp = 0x808F5F40; //
B_808F5F80_jp = 0x808F5F80; // type:s16
B_808F5F82_jp = 0x808F5F82; // type:s8
B_808F5F84_jp = 0x808F5F84; // type:s8
B_808F5F88_jp = 0x808F5F88; //
B_808F5FC8_jp = 0x808F5FC8; // type:s16
B_808F5FCA_jp = 0x808F5FCA; // type:s8
B_808F5FCC_jp = 0x808F5FCC; // type:s8

// .text

func_808F7130_jp = 0x808F7130; // type:func
func_808F725C_jp = 0x808F725C; // type:func
func_808F7440_jp = 0x808F7440; // type:func
func_808F75C4_jp = 0x808F75C4; // type:func
func_808F75F4_jp = 0x808F75F4; // type:func
func_808F7778_jp = 0x808F7778; // type:func
func_808F78B4_jp = 0x808F78B4; // type:func
func_808F7908_jp = 0x808F7908; // type:func
func_808F79BC_jp = 0x808F79BC; // type:func
func_808F7D48_jp = 0x808F7D48; // type:func
func_808F7DB8_jp = 0x808F7DB8; // type:func
func_808F7E00_jp = 0x808F7E00; // type:func
func_808F7F38_jp = 0x808F7F38; // type:func
func_808F7F80_jp = 0x808F7F80; // type:func
func_808F7FE8_jp = 0x808F7FE8; // type:func
func_808F822C_jp = 0x808F822C; // type:func
func_808F82B4_jp = 0x808F82B4; // type:func
func_808F84B0_jp = 0x808F84B0; // type:func
func_808F84F4_jp = 0x808F84F4; // type:func
func_808F85C0_jp = 0x808F85C0; // type:func
func_808F8664_jp = 0x808F8664; // type:func
func_808F87FC_jp = 0x808F87FC; // type:func
func_808F8854_jp = 0x808F8854; // type:func
func_808F8A0C_jp = 0x808F8A0C; // type:func
func_808F8A74_jp = 0x808F8A74; // type:func
func_808F8AD4_jp = 0x808F8AD4; // type:func
func_808F8C98_jp = 0x808F8C98; // type:func
func_808F8E8C_jp = 0x808F8E8C; // type:func
func_808F8F6C_jp = 0x808F8F6C; // type:func
func_808F8FF0_jp = 0x808F8FF0; // type:func
func_808F9230_jp = 0x808F9230; // type:func
func_808F978C_jp = 0x808F978C; // type:func
func_808F97C8_jp = 0x808F97C8; // type:func
func_808F9984_jp = 0x808F9984; // type:func
func_808F9A70_jp = 0x808F9A70; // type:func
func_808F9BBC_jp = 0x808F9BBC; // type:func
func_808F9C64_jp = 0x808F9C64; // type:func
func_808F9CB4_jp = 0x808F9CB4; // type:func
func_808F9F38_jp = 0x808F9F38; // type:func
func_808FA054_jp = 0x808FA054; // type:func
func_808FA260_jp = 0x808FA260; // type:func
func_808FA344_jp = 0x808FA344; // type:func
func_808FA4F0_jp = 0x808FA4F0; // type:func
func_808FA624_jp = 0x808FA624; // type:func
func_808FA7FC_jp = 0x808FA7FC; // type:func
func_808FA934_jp = 0x808FA934; // type:func
func_808FA9F0_jp = 0x808FA9F0; // type:func
func_808FAA58_jp = 0x808FAA58; // type:func
func_808FABB4_jp = 0x808FABB4; // type:func
func_808FABD4_jp = 0x808FABD4; // type:func
func_808FAC20_jp = 0x808FAC20; // type:func
func_808FAC94_jp = 0x808FAC94; // type:func
func_808FACF8_jp = 0x808FACF8; // type:func
func_808FAD5C_jp = 0x808FAD5C; // type:func
func_808FB178_jp = 0x808FB178; // type:func
func_808FB1F0_jp = 0x808FB1F0; // type:func
func_808FB290_jp = 0x808FB290; // type:func
func_808FB368_jp = 0x808FB368; // type:func
func_808FB4F0_jp = 0x808FB4F0; // type:func
func_808FB6E4_jp = 0x808FB6E4; // type:func
func_808FB8D8_jp = 0x808FB8D8; // type:func
func_808FBA8C_jp = 0x808FBA8C; // type:func
func_808FBB58_jp = 0x808FBB58; // type:func
func_808FBC40_jp = 0x808FBC40; // type:func
func_808FBCC8_jp = 0x808FBCC8; // type:func
func_808FBFAC_jp = 0x808FBFAC; // type:func
func_808FC080_jp = 0x808FC080; // type:func
func_808FC0C8_jp = 0x808FC0C8; // type:func
func_808FC174_jp = 0x808FC174; // type:func
func_808FC450_jp = 0x808FC450; // type:func
func_808FC598_jp = 0x808FC598; // type:func
func_808FC8C4_jp = 0x808FC8C4; // type:func
func_808FC940_jp = 0x808FC940; // type:func
func_808FCB0C_jp = 0x808FCB0C; // type:func
func_808FCB9C_jp = 0x808FCB9C; // type:func
func_808FCC10_jp = 0x808FCC10; // type:func
func_808FCF44_jp = 0x808FCF44; // type:func
func_808FD024_jp = 0x808FD024; // type:func
func_808FD214_jp = 0x808FD214; // type:func
func_808FD6A8_jp = 0x808FD6A8; // type:func
func_808FD728_jp = 0x808FD728; // type:func
func_808FD79C_jp = 0x808FD79C; // type:func
func_808FD7E8_jp = 0x808FD7E8; // type:func
func_808FD844_jp = 0x808FD844; // type:func
func_808FD924_jp = 0x808FD924; // type:func
func_808FDA04_jp = 0x808FDA04; // type:func
func_808FDA5C_jp = 0x808FDA5C; // type:func
func_808FDB40_jp = 0x808FDB40; // type:func
func_808FDC88_jp = 0x808FDC88; // type:func
func_808FDD18_jp = 0x808FDD18; // type:func
func_808FDDF0_jp = 0x808FDDF0; // type:func
func_808FDEB8_jp = 0x808FDEB8; // type:func
func_808FDF50_jp = 0x808FDF50; // type:func
func_808FE088_jp = 0x808FE088; // type:func
func_808FE1C4_jp = 0x808FE1C4; // type:func
func_808FE25C_jp = 0x808FE25C; // type:func
func_808FE3EC_jp = 0x808FE3EC; // type:func
func_808FE58C_jp = 0x808FE58C; // type:func
func_808FE618_jp = 0x808FE618; // type:func
func_808FE6A4_jp = 0x808FE6A4; // type:func
func_808FE880_jp = 0x808FE880; // type:func
func_808FEB94_jp = 0x808FEB94; // type:func
func_808FEBCC_jp = 0x808FEBCC; // type:func
func_808FEC04_jp = 0x808FEC04; // type:func
func_808FECA0_jp = 0x808FECA0; // type:func

// .data

_007F0350_Profile = 0x808FECE0; //
D_808FED04_jp = 0x808FED04; //
D_808FED44_jp = 0x808FED44; //
D_808FED84_jp = 0x808FED84; //
D_808FF2C4_jp = 0x808FF2C4; //
D_808FF6B4_jp = 0x808FF6B4; //
D_808FF6C0_jp = 0x808FF6C0; //
D_808FF73C_jp = 0x808FF73C; //
D_808FF744_jp = 0x808FF744; //
D_808FF74C_jp = 0x808FF74C; //
D_808FF754_jp = 0x808FF754; //
D_808FF75C_jp = 0x808FF75C; //
D_808FF764_jp = 0x808FF764; //
D_808FF76C_jp = 0x808FF76C; //
D_808FF774_jp = 0x808FF774; //
D_808FF77C_jp = 0x808FF77C; //
D_808FF784_jp = 0x808FF784; //
D_808FF78C_jp = 0x808FF78C; //
D_808FF794_jp = 0x808FF794; //
D_808FF79C_jp = 0x808FF79C; //
D_808FF7A4_jp = 0x808FF7A4; //
D_808FF7AC_jp = 0x808FF7AC; //
D_808FF7B4_jp = 0x808FF7B4; //
D_808FF7BC_jp = 0x808FF7BC; //
D_808FF7C4_jp = 0x808FF7C4; //
D_808FF7CC_jp = 0x808FF7CC; //
D_808FF7D0_jp = 0x808FF7D0; //
D_808FF7D4_jp = 0x808FF7D4; //
D_808FF7DC_jp = 0x808FF7DC; //
D_808FF7E4_jp = 0x808FF7E4; //
D_808FF7EC_jp = 0x808FF7EC; //
D_808FF7F8_jp = 0x808FF7F8; //
D_808FF804_jp = 0x808FF804; //
D_808FF810_jp = 0x808FF810; //
D_808FF81C_jp = 0x808FF81C; //
D_808FF828_jp = 0x808FF828; //
D_808FF834_jp = 0x808FF834; //
D_808FF838_jp = 0x808FF838; //
D_808FF83C_jp = 0x808FF83C; //
D_808FF85C_jp = 0x808FF85C; //
D_808FF87C_jp = 0x808FF87C; //
D_808FF89C_jp = 0x808FF89C; //
D_808FF8BC_jp = 0x808FF8BC; //
D_808FF8DC_jp = 0x808FF8DC; //
D_808FF8FC_jp = 0x808FF8FC; //
D_808FF91C_jp = 0x808FF91C; //
D_808FF93C_jp = 0x808FF93C; //
D_808FF95C_jp = 0x808FF95C; //
D_808FF97C_jp = 0x808FF97C; //
D_808FF99C_jp = 0x808FF99C; //
D_808FF9BC_jp = 0x808FF9BC; //
D_808FF9F4_jp = 0x808FF9F4; //
D_808FF9FC_jp = 0x808FF9FC; //
D_808FFA04_jp = 0x808FFA04; //
D_808FFA0C_jp = 0x808FFA0C; //
D_808FFA14_jp = 0x808FFA14; //
D_808FFA1C_jp = 0x808FFA1C; //
D_808FFA24_jp = 0x808FFA24; //
D_808FFA2C_jp = 0x808FFA2C; //
D_808FFA30_jp = 0x808FFA30; //
D_808FFA34_jp = 0x808FFA34; //
D_808FFA38_jp = 0x808FFA38; //
D_808FFA3C_jp = 0x808FFA3C; //
D_808FFA40_jp = 0x808FFA40; //
D_808FFA60_jp = 0x808FFA60; //
D_808FFA80_jp = 0x808FFA80; //
D_808FFAA0_jp = 0x808FFAA0; //
D_808FFAC0_jp = 0x808FFAC0; //
D_808FFAD0_jp = 0x808FFAD0; //
D_808FFAD8_jp = 0x808FFAD8; //
D_808FFADC_jp = 0x808FFADC; //
D_808FFAE4_jp = 0x808FFAE4; //
D_808FFAE8_jp = 0x808FFAE8; //
D_808FFB08_jp = 0x808FFB08; //
D_808FFB18_jp = 0x808FFB18; //
D_808FFB20_jp = 0x808FFB20; //
D_808FFB24_jp = 0x808FFB24; //
D_808FFB2C_jp = 0x808FFB2C; //
D_808FFB30_jp = 0x808FFB30; //
D_808FFB50_jp = 0x808FFB50; //
D_808FFB60_jp = 0x808FFB60; //
D_808FFB68_jp = 0x808FFB68; //
D_808FFB6C_jp = 0x808FFB6C; //
D_808FFB74_jp = 0x808FFB74; //
D_808FFB78_jp = 0x808FFB78; //
D_808FFB98_jp = 0x808FFB98; //
D_808FFBA8_jp = 0x808FFBA8; //
D_808FFBB0_jp = 0x808FFBB0; //
D_808FFBB4_jp = 0x808FFBB4; //
D_808FFBBC_jp = 0x808FFBBC; //
D_808FFBC0_jp = 0x808FFBC0; //
D_808FFBE0_jp = 0x808FFBE0; //
D_808FFBF0_jp = 0x808FFBF0; //
D_808FFBF8_jp = 0x808FFBF8; //
D_808FFBFC_jp = 0x808FFBFC; //
D_808FFC04_jp = 0x808FFC04; //
D_808FFC08_jp = 0x808FFC08; //
D_808FFC28_jp = 0x808FFC28; //
D_808FFC30_jp = 0x808FFC30; //
D_808FFC38_jp = 0x808FFC38; //
D_808FFC3C_jp = 0x808FFC3C; //
D_808FFC5C_jp = 0x808FFC5C; //
D_808FFC74_jp = 0x808FFC74; //
D_808FFC7C_jp = 0x808FFC7C; //
D_808FFC84_jp = 0x808FFC84; //
D_808FFC8C_jp = 0x808FFC8C; //
D_808FFC90_jp = 0x808FFC90; //
D_808FFC94_jp = 0x808FFC94; //
D_808FFC98_jp = 0x808FFC98; //
D_808FFCB8_jp = 0x808FFCB8; //
D_808FFCD8_jp = 0x808FFCD8; //
D_808FFCF8_jp = 0x808FFCF8; //
D_808FFD64_jp = 0x808FFD64; //
D_808FFD6C_jp = 0x808FFD6C; //
D_808FFD70_jp = 0x808FFD70; //
D_808FFD90_jp = 0x808FFD90; //
D_808FFD98_jp = 0x808FFD98; //
D_808FFD9C_jp = 0x808FFD9C; //
D_808FFDBC_jp = 0x808FFDBC; //
D_808FFE28_jp = 0x808FFE28; //
D_808FFE30_jp = 0x808FFE30; //
D_808FFE34_jp = 0x808FFE34; //
D_808FFE54_jp = 0x808FFE54; //
D_808FFE5C_jp = 0x808FFE5C; //
D_808FFE60_jp = 0x808FFE60; //
D_808FFE80_jp = 0x808FFE80; //
D_808FFE88_jp = 0x808FFE88; //
D_808FFE90_jp = 0x808FFE90; //
D_808FFE94_jp = 0x808FFE94; //
D_808FFEB4_jp = 0x808FFEB4; //
D_808FFEC0_jp = 0x808FFEC0; //
D_808FFECC_jp = 0x808FFECC; //
D_808FFED8_jp = 0x808FFED8; //
D_808FFEE0_jp = 0x808FFEE0; //
D_808FFEEC_jp = 0x808FFEEC; //
D_808FFF1C_jp = 0x808FFF1C; //
D_808FFF24_jp = 0x808FFF24; //
D_808FFF2C_jp = 0x808FFF2C; //
D_808FFF30_jp = 0x808FFF30; //
D_808FFF50_jp = 0x808FFF50; //
D_808FFF70_jp = 0x808FFF70; //
D_808FFF90_jp = 0x808FFF90; //
D_808FFFB0_jp = 0x808FFFB0; //
D_808FFFD0_jp = 0x808FFFD0; //
D_808FFFD8_jp = 0x808FFFD8; //
D_808FFFE0_jp = 0x808FFFE0; //
D_808FFFE4_jp = 0x808FFFE4; //
D_80900004_jp = 0x80900004; //
D_80900010_jp = 0x80900010; //
D_8090001C_jp = 0x8090001C; //
D_80900028_jp = 0x80900028; //
D_80900030_jp = 0x80900030; //
D_80900038_jp = 0x80900038; //
D_8090003C_jp = 0x8090003C; //
D_8090005C_jp = 0x8090005C; //
D_80900064_jp = 0x80900064; //
D_8090006C_jp = 0x8090006C; //
D_80900070_jp = 0x80900070; //
D_80900090_jp = 0x80900090; //
D_80900098_jp = 0x80900098; //
D_809000A0_jp = 0x809000A0; //
D_809000A4_jp = 0x809000A4; //
D_809000C4_jp = 0x809000C4; //
D_809000CC_jp = 0x809000CC; //
D_809000D4_jp = 0x809000D4; //
D_809000D8_jp = 0x809000D8; //
D_809000F8_jp = 0x809000F8; //
D_80900100_jp = 0x80900100; //
D_80900108_jp = 0x80900108; //
D_8090010C_jp = 0x8090010C; //
D_8090012C_jp = 0x8090012C; //
D_80900134_jp = 0x80900134; //
D_8090013C_jp = 0x8090013C; //
D_80900140_jp = 0x80900140; //
D_80900160_jp = 0x80900160; //
D_80900168_jp = 0x80900168; //
D_80900170_jp = 0x80900170; //
D_80900174_jp = 0x80900174; //
D_80900194_jp = 0x80900194; //
D_8090019C_jp = 0x8090019C; //
D_809001A4_jp = 0x809001A4; //
D_809001A8_jp = 0x809001A8; //
D_809001C8_jp = 0x809001C8; //
D_809001D0_jp = 0x809001D0; //
D_809001D8_jp = 0x809001D8; //
D_809001DC_jp = 0x809001DC; //
D_809001FC_jp = 0x809001FC; //
D_80900204_jp = 0x80900204; //
D_8090020C_jp = 0x8090020C; //
D_80900210_jp = 0x80900210; //
D_80900230_jp = 0x80900230; //
D_80900238_jp = 0x80900238; //
D_80900240_jp = 0x80900240; //
D_80900244_jp = 0x80900244; //
D_80900264_jp = 0x80900264; //
D_8090026C_jp = 0x8090026C; //
D_80900274_jp = 0x80900274; //
D_80900278_jp = 0x80900278; //
D_80900298_jp = 0x80900298; //
D_809002A0_jp = 0x809002A0; //
D_809002A8_jp = 0x809002A8; //
D_809002AC_jp = 0x809002AC; //
D_809002CC_jp = 0x809002CC; //
D_809002D4_jp = 0x809002D4; //
D_809002DC_jp = 0x809002DC; //
D_809002E0_jp = 0x809002E0; //
D_80900300_jp = 0x80900300; //
D_80900308_jp = 0x80900308; //
D_80900310_jp = 0x80900310; //
D_80900314_jp = 0x80900314; //
D_80900334_jp = 0x80900334; //
D_8090033C_jp = 0x8090033C; //
D_80900344_jp = 0x80900344; //
D_80900348_jp = 0x80900348; //
D_80900368_jp = 0x80900368; //
D_80900370_jp = 0x80900370; //
D_80900378_jp = 0x80900378; //
D_8090037C_jp = 0x8090037C; //
D_8090039C_jp = 0x8090039C; //
D_809003A4_jp = 0x809003A4; //
D_809003AC_jp = 0x809003AC; //
D_809003B0_jp = 0x809003B0; //
D_809003D0_jp = 0x809003D0; //
D_809003D8_jp = 0x809003D8; //
D_809003E0_jp = 0x809003E0; //
D_809003E4_jp = 0x809003E4; //
D_80900404_jp = 0x80900404; //
D_8090040C_jp = 0x8090040C; //
D_80900414_jp = 0x80900414; //
D_80900418_jp = 0x80900418; //
D_80900438_jp = 0x80900438; //
D_80900440_jp = 0x80900440; //
D_80900448_jp = 0x80900448; //
D_8090044C_jp = 0x8090044C; //
D_8090046C_jp = 0x8090046C; //
D_80900484_jp = 0x80900484; //
D_8090048C_jp = 0x8090048C; //
D_80900494_jp = 0x80900494; //
D_8090049C_jp = 0x8090049C; //
D_809004A0_jp = 0x809004A0; //
D_809004A4_jp = 0x809004A4; //
D_809004A8_jp = 0x809004A8; //
D_809004C8_jp = 0x809004C8; //
D_809004E8_jp = 0x809004E8; //
D_80900508_jp = 0x80900508; //
D_FLT_80900700_jp = 0x80900700; // type:f32
D_FLT_80900740_jp = 0x80900740; // type:f32
D_80900780_jp = 0x80900780; //
D_FLT_809007C8_jp = 0x809007C8; // type:f32
D_809007D4_jp = 0x809007D4; //
D_809007E0_jp = 0x809007E0; // type:u16
D_809007FE_jp = 0x809007FE; //
D_80900800_jp = 0x80900800; // type:u16
D_80900818_jp = 0x80900818; //
D_80900830_jp = 0x80900830; //
D_80900854_jp = 0x80900854; //
D_80900878_jp = 0x80900878; //
D_8090089C_jp = 0x8090089C; //
D_809008A8_jp = 0x809008A8; //
D_80900910_jp = 0x80900910; //
D_FLT_80900914_jp = 0x80900914; // type:f32
D_FLT_80900918_jp = 0x80900918; // type:f32
D_8090091C_jp = 0x8090091C; //
D_80900A0C_jp = 0x80900A0C; //

// .rodata

RO_STR_80900A30_jp = 0x80900A30; // type:asciz
RO_STR_80900A48_jp = 0x80900A48; // type:asciz
RO_STR_80900A60_jp = 0x80900A60; // type:asciz
RO_STR_80900A74_jp = 0x80900A74; // type:asciz
RO_FLT_80900A88_jp = 0x80900A88; // type:f32
jtbl_80900A8C_jp = 0x80900A8C; // type:jtbl
jtbl_80900AA8_jp = 0x80900AA8; // type:jtbl
jtbl_80900AC4_jp = 0x80900AC4; // type:jtbl
RO_FLT_80900ADC_jp = 0x80900ADC; // type:f32
RO_FLT_80900AE0_jp = 0x80900AE0; // type:f32
RO_FLT_80900AE4_jp = 0x80900AE4; // type:f32
RO_FLT_80900AE8_jp = 0x80900AE8; // type:f32
RO_FLT_80900AEC_jp = 0x80900AEC; // type:f32
RO_FLT_80900AF0_jp = 0x80900AF0; // type:f32
RO_FLT_80900AF4_jp = 0x80900AF4; // type:f32
RO_FLT_80900AF8_jp = 0x80900AF8; // type:f32
RO_FLT_80900AFC_jp = 0x80900AFC; // type:f32
RO_FLT_80900B00_jp = 0x80900B00; // type:f32
RO_FLT_80900B04_jp = 0x80900B04; // type:f32
RO_FLT_80900B08_jp = 0x80900B08; // type:f32
RO_FLT_80900B0C_jp = 0x80900B0C; // type:f32
RO_FLT_80900B10_jp = 0x80900B10; // type:f32
RO_FLT_80900B14_jp = 0x80900B14; // type:f32
jtbl_80900B18_jp = 0x80900B18; // type:jtbl
RO_FLT_80900B2C_jp = 0x80900B2C; // type:f32
RO_FLT_80900B30_jp = 0x80900B30; // type:f32

// .bss

B_80900B40_jp = 0x80900B40; //
B_80900F40_jp = 0x80900F40; //
B_80900F80_jp = 0x80900F80; // type:s16
B_80900F82_jp = 0x80900F82; // type:s8
B_80900F84_jp = 0x80900F84; // type:s8
B_80900F88_jp = 0x80900F88; //
B_80900FC8_jp = 0x80900FC8; // type:s16
B_80900FCA_jp = 0x80900FCA; // type:s8
B_80900FCC_jp = 0x80900FCC; // type:s8

// .text

func_80902120_jp = 0x80902120; // type:func
func_8090224C_jp = 0x8090224C; // type:func
func_80902430_jp = 0x80902430; // type:func
func_809025B4_jp = 0x809025B4; // type:func
func_809025E4_jp = 0x809025E4; // type:func
func_80902768_jp = 0x80902768; // type:func
func_809028A4_jp = 0x809028A4; // type:func
func_809028F8_jp = 0x809028F8; // type:func
func_809029AC_jp = 0x809029AC; // type:func
func_80902D38_jp = 0x80902D38; // type:func
func_80902DA8_jp = 0x80902DA8; // type:func
func_80902DF0_jp = 0x80902DF0; // type:func
func_80902F28_jp = 0x80902F28; // type:func
func_80902F70_jp = 0x80902F70; // type:func
func_80902FD8_jp = 0x80902FD8; // type:func
func_8090321C_jp = 0x8090321C; // type:func
func_809032A4_jp = 0x809032A4; // type:func
func_809034A0_jp = 0x809034A0; // type:func
func_809034E4_jp = 0x809034E4; // type:func
func_809035B0_jp = 0x809035B0; // type:func
func_80903654_jp = 0x80903654; // type:func
func_809037EC_jp = 0x809037EC; // type:func
func_80903844_jp = 0x80903844; // type:func
func_809039FC_jp = 0x809039FC; // type:func
func_80903A64_jp = 0x80903A64; // type:func
func_80903AC4_jp = 0x80903AC4; // type:func
func_80903C88_jp = 0x80903C88; // type:func
func_80903E7C_jp = 0x80903E7C; // type:func
func_80903F5C_jp = 0x80903F5C; // type:func
func_80903FE0_jp = 0x80903FE0; // type:func
func_80904220_jp = 0x80904220; // type:func
func_8090477C_jp = 0x8090477C; // type:func
func_809047B8_jp = 0x809047B8; // type:func
func_80904974_jp = 0x80904974; // type:func
func_80904A60_jp = 0x80904A60; // type:func
func_80904BAC_jp = 0x80904BAC; // type:func
func_80904C54_jp = 0x80904C54; // type:func
func_80904CA4_jp = 0x80904CA4; // type:func
func_80904F28_jp = 0x80904F28; // type:func
func_80905044_jp = 0x80905044; // type:func
func_80905250_jp = 0x80905250; // type:func
func_80905334_jp = 0x80905334; // type:func
func_809054E0_jp = 0x809054E0; // type:func
func_80905614_jp = 0x80905614; // type:func
func_809057EC_jp = 0x809057EC; // type:func
func_80905924_jp = 0x80905924; // type:func
func_809059E0_jp = 0x809059E0; // type:func
func_80905A48_jp = 0x80905A48; // type:func
func_80905BA4_jp = 0x80905BA4; // type:func
func_80905BC4_jp = 0x80905BC4; // type:func
func_80905C10_jp = 0x80905C10; // type:func
func_80905C84_jp = 0x80905C84; // type:func
func_80905CE8_jp = 0x80905CE8; // type:func
func_80905D4C_jp = 0x80905D4C; // type:func
func_80906168_jp = 0x80906168; // type:func
func_809061E0_jp = 0x809061E0; // type:func
func_80906280_jp = 0x80906280; // type:func
func_80906358_jp = 0x80906358; // type:func
func_809064E0_jp = 0x809064E0; // type:func
func_809066D4_jp = 0x809066D4; // type:func
func_809068C8_jp = 0x809068C8; // type:func
func_80906A7C_jp = 0x80906A7C; // type:func
func_80906B48_jp = 0x80906B48; // type:func
func_80906C30_jp = 0x80906C30; // type:func
func_80906CB8_jp = 0x80906CB8; // type:func
func_80906F9C_jp = 0x80906F9C; // type:func
func_80907070_jp = 0x80907070; // type:func
func_809070B8_jp = 0x809070B8; // type:func
func_80907164_jp = 0x80907164; // type:func
func_80907440_jp = 0x80907440; // type:func
func_80907588_jp = 0x80907588; // type:func
func_809078B4_jp = 0x809078B4; // type:func
func_80907930_jp = 0x80907930; // type:func
func_80907AFC_jp = 0x80907AFC; // type:func
func_80907B8C_jp = 0x80907B8C; // type:func
func_80907C00_jp = 0x80907C00; // type:func
func_80907F34_jp = 0x80907F34; // type:func
func_80907FF4_jp = 0x80907FF4; // type:func
func_809081E4_jp = 0x809081E4; // type:func
func_80908678_jp = 0x80908678; // type:func
func_809086F8_jp = 0x809086F8; // type:func
func_8090876C_jp = 0x8090876C; // type:func
func_809087B8_jp = 0x809087B8; // type:func
func_80908814_jp = 0x80908814; // type:func
func_809088F4_jp = 0x809088F4; // type:func
func_809089D4_jp = 0x809089D4; // type:func
func_80908A2C_jp = 0x80908A2C; // type:func
func_80908B10_jp = 0x80908B10; // type:func
func_80908C58_jp = 0x80908C58; // type:func
func_80908CE8_jp = 0x80908CE8; // type:func
func_80908DC0_jp = 0x80908DC0; // type:func
func_80908E88_jp = 0x80908E88; // type:func
func_80908F20_jp = 0x80908F20; // type:func
func_80909058_jp = 0x80909058; // type:func
func_80909194_jp = 0x80909194; // type:func
func_8090922C_jp = 0x8090922C; // type:func
func_809093BC_jp = 0x809093BC; // type:func
func_8090955C_jp = 0x8090955C; // type:func
func_809095E8_jp = 0x809095E8; // type:func
func_80909674_jp = 0x80909674; // type:func
func_80909850_jp = 0x80909850; // type:func
func_80909C10_jp = 0x80909C10; // type:func
func_80909C48_jp = 0x80909C48; // type:func
func_80909C80_jp = 0x80909C80; // type:func
func_80909E44_jp = 0x80909E44; // type:func
func_80909E78_jp = 0x80909E78; // type:func

// .data

_007FAEB0_Profile = 0x8090A0B0; //
D_8090A0D4_jp = 0x8090A0D4; //
D_8090A114_jp = 0x8090A114; //
D_8090A154_jp = 0x8090A154; //
D_8090A694_jp = 0x8090A694; //
D_8090AA84_jp = 0x8090AA84; //
D_8090AA90_jp = 0x8090AA90; //
D_8090AB14_jp = 0x8090AB14; //
D_8090AB1C_jp = 0x8090AB1C; //
D_8090AB24_jp = 0x8090AB24; //
D_8090AB2C_jp = 0x8090AB2C; //
D_8090AB34_jp = 0x8090AB34; //
D_8090AB3C_jp = 0x8090AB3C; //
D_8090AB44_jp = 0x8090AB44; //
D_8090AB4C_jp = 0x8090AB4C; //
D_8090AB54_jp = 0x8090AB54; //
D_8090AB5C_jp = 0x8090AB5C; //
D_8090AB64_jp = 0x8090AB64; //
D_8090AB6C_jp = 0x8090AB6C; //
D_8090AB74_jp = 0x8090AB74; //
D_8090AB7C_jp = 0x8090AB7C; //
D_8090AB84_jp = 0x8090AB84; //
D_8090AB8C_jp = 0x8090AB8C; //
D_8090AB94_jp = 0x8090AB94; //
D_8090AB9C_jp = 0x8090AB9C; //
D_8090ABA4_jp = 0x8090ABA4; //
D_8090ABAC_jp = 0x8090ABAC; //
D_8090ABB4_jp = 0x8090ABB4; //
D_8090ABBC_jp = 0x8090ABBC; //
D_8090ABC4_jp = 0x8090ABC4; //
D_8090ABC8_jp = 0x8090ABC8; //
D_8090ABCC_jp = 0x8090ABCC; //
D_8090ABD8_jp = 0x8090ABD8; //
D_8090ABE4_jp = 0x8090ABE4; //
D_8090ABF0_jp = 0x8090ABF0; //
D_8090ABFC_jp = 0x8090ABFC; //
D_8090AC08_jp = 0x8090AC08; //
D_8090AC14_jp = 0x8090AC14; //
D_8090AC18_jp = 0x8090AC18; //
D_8090AC24_jp = 0x8090AC24; //
D_8090AC28_jp = 0x8090AC28; //
D_8090AC48_jp = 0x8090AC48; //
D_8090AC68_jp = 0x8090AC68; //
D_8090AC88_jp = 0x8090AC88; //
D_8090ACA8_jp = 0x8090ACA8; //
D_8090ACC8_jp = 0x8090ACC8; //
D_8090ACE8_jp = 0x8090ACE8; //
D_8090AD08_jp = 0x8090AD08; //
D_8090AD28_jp = 0x8090AD28; //
D_8090AD48_jp = 0x8090AD48; //
D_8090AD68_jp = 0x8090AD68; //
D_8090AD88_jp = 0x8090AD88; //
D_8090ADA8_jp = 0x8090ADA8; //
D_8090ADC8_jp = 0x8090ADC8; //
D_8090AE00_jp = 0x8090AE00; //
D_8090AE08_jp = 0x8090AE08; //
D_8090AE10_jp = 0x8090AE10; //
D_8090AE18_jp = 0x8090AE18; //
D_8090AE20_jp = 0x8090AE20; //
D_8090AE28_jp = 0x8090AE28; //
D_8090AE30_jp = 0x8090AE30; //
D_8090AE38_jp = 0x8090AE38; //
D_8090AE3C_jp = 0x8090AE3C; //
D_8090AE40_jp = 0x8090AE40; //
D_8090AE44_jp = 0x8090AE44; //
D_8090AE48_jp = 0x8090AE48; //
D_8090AE4C_jp = 0x8090AE4C; //
D_8090AE6C_jp = 0x8090AE6C; //
D_8090AE8C_jp = 0x8090AE8C; //
D_8090AEAC_jp = 0x8090AEAC; //
D_8090AECC_jp = 0x8090AECC; //
D_8090AEDC_jp = 0x8090AEDC; //
D_8090AEE4_jp = 0x8090AEE4; //
D_8090AEE8_jp = 0x8090AEE8; //
D_8090AEF0_jp = 0x8090AEF0; //
D_8090AEF4_jp = 0x8090AEF4; //
D_8090AF14_jp = 0x8090AF14; //
D_8090AF24_jp = 0x8090AF24; //
D_8090AF2C_jp = 0x8090AF2C; //
D_8090AF30_jp = 0x8090AF30; //
D_8090AF38_jp = 0x8090AF38; //
D_8090AF3C_jp = 0x8090AF3C; //
D_8090AF5C_jp = 0x8090AF5C; //
D_8090AF6C_jp = 0x8090AF6C; //
D_8090AF74_jp = 0x8090AF74; //
D_8090AF78_jp = 0x8090AF78; //
D_8090AF80_jp = 0x8090AF80; //
D_8090AF84_jp = 0x8090AF84; //
D_8090AFA4_jp = 0x8090AFA4; //
D_8090AFB4_jp = 0x8090AFB4; //
D_8090AFBC_jp = 0x8090AFBC; //
D_8090AFC0_jp = 0x8090AFC0; //
D_8090AFC8_jp = 0x8090AFC8; //
D_8090AFCC_jp = 0x8090AFCC; //
D_8090AFEC_jp = 0x8090AFEC; //
D_8090B058_jp = 0x8090B058; //
D_8090B060_jp = 0x8090B060; //
D_8090B064_jp = 0x8090B064; //
D_8090B084_jp = 0x8090B084; //
D_8090B08C_jp = 0x8090B08C; //
D_8090B090_jp = 0x8090B090; //
D_8090B0B0_jp = 0x8090B0B0; //
D_8090B11C_jp = 0x8090B11C; //
D_8090B124_jp = 0x8090B124; //
D_8090B128_jp = 0x8090B128; //
D_8090B148_jp = 0x8090B148; //
D_8090B150_jp = 0x8090B150; //
D_8090B154_jp = 0x8090B154; //
D_8090B174_jp = 0x8090B174; //
D_8090B184_jp = 0x8090B184; //
D_8090B18C_jp = 0x8090B18C; //
D_8090B190_jp = 0x8090B190; //
D_8090B198_jp = 0x8090B198; //
D_8090B19C_jp = 0x8090B19C; //
D_8090B1BC_jp = 0x8090B1BC; //
D_8090B1C4_jp = 0x8090B1C4; //
D_8090B1CC_jp = 0x8090B1CC; //
D_8090B1D0_jp = 0x8090B1D0; //
D_8090B1F0_jp = 0x8090B1F0; //
D_8090B208_jp = 0x8090B208; //
D_8090B210_jp = 0x8090B210; //
D_8090B218_jp = 0x8090B218; //
D_8090B220_jp = 0x8090B220; //
D_8090B224_jp = 0x8090B224; //
D_8090B228_jp = 0x8090B228; //
D_8090B22C_jp = 0x8090B22C; //
D_8090B24C_jp = 0x8090B24C; //
D_8090B26C_jp = 0x8090B26C; //
D_8090B28C_jp = 0x8090B28C; //
D_8090B294_jp = 0x8090B294; //
D_8090B29C_jp = 0x8090B29C; //
D_8090B2A0_jp = 0x8090B2A0; //
D_8090B2C0_jp = 0x8090B2C0; //
D_8090B2CC_jp = 0x8090B2CC; //
D_8090B2D8_jp = 0x8090B2D8; //
D_8090B2E4_jp = 0x8090B2E4; //
D_8090B2EC_jp = 0x8090B2EC; //
D_8090B2F8_jp = 0x8090B2F8; //
D_8090B328_jp = 0x8090B328; //
D_8090B330_jp = 0x8090B330; //
D_8090B338_jp = 0x8090B338; //
D_8090B33C_jp = 0x8090B33C; //
D_8090B35C_jp = 0x8090B35C; //
D_8090B37C_jp = 0x8090B37C; //
D_8090B39C_jp = 0x8090B39C; //
D_8090B3BC_jp = 0x8090B3BC; //
D_8090B3DC_jp = 0x8090B3DC; //
D_8090B3E4_jp = 0x8090B3E4; //
D_8090B3EC_jp = 0x8090B3EC; //
D_8090B3F0_jp = 0x8090B3F0; //
D_8090B410_jp = 0x8090B410; //
D_8090B41C_jp = 0x8090B41C; //
D_8090B428_jp = 0x8090B428; //
D_8090B434_jp = 0x8090B434; //
D_8090B43C_jp = 0x8090B43C; //
D_8090B444_jp = 0x8090B444; //
D_8090B448_jp = 0x8090B448; //
D_8090B468_jp = 0x8090B468; //
D_8090B470_jp = 0x8090B470; //
D_8090B478_jp = 0x8090B478; //
D_8090B47C_jp = 0x8090B47C; //
D_8090B49C_jp = 0x8090B49C; //
D_8090B4A4_jp = 0x8090B4A4; //
D_8090B4AC_jp = 0x8090B4AC; //
D_8090B4B0_jp = 0x8090B4B0; //
D_8090B4D0_jp = 0x8090B4D0; //
D_8090B4D8_jp = 0x8090B4D8; //
D_8090B4E0_jp = 0x8090B4E0; //
D_8090B4E4_jp = 0x8090B4E4; //
D_8090B504_jp = 0x8090B504; //
D_8090B50C_jp = 0x8090B50C; //
D_8090B514_jp = 0x8090B514; //
D_8090B518_jp = 0x8090B518; //
D_8090B538_jp = 0x8090B538; //
D_8090B540_jp = 0x8090B540; //
D_8090B548_jp = 0x8090B548; //
D_8090B54C_jp = 0x8090B54C; //
D_8090B56C_jp = 0x8090B56C; //
D_8090B574_jp = 0x8090B574; //
D_8090B57C_jp = 0x8090B57C; //
D_8090B580_jp = 0x8090B580; //
D_8090B5A0_jp = 0x8090B5A0; //
D_8090B5A8_jp = 0x8090B5A8; //
D_8090B5B0_jp = 0x8090B5B0; //
D_8090B5B4_jp = 0x8090B5B4; //
D_8090B5D4_jp = 0x8090B5D4; //
D_8090B5DC_jp = 0x8090B5DC; //
D_8090B5E4_jp = 0x8090B5E4; //
D_8090B5E8_jp = 0x8090B5E8; //
D_8090B608_jp = 0x8090B608; //
D_8090B610_jp = 0x8090B610; //
D_8090B618_jp = 0x8090B618; //
D_8090B61C_jp = 0x8090B61C; //
D_8090B63C_jp = 0x8090B63C; //
D_8090B644_jp = 0x8090B644; //
D_8090B64C_jp = 0x8090B64C; //
D_8090B650_jp = 0x8090B650; //
D_8090B670_jp = 0x8090B670; //
D_8090B678_jp = 0x8090B678; //
D_8090B680_jp = 0x8090B680; //
D_8090B684_jp = 0x8090B684; //
D_8090B6A4_jp = 0x8090B6A4; //
D_8090B6AC_jp = 0x8090B6AC; //
D_8090B6B4_jp = 0x8090B6B4; //
D_8090B6B8_jp = 0x8090B6B8; //
D_8090B6D8_jp = 0x8090B6D8; //
D_8090B6E0_jp = 0x8090B6E0; //
D_8090B6E8_jp = 0x8090B6E8; //
D_8090B6EC_jp = 0x8090B6EC; //
D_8090B70C_jp = 0x8090B70C; //
D_8090B714_jp = 0x8090B714; //
D_8090B71C_jp = 0x8090B71C; //
D_8090B720_jp = 0x8090B720; //
D_8090B740_jp = 0x8090B740; //
D_8090B748_jp = 0x8090B748; //
D_8090B750_jp = 0x8090B750; //
D_8090B754_jp = 0x8090B754; //
D_8090B774_jp = 0x8090B774; //
D_8090B77C_jp = 0x8090B77C; //
D_8090B784_jp = 0x8090B784; //
D_8090B788_jp = 0x8090B788; //
D_8090B7A8_jp = 0x8090B7A8; //
D_8090B7B0_jp = 0x8090B7B0; //
D_8090B7B8_jp = 0x8090B7B8; //
D_8090B7BC_jp = 0x8090B7BC; //
D_8090B7DC_jp = 0x8090B7DC; //
D_8090B7E4_jp = 0x8090B7E4; //
D_8090B7EC_jp = 0x8090B7EC; //
D_8090B7F0_jp = 0x8090B7F0; //
D_8090B810_jp = 0x8090B810; //
D_8090B818_jp = 0x8090B818; //
D_8090B820_jp = 0x8090B820; //
D_8090B824_jp = 0x8090B824; //
D_8090B844_jp = 0x8090B844; //
D_8090B84C_jp = 0x8090B84C; //
D_8090B854_jp = 0x8090B854; //
D_8090B858_jp = 0x8090B858; //
D_8090B878_jp = 0x8090B878; //
D_8090B890_jp = 0x8090B890; //
D_8090B898_jp = 0x8090B898; //
D_8090B8A0_jp = 0x8090B8A0; //
D_8090B8A8_jp = 0x8090B8A8; //
D_8090B8AC_jp = 0x8090B8AC; //
D_8090B8B0_jp = 0x8090B8B0; //
D_8090B8B4_jp = 0x8090B8B4; //
D_8090B8D4_jp = 0x8090B8D4; //
D_8090B8F4_jp = 0x8090B8F4; //
D_8090B914_jp = 0x8090B914; //
D_FLT_8090BB14_jp = 0x8090BB14; // type:f32
D_FLT_8090BB54_jp = 0x8090BB54; // type:f32
D_8090BB94_jp = 0x8090BB94; //
D_FLT_8090BBDC_jp = 0x8090BBDC; // type:f32
D_8090BBE8_jp = 0x8090BBE8; //
D_8090BBF4_jp = 0x8090BBF4; // type:u16
D_8090BC12_jp = 0x8090BC12; //
D_8090BC14_jp = 0x8090BC14; // type:u16
D_8090BC2C_jp = 0x8090BC2C; //
D_8090BC44_jp = 0x8090BC44; //
D_8090BC68_jp = 0x8090BC68; //
D_8090BC8C_jp = 0x8090BC8C; //
D_8090BCB0_jp = 0x8090BCB0; //
D_8090BCBC_jp = 0x8090BCBC; //
D_8090BD24_jp = 0x8090BD24; //
D_FLT_8090BD28_jp = 0x8090BD28; // type:f32
D_FLT_8090BD2C_jp = 0x8090BD2C; // type:f32
D_8090BD30_jp = 0x8090BD30; //
D_8090BE20_jp = 0x8090BE20; //

// .rodata

RO_STR_8090BE40_jp = 0x8090BE40; // type:asciz
RO_STR_8090BE58_jp = 0x8090BE58; // type:asciz
RO_STR_8090BE70_jp = 0x8090BE70; // type:asciz
RO_FLT_8090BE84_jp = 0x8090BE84; // type:f32
jtbl_8090BE88_jp = 0x8090BE88; // type:jtbl
jtbl_8090BEA4_jp = 0x8090BEA4; // type:jtbl
jtbl_8090BEC0_jp = 0x8090BEC0; // type:jtbl
RO_FLT_8090BED8_jp = 0x8090BED8; // type:f32
RO_FLT_8090BEDC_jp = 0x8090BEDC; // type:f32
RO_FLT_8090BEE0_jp = 0x8090BEE0; // type:f32
RO_FLT_8090BEE4_jp = 0x8090BEE4; // type:f32
RO_FLT_8090BEE8_jp = 0x8090BEE8; // type:f32
RO_FLT_8090BEEC_jp = 0x8090BEEC; // type:f32
RO_FLT_8090BEF0_jp = 0x8090BEF0; // type:f32
RO_FLT_8090BEF4_jp = 0x8090BEF4; // type:f32
RO_FLT_8090BEF8_jp = 0x8090BEF8; // type:f32
RO_FLT_8090BEFC_jp = 0x8090BEFC; // type:f32
RO_FLT_8090BF00_jp = 0x8090BF00; // type:f32
RO_FLT_8090BF04_jp = 0x8090BF04; // type:f32
RO_FLT_8090BF08_jp = 0x8090BF08; // type:f32
RO_FLT_8090BF0C_jp = 0x8090BF0C; // type:f32
RO_FLT_8090BF10_jp = 0x8090BF10; // type:f32
jtbl_8090BF14_jp = 0x8090BF14; // type:jtbl
RO_FLT_8090BF28_jp = 0x8090BF28; // type:f32
RO_FLT_8090BF2C_jp = 0x8090BF2C; // type:f32

// .bss

B_8090BF30_jp = 0x8090BF30; //
B_8090C330_jp = 0x8090C330; //
B_8090C370_jp = 0x8090C370; // type:s16
B_8090C372_jp = 0x8090C372; // type:s8
B_8090C374_jp = 0x8090C374; // type:s8
B_8090C378_jp = 0x8090C378; //
B_8090C3B8_jp = 0x8090C3B8; // type:s16
B_8090C3BA_jp = 0x8090C3BA; // type:s8
B_8090C3BC_jp = 0x8090C3BC; // type:s8

// .text

func_8090D530_jp = 0x8090D530; // type:func
func_8090D65C_jp = 0x8090D65C; // type:func
func_8090D840_jp = 0x8090D840; // type:func
func_8090D9C4_jp = 0x8090D9C4; // type:func
func_8090D9F4_jp = 0x8090D9F4; // type:func
func_8090DB78_jp = 0x8090DB78; // type:func
func_8090DCB4_jp = 0x8090DCB4; // type:func
func_8090DD08_jp = 0x8090DD08; // type:func
func_8090DDBC_jp = 0x8090DDBC; // type:func
func_8090E148_jp = 0x8090E148; // type:func
func_8090E1B8_jp = 0x8090E1B8; // type:func
func_8090E200_jp = 0x8090E200; // type:func
func_8090E338_jp = 0x8090E338; // type:func
func_8090E380_jp = 0x8090E380; // type:func
func_8090E3E8_jp = 0x8090E3E8; // type:func
func_8090E62C_jp = 0x8090E62C; // type:func
func_8090E6B4_jp = 0x8090E6B4; // type:func
func_8090E8B0_jp = 0x8090E8B0; // type:func
func_8090E8F4_jp = 0x8090E8F4; // type:func
func_8090E9C0_jp = 0x8090E9C0; // type:func
func_8090EA64_jp = 0x8090EA64; // type:func
func_8090EBFC_jp = 0x8090EBFC; // type:func
func_8090EC54_jp = 0x8090EC54; // type:func
func_8090EE0C_jp = 0x8090EE0C; // type:func
func_8090EE74_jp = 0x8090EE74; // type:func
func_8090EED4_jp = 0x8090EED4; // type:func
func_8090F098_jp = 0x8090F098; // type:func
func_8090F28C_jp = 0x8090F28C; // type:func
func_8090F36C_jp = 0x8090F36C; // type:func
func_8090F3F0_jp = 0x8090F3F0; // type:func
func_8090F630_jp = 0x8090F630; // type:func
func_8090FB8C_jp = 0x8090FB8C; // type:func
func_8090FBC8_jp = 0x8090FBC8; // type:func
func_8090FD84_jp = 0x8090FD84; // type:func
func_8090FE70_jp = 0x8090FE70; // type:func
func_8090FFBC_jp = 0x8090FFBC; // type:func
func_80910064_jp = 0x80910064; // type:func
func_809100B4_jp = 0x809100B4; // type:func
func_80910338_jp = 0x80910338; // type:func
func_80910454_jp = 0x80910454; // type:func
func_80910660_jp = 0x80910660; // type:func
func_80910744_jp = 0x80910744; // type:func
func_809108F0_jp = 0x809108F0; // type:func
func_80910A24_jp = 0x80910A24; // type:func
func_80910BFC_jp = 0x80910BFC; // type:func
func_80910D34_jp = 0x80910D34; // type:func
func_80910DF0_jp = 0x80910DF0; // type:func
func_80910E58_jp = 0x80910E58; // type:func
func_80910FB4_jp = 0x80910FB4; // type:func
func_80910FD4_jp = 0x80910FD4; // type:func
func_80911020_jp = 0x80911020; // type:func
func_80911094_jp = 0x80911094; // type:func
func_809110F8_jp = 0x809110F8; // type:func
func_8091115C_jp = 0x8091115C; // type:func
func_80911578_jp = 0x80911578; // type:func
func_809115F0_jp = 0x809115F0; // type:func
func_80911690_jp = 0x80911690; // type:func
func_80911768_jp = 0x80911768; // type:func
func_809118F0_jp = 0x809118F0; // type:func
func_80911AE4_jp = 0x80911AE4; // type:func
func_80911CD8_jp = 0x80911CD8; // type:func
func_80911E8C_jp = 0x80911E8C; // type:func
func_80911F58_jp = 0x80911F58; // type:func
func_80912040_jp = 0x80912040; // type:func
func_809120C8_jp = 0x809120C8; // type:func
func_809123AC_jp = 0x809123AC; // type:func
func_80912480_jp = 0x80912480; // type:func
func_809124C8_jp = 0x809124C8; // type:func
func_80912574_jp = 0x80912574; // type:func
func_80912850_jp = 0x80912850; // type:func
func_80912998_jp = 0x80912998; // type:func
func_80912CC4_jp = 0x80912CC4; // type:func
func_80912D40_jp = 0x80912D40; // type:func
func_80912F0C_jp = 0x80912F0C; // type:func
func_80912F9C_jp = 0x80912F9C; // type:func
func_80913010_jp = 0x80913010; // type:func
func_80913344_jp = 0x80913344; // type:func
func_80913404_jp = 0x80913404; // type:func
func_809135F4_jp = 0x809135F4; // type:func
func_80913A88_jp = 0x80913A88; // type:func
func_80913B08_jp = 0x80913B08; // type:func
func_80913B7C_jp = 0x80913B7C; // type:func
func_80913BC8_jp = 0x80913BC8; // type:func
func_80913C24_jp = 0x80913C24; // type:func
func_80913D04_jp = 0x80913D04; // type:func
func_80913DE4_jp = 0x80913DE4; // type:func
func_80913E3C_jp = 0x80913E3C; // type:func
func_80913F20_jp = 0x80913F20; // type:func
func_80914068_jp = 0x80914068; // type:func
func_809140F8_jp = 0x809140F8; // type:func
func_809141D0_jp = 0x809141D0; // type:func
func_80914298_jp = 0x80914298; // type:func
func_80914330_jp = 0x80914330; // type:func
func_80914468_jp = 0x80914468; // type:func
func_809145A4_jp = 0x809145A4; // type:func
func_8091463C_jp = 0x8091463C; // type:func
func_809147CC_jp = 0x809147CC; // type:func
func_8091496C_jp = 0x8091496C; // type:func
func_809149F8_jp = 0x809149F8; // type:func
func_80914A84_jp = 0x80914A84; // type:func
func_80914C60_jp = 0x80914C60; // type:func
func_80914EB4_jp = 0x80914EB4; // type:func
func_80914EEC_jp = 0x80914EEC; // type:func
func_80914F24_jp = 0x80914F24; // type:func
func_80914FC0_jp = 0x80914FC0; // type:func

// .data

_00805E30_Profile = 0x80915000; //
D_80915024_jp = 0x80915024; //
D_80915064_jp = 0x80915064; //
D_809150A4_jp = 0x809150A4; //
D_809155E4_jp = 0x809155E4; //
D_809159D4_jp = 0x809159D4; //
D_809159E0_jp = 0x809159E0; //
D_80915A44_jp = 0x80915A44; //
D_80915A4C_jp = 0x80915A4C; //
D_80915A54_jp = 0x80915A54; //
D_80915A5C_jp = 0x80915A5C; //
D_80915A64_jp = 0x80915A64; //
D_80915A6C_jp = 0x80915A6C; //
D_80915A74_jp = 0x80915A74; //
D_80915A7C_jp = 0x80915A7C; //
D_80915A84_jp = 0x80915A84; //
D_80915A8C_jp = 0x80915A8C; //
D_80915A94_jp = 0x80915A94; //
D_80915A9C_jp = 0x80915A9C; //
D_80915AA4_jp = 0x80915AA4; //
D_80915AAC_jp = 0x80915AAC; //
D_80915AB4_jp = 0x80915AB4; //
D_80915ABC_jp = 0x80915ABC; //
D_80915AC4_jp = 0x80915AC4; //
D_80915ACC_jp = 0x80915ACC; //
D_80915AD4_jp = 0x80915AD4; //
D_80915AD8_jp = 0x80915AD8; //
D_80915ADC_jp = 0x80915ADC; //
D_80915AE4_jp = 0x80915AE4; //
D_80915AEC_jp = 0x80915AEC; //
D_80915AF4_jp = 0x80915AF4; //
D_80915B00_jp = 0x80915B00; //
D_80915B0C_jp = 0x80915B0C; //
D_80915B18_jp = 0x80915B18; //
D_80915B24_jp = 0x80915B24; //
D_80915B30_jp = 0x80915B30; //
D_80915B3C_jp = 0x80915B3C; //
D_80915B40_jp = 0x80915B40; //
D_80915B44_jp = 0x80915B44; //
D_80915B64_jp = 0x80915B64; //
D_80915B84_jp = 0x80915B84; //
D_80915BA4_jp = 0x80915BA4; //
D_80915BC4_jp = 0x80915BC4; //
D_80915BE4_jp = 0x80915BE4; //
D_80915C04_jp = 0x80915C04; //
D_80915C24_jp = 0x80915C24; //
D_80915C44_jp = 0x80915C44; //
D_80915C64_jp = 0x80915C64; //
D_80915C84_jp = 0x80915C84; //
D_80915CA4_jp = 0x80915CA4; //
D_80915CC4_jp = 0x80915CC4; //
D_80915CFC_jp = 0x80915CFC; //
D_80915D04_jp = 0x80915D04; //
D_80915D0C_jp = 0x80915D0C; //
D_80915D14_jp = 0x80915D14; //
D_80915D1C_jp = 0x80915D1C; //
D_80915D24_jp = 0x80915D24; //
D_80915D2C_jp = 0x80915D2C; //
D_80915D34_jp = 0x80915D34; //
D_80915D38_jp = 0x80915D38; //
D_80915D3C_jp = 0x80915D3C; //
D_80915D40_jp = 0x80915D40; //
D_80915D44_jp = 0x80915D44; //
D_80915D48_jp = 0x80915D48; //
D_80915D68_jp = 0x80915D68; //
D_80915D88_jp = 0x80915D88; //
D_80915DA8_jp = 0x80915DA8; //
D_80915DC8_jp = 0x80915DC8; //
D_80915DD8_jp = 0x80915DD8; //
D_80915DE0_jp = 0x80915DE0; //
D_80915DE4_jp = 0x80915DE4; //
D_80915DEC_jp = 0x80915DEC; //
D_80915DF0_jp = 0x80915DF0; //
D_80915E10_jp = 0x80915E10; //
D_80915E20_jp = 0x80915E20; //
D_80915E28_jp = 0x80915E28; //
D_80915E2C_jp = 0x80915E2C; //
D_80915E34_jp = 0x80915E34; //
D_80915E38_jp = 0x80915E38; //
D_80915E58_jp = 0x80915E58; //
D_80915E68_jp = 0x80915E68; //
D_80915E70_jp = 0x80915E70; //
D_80915E74_jp = 0x80915E74; //
D_80915E7C_jp = 0x80915E7C; //
D_80915E80_jp = 0x80915E80; //
D_80915EA0_jp = 0x80915EA0; //
D_80915EB0_jp = 0x80915EB0; //
D_80915EB8_jp = 0x80915EB8; //
D_80915EBC_jp = 0x80915EBC; //
D_80915EC4_jp = 0x80915EC4; //
D_80915EC8_jp = 0x80915EC8; //
D_80915EE8_jp = 0x80915EE8; //
D_80915F08_jp = 0x80915F08; //
D_80915F10_jp = 0x80915F10; //
D_80915F18_jp = 0x80915F18; //
D_80915F20_jp = 0x80915F20; //
D_80915F28_jp = 0x80915F28; //
D_80915F2C_jp = 0x80915F2C; //
D_80915F30_jp = 0x80915F30; //
D_80915F34_jp = 0x80915F34; //
D_80915F38_jp = 0x80915F38; //
D_80915F58_jp = 0x80915F58; //
D_80915F78_jp = 0x80915F78; //
D_80915F98_jp = 0x80915F98; //
D_80915FB8_jp = 0x80915FB8; //
D_80915FC8_jp = 0x80915FC8; //
D_80915FD0_jp = 0x80915FD0; //
D_80915FD4_jp = 0x80915FD4; //
D_80915FF4_jp = 0x80915FF4; //
D_80916004_jp = 0x80916004; //
D_8091600C_jp = 0x8091600C; //
D_80916010_jp = 0x80916010; //
D_80916018_jp = 0x80916018; //
D_8091601C_jp = 0x8091601C; //
D_8091603C_jp = 0x8091603C; //
D_809160A8_jp = 0x809160A8; //
D_809160B0_jp = 0x809160B0; //
D_809160B4_jp = 0x809160B4; //
D_809160D4_jp = 0x809160D4; //
D_809160DC_jp = 0x809160DC; //
D_809160E0_jp = 0x809160E0; //
D_80916100_jp = 0x80916100; //
D_8091616C_jp = 0x8091616C; //
D_80916174_jp = 0x80916174; //
D_80916178_jp = 0x80916178; //
D_80916198_jp = 0x80916198; //
D_809161A0_jp = 0x809161A0; //
D_809161A4_jp = 0x809161A4; //
D_809161C4_jp = 0x809161C4; //
D_809161CC_jp = 0x809161CC; //
D_809161D4_jp = 0x809161D4; //
D_809161D8_jp = 0x809161D8; //
D_809161F8_jp = 0x809161F8; //
D_80916204_jp = 0x80916204; //
D_80916210_jp = 0x80916210; //
D_8091621C_jp = 0x8091621C; //
D_80916224_jp = 0x80916224; //
D_80916230_jp = 0x80916230; //
D_80916260_jp = 0x80916260; //
D_80916268_jp = 0x80916268; //
D_80916270_jp = 0x80916270; //
D_80916274_jp = 0x80916274; //
D_80916294_jp = 0x80916294; //
D_809162B4_jp = 0x809162B4; //
D_809162D4_jp = 0x809162D4; //
D_809162F4_jp = 0x809162F4; //
D_80916314_jp = 0x80916314; //
D_8091631C_jp = 0x8091631C; //
D_80916324_jp = 0x80916324; //
D_80916328_jp = 0x80916328; //
D_80916348_jp = 0x80916348; //
D_80916354_jp = 0x80916354; //
D_80916360_jp = 0x80916360; //
D_8091636C_jp = 0x8091636C; //
D_80916374_jp = 0x80916374; //
D_8091637C_jp = 0x8091637C; //
D_80916380_jp = 0x80916380; //
D_809163A0_jp = 0x809163A0; //
D_809163A8_jp = 0x809163A8; //
D_809163B0_jp = 0x809163B0; //
D_809163B4_jp = 0x809163B4; //
D_809163D4_jp = 0x809163D4; //
D_809163DC_jp = 0x809163DC; //
D_809163E4_jp = 0x809163E4; //
D_809163E8_jp = 0x809163E8; //
D_80916408_jp = 0x80916408; //
D_80916410_jp = 0x80916410; //
D_80916418_jp = 0x80916418; //
D_8091641C_jp = 0x8091641C; //
D_8091643C_jp = 0x8091643C; //
D_80916444_jp = 0x80916444; //
D_8091644C_jp = 0x8091644C; //
D_80916450_jp = 0x80916450; //
D_80916470_jp = 0x80916470; //
D_80916478_jp = 0x80916478; //
D_80916480_jp = 0x80916480; //
D_80916484_jp = 0x80916484; //
D_809164A4_jp = 0x809164A4; //
D_809164AC_jp = 0x809164AC; //
D_809164B4_jp = 0x809164B4; //
D_809164B8_jp = 0x809164B8; //
D_809164D8_jp = 0x809164D8; //
D_809164E0_jp = 0x809164E0; //
D_809164E8_jp = 0x809164E8; //
D_809164EC_jp = 0x809164EC; //
D_8091650C_jp = 0x8091650C; //
D_80916514_jp = 0x80916514; //
D_8091651C_jp = 0x8091651C; //
D_80916520_jp = 0x80916520; //
D_80916540_jp = 0x80916540; //
D_80916548_jp = 0x80916548; //
D_80916550_jp = 0x80916550; //
D_80916554_jp = 0x80916554; //
D_80916574_jp = 0x80916574; //
D_8091657C_jp = 0x8091657C; //
D_80916584_jp = 0x80916584; //
D_80916588_jp = 0x80916588; //
D_809165A8_jp = 0x809165A8; //
D_809165B0_jp = 0x809165B0; //
D_809165B8_jp = 0x809165B8; //
D_809165BC_jp = 0x809165BC; //
D_809165DC_jp = 0x809165DC; //
D_809165E4_jp = 0x809165E4; //
D_809165EC_jp = 0x809165EC; //
D_809165F0_jp = 0x809165F0; //
D_80916610_jp = 0x80916610; //
D_80916618_jp = 0x80916618; //
D_80916620_jp = 0x80916620; //
D_80916624_jp = 0x80916624; //
D_80916644_jp = 0x80916644; //
D_8091664C_jp = 0x8091664C; //
D_80916654_jp = 0x80916654; //
D_80916658_jp = 0x80916658; //
D_80916678_jp = 0x80916678; //
D_80916680_jp = 0x80916680; //
D_80916688_jp = 0x80916688; //
D_8091668C_jp = 0x8091668C; //
D_809166AC_jp = 0x809166AC; //
D_809166B4_jp = 0x809166B4; //
D_809166BC_jp = 0x809166BC; //
D_809166C0_jp = 0x809166C0; //
D_809166E0_jp = 0x809166E0; //
D_809166E8_jp = 0x809166E8; //
D_809166F0_jp = 0x809166F0; //
D_809166F4_jp = 0x809166F4; //
D_80916714_jp = 0x80916714; //
D_8091671C_jp = 0x8091671C; //
D_80916724_jp = 0x80916724; //
D_80916728_jp = 0x80916728; //
D_80916748_jp = 0x80916748; //
D_80916750_jp = 0x80916750; //
D_80916758_jp = 0x80916758; //
D_8091675C_jp = 0x8091675C; //
D_8091677C_jp = 0x8091677C; //
D_80916784_jp = 0x80916784; //
D_8091678C_jp = 0x8091678C; //
D_80916790_jp = 0x80916790; //
D_809167B0_jp = 0x809167B0; //
D_809167C8_jp = 0x809167C8; //
D_809167D0_jp = 0x809167D0; //
D_809167D8_jp = 0x809167D8; //
D_809167E0_jp = 0x809167E0; //
D_809167E4_jp = 0x809167E4; //
D_809167E8_jp = 0x809167E8; //
D_809167EC_jp = 0x809167EC; //
D_8091680C_jp = 0x8091680C; //
D_8091682C_jp = 0x8091682C; //
D_8091684C_jp = 0x8091684C; //
D_FLT_80916A4C_jp = 0x80916A4C; // type:f32
D_FLT_80916A8C_jp = 0x80916A8C; // type:f32
D_80916ACC_jp = 0x80916ACC; //
D_FLT_80916B14_jp = 0x80916B14; // type:f32
D_80916B20_jp = 0x80916B20; //
D_80916B2C_jp = 0x80916B2C; // type:u16
D_80916B4A_jp = 0x80916B4A; //
D_80916B4C_jp = 0x80916B4C; // type:u16
D_80916B64_jp = 0x80916B64; //
D_80916B7C_jp = 0x80916B7C; //
D_80916BA0_jp = 0x80916BA0; //
D_80916BC4_jp = 0x80916BC4; //
D_80916BE8_jp = 0x80916BE8; //
D_80916BF4_jp = 0x80916BF4; //
D_80916C5C_jp = 0x80916C5C; //
D_FLT_80916C60_jp = 0x80916C60; // type:f32
D_FLT_80916C64_jp = 0x80916C64; // type:f32
D_80916C68_jp = 0x80916C68; //
D_80916D58_jp = 0x80916D58; //

// .rodata

RO_STR_80916D70_jp = 0x80916D70; // type:asciz
RO_STR_80916D88_jp = 0x80916D88; // type:asciz
RO_STR_80916DA0_jp = 0x80916DA0; // type:asciz
RO_FLT_80916DB0_jp = 0x80916DB0; // type:f32
jtbl_80916DB4_jp = 0x80916DB4; // type:jtbl
jtbl_80916DD0_jp = 0x80916DD0; // type:jtbl
jtbl_80916DEC_jp = 0x80916DEC; // type:jtbl
RO_FLT_80916E04_jp = 0x80916E04; // type:f32
RO_FLT_80916E08_jp = 0x80916E08; // type:f32
RO_FLT_80916E0C_jp = 0x80916E0C; // type:f32
RO_FLT_80916E10_jp = 0x80916E10; // type:f32
RO_FLT_80916E14_jp = 0x80916E14; // type:f32
RO_FLT_80916E18_jp = 0x80916E18; // type:f32
RO_FLT_80916E1C_jp = 0x80916E1C; // type:f32
RO_FLT_80916E20_jp = 0x80916E20; // type:f32
RO_FLT_80916E24_jp = 0x80916E24; // type:f32
RO_FLT_80916E28_jp = 0x80916E28; // type:f32
RO_FLT_80916E2C_jp = 0x80916E2C; // type:f32
RO_FLT_80916E30_jp = 0x80916E30; // type:f32
RO_FLT_80916E34_jp = 0x80916E34; // type:f32
RO_FLT_80916E38_jp = 0x80916E38; // type:f32
RO_FLT_80916E3C_jp = 0x80916E3C; // type:f32
jtbl_80916E40_jp = 0x80916E40; // type:jtbl
RO_FLT_80916E54_jp = 0x80916E54; // type:f32
RO_FLT_80916E58_jp = 0x80916E58; // type:f32

// .bss

B_80916E60_jp = 0x80916E60; //
B_80917260_jp = 0x80917260; //
B_809172A0_jp = 0x809172A0; // type:s16
B_809172A2_jp = 0x809172A2; // type:s8
B_809172A4_jp = 0x809172A4; // type:s8
B_809172A8_jp = 0x809172A8; //
B_809172E8_jp = 0x809172E8; // type:s16
B_809172EA_jp = 0x809172EA; // type:s8
B_809172EC_jp = 0x809172EC; // type:s8

// .text

func_80918450_jp = 0x80918450; // type:func
func_80918508_jp = 0x80918508; // type:func
func_809185E4_jp = 0x809185E4; // type:func
func_8091860C_jp = 0x8091860C; // type:func
func_80918660_jp = 0x80918660; // type:func
func_80918698_jp = 0x80918698; // type:func
func_80918794_jp = 0x80918794; // type:func
func_809187C8_jp = 0x809187C8; // type:func
func_80918814_jp = 0x80918814; // type:func
func_80918858_jp = 0x80918858; // type:func
func_8091889C_jp = 0x8091889C; // type:func
func_809188C8_jp = 0x809188C8; // type:func
func_80918A48_jp = 0x80918A48; // type:func
func_80918A7C_jp = 0x80918A7C; // type:func
func_80918AB0_jp = 0x80918AB0; // type:func
func_80918B7C_jp = 0x80918B7C; // type:func
func_80918C20_jp = 0x80918C20; // type:func
func_80918EF4_jp = 0x80918EF4; // type:func
func_80919054_jp = 0x80919054; // type:func
func_809190A4_jp = 0x809190A4; // type:func
func_809190F0_jp = 0x809190F0; // type:func
func_80919140_jp = 0x80919140; // type:func
func_809191A0_jp = 0x809191A0; // type:func
func_80919544_jp = 0x80919544; // type:func
func_80919864_jp = 0x80919864; // type:func
func_809198DC_jp = 0x809198DC; // type:func
func_80919A30_jp = 0x80919A30; // type:func
func_80919AE0_jp = 0x80919AE0; // type:func
func_80919B94_jp = 0x80919B94; // type:func
func_80919BC4_jp = 0x80919BC4; // type:func
func_80919D44_jp = 0x80919D44; // type:func
func_80919DBC_jp = 0x80919DBC; // type:func
func_80919F04_jp = 0x80919F04; // type:func
func_8091A02C_jp = 0x8091A02C; // type:func
func_8091A0E0_jp = 0x8091A0E0; // type:func
func_8091A278_jp = 0x8091A278; // type:func
func_8091A308_jp = 0x8091A308; // type:func
func_8091A380_jp = 0x8091A380; // type:func
func_8091A3B4_jp = 0x8091A3B4; // type:func
func_8091A600_jp = 0x8091A600; // type:func
func_8091A660_jp = 0x8091A660; // type:func
func_8091A724_jp = 0x8091A724; // type:func
func_8091A788_jp = 0x8091A788; // type:func
func_8091A808_jp = 0x8091A808; // type:func
func_8091A88C_jp = 0x8091A88C; // type:func
func_8091A8B0_jp = 0x8091A8B0; // type:func
func_8091AF64_jp = 0x8091AF64; // type:func
func_8091AFEC_jp = 0x8091AFEC; // type:func
func_8091B074_jp = 0x8091B074; // type:func
func_8091B108_jp = 0x8091B108; // type:func
func_8091B1A8_jp = 0x8091B1A8; // type:func
func_8091B2A0_jp = 0x8091B2A0; // type:func
func_8091B31C_jp = 0x8091B31C; // type:func
func_8091B37C_jp = 0x8091B37C; // type:func
func_8091B444_jp = 0x8091B444; // type:func
func_8091B610_jp = 0x8091B610; // type:func
func_8091B698_jp = 0x8091B698; // type:func
func_8091B700_jp = 0x8091B700; // type:func
func_8091B784_jp = 0x8091B784; // type:func
func_8091B7FC_jp = 0x8091B7FC; // type:func
func_8091B90C_jp = 0x8091B90C; // type:func
func_8091B93C_jp = 0x8091B93C; // type:func
func_8091B9F4_jp = 0x8091B9F4; // type:func
func_8091BA84_jp = 0x8091BA84; // type:func
func_8091BBBC_jp = 0x8091BBBC; // type:func
func_8091BCB4_jp = 0x8091BCB4; // type:func
func_8091BCCC_jp = 0x8091BCCC; // type:func
func_8091BF30_jp = 0x8091BF30; // type:func
func_8091BF94_jp = 0x8091BF94; // type:func
func_8091C134_jp = 0x8091C134; // type:func
func_8091C1A4_jp = 0x8091C1A4; // type:func
func_8091C2FC_jp = 0x8091C2FC; // type:func
func_8091C34C_jp = 0x8091C34C; // type:func
func_8091C42C_jp = 0x8091C42C; // type:func

// .data

D_8091C4D0_jp = 0x8091C4D0; // type:u16
D_8091C4E4_jp = 0x8091C4E4; //
D_8091C504_jp = 0x8091C504; //
D_8091C524_jp = 0x8091C524; //
D_8091C544_jp = 0x8091C544; //
D_8091C564_jp = 0x8091C564; //
D_8091C584_jp = 0x8091C584; //
D_8091C5A4_jp = 0x8091C5A4; //
D_8091C5C4_jp = 0x8091C5C4; //
D_8091C5E4_jp = 0x8091C5E4; //
D_8091C5EC_jp = 0x8091C5EC; //
D_8091C5F8_jp = 0x8091C5F8; //
D_8091C600_jp = 0x8091C600; //
D_8091C604_jp = 0x8091C604; //
D_8091C614_jp = 0x8091C614; //
D_8091C618_jp = 0x8091C618; //
D_8091C634_jp = 0x8091C634; //
D_8091C654_jp = 0x8091C654; //
D_8091C674_jp = 0x8091C674; //
D_FLT_8091C67C_jp = 0x8091C67C; // type:f32
D_8091C684_jp = 0x8091C684; //
D_8091C694_jp = 0x8091C694; // type:u8
D_8091C6B4_jp = 0x8091C6B4; //
D_8091C6D0_jp = 0x8091C6D0; //
D_8091C6EC_jp = 0x8091C6EC; //
D_8091C708_jp = 0x8091C708; //

// .rodata

jtbl_8091C790_jp = 0x8091C790; // type:jtbl
jtbl_8091C7AC_jp = 0x8091C7AC; // type:jtbl
jtbl_8091C7C4_jp = 0x8091C7C4; // type:jtbl
RO_FLT_8091C7DC_jp = 0x8091C7DC; // type:f32

// .text

func_8091CB30_jp = 0x8091CB30; // type:func
func_8091CB40_jp = 0x8091CB40; // type:func
func_8091CB58_jp = 0x8091CB58; // type:func
func_8091CBE8_jp = 0x8091CBE8; // type:func
func_8091CC88_jp = 0x8091CC88; // type:func
func_8091CD60_jp = 0x8091CD60; // type:func
func_8091CD9C_jp = 0x8091CD9C; // type:func
func_8091CF64_jp = 0x8091CF64; // type:func
func_8091D008_jp = 0x8091D008; // type:func
func_8091D0F0_jp = 0x8091D0F0; // type:func
func_8091D13C_jp = 0x8091D13C; // type:func
func_8091D224_jp = 0x8091D224; // type:func
func_8091D28C_jp = 0x8091D28C; // type:func
func_8091D2D0_jp = 0x8091D2D0; // type:func
func_8091D37C_jp = 0x8091D37C; // type:func
func_8091D3E0_jp = 0x8091D3E0; // type:func
func_8091D484_jp = 0x8091D484; // type:func
func_8091D544_jp = 0x8091D544; // type:func
func_8091D550_jp = 0x8091D550; // type:func
func_8091D594_jp = 0x8091D594; // type:func

// .data

D_8091D610_jp = 0x8091D610; //
D_8091D620_jp = 0x8091D620; //

// .bss

B_8091D660_jp = 0x8091D660; //

// .text

func_8091D7B0_jp = 0x8091D7B0; // type:func
func_8091D868_jp = 0x8091D868; // type:func
func_8091D8A8_jp = 0x8091D8A8; // type:func
func_8091D904_jp = 0x8091D904; // type:func
func_8091D954_jp = 0x8091D954; // type:func
func_8091D9B8_jp = 0x8091D9B8; // type:func
func_8091DA1C_jp = 0x8091DA1C; // type:func
func_8091DA80_jp = 0x8091DA80; // type:func
func_8091DAF4_jp = 0x8091DAF4; // type:func
func_8091DB1C_jp = 0x8091DB1C; // type:func
func_8091DB68_jp = 0x8091DB68; // type:func
func_8091DBBC_jp = 0x8091DBBC; // type:func
func_8091DC1C_jp = 0x8091DC1C; // type:func
func_8091DCB8_jp = 0x8091DCB8; // type:func
func_8091DD04_jp = 0x8091DD04; // type:func
func_8091DD98_jp = 0x8091DD98; // type:func
func_8091DE8C_jp = 0x8091DE8C; // type:func
func_8091DF4C_jp = 0x8091DF4C; // type:func
func_8091E04C_jp = 0x8091E04C; // type:func
func_8091E110_jp = 0x8091E110; // type:func
func_8091E200_jp = 0x8091E200; // type:func
func_8091E33C_jp = 0x8091E33C; // type:func
func_8091E484_jp = 0x8091E484; // type:func
func_8091E51C_jp = 0x8091E51C; // type:func
func_8091E65C_jp = 0x8091E65C; // type:func
func_8091E7BC_jp = 0x8091E7BC; // type:func
func_8091E960_jp = 0x8091E960; // type:func
func_8091E9FC_jp = 0x8091E9FC; // type:func
func_8091EA94_jp = 0x8091EA94; // type:func
func_8091EB3C_jp = 0x8091EB3C; // type:func
func_8091EBB8_jp = 0x8091EBB8; // type:func
func_8091EC58_jp = 0x8091EC58; // type:func
func_8091ED64_jp = 0x8091ED64; // type:func
func_8091EEB0_jp = 0x8091EEB0; // type:func
func_8091EFDC_jp = 0x8091EFDC; // type:func
func_8091F1AC_jp = 0x8091F1AC; // type:func
func_8091F1E0_jp = 0x8091F1E0; // type:func
func_8091F214_jp = 0x8091F214; // type:func
func_8091F25C_jp = 0x8091F25C; // type:func
func_8091F2B0_jp = 0x8091F2B0; // type:func
func_8091F2E0_jp = 0x8091F2E0; // type:func
func_8091F360_jp = 0x8091F360; // type:func
func_8091F3FC_jp = 0x8091F3FC; // type:func
func_8091F458_jp = 0x8091F458; // type:func
func_8091F4D4_jp = 0x8091F4D4; // type:func
func_8091F534_jp = 0x8091F534; // type:func
func_8091F5B0_jp = 0x8091F5B0; // type:func
func_8091F5F4_jp = 0x8091F5F4; // type:func
func_8091F644_jp = 0x8091F644; // type:func
func_8091F690_jp = 0x8091F690; // type:func
func_8091F6DC_jp = 0x8091F6DC; // type:func
func_8091F728_jp = 0x8091F728; // type:func
func_8091F7A4_jp = 0x8091F7A4; // type:func
func_8091F994_jp = 0x8091F994; // type:func
func_8091FA90_jp = 0x8091FA90; // type:func
func_8091FAE0_jp = 0x8091FAE0; // type:func
func_8091FB24_jp = 0x8091FB24; // type:func
func_8091FBC0_jp = 0x8091FBC0; // type:func
func_8091FC10_jp = 0x8091FC10; // type:func
func_8091FC60_jp = 0x8091FC60; // type:func
func_8091FCAC_jp = 0x8091FCAC; // type:func
func_8091FCF8_jp = 0x8091FCF8; // type:func
func_8091FD44_jp = 0x8091FD44; // type:func
func_8091FD90_jp = 0x8091FD90; // type:func
func_8091FDE0_jp = 0x8091FDE0; // type:func
func_8091FE50_jp = 0x8091FE50; // type:func
func_8091FE8C_jp = 0x8091FE8C; // type:func
func_8091FEC8_jp = 0x8091FEC8; // type:func
func_80920060_jp = 0x80920060; // type:func
func_80920258_jp = 0x80920258; // type:func
func_809202E0_jp = 0x809202E0; // type:func
func_80920348_jp = 0x80920348; // type:func
func_80920398_jp = 0x80920398; // type:func
func_809203E8_jp = 0x809203E8; // type:func
func_80920408_jp = 0x80920408; // type:func
func_8092044C_jp = 0x8092044C; // type:func
func_809204F0_jp = 0x809204F0; // type:func
func_80920540_jp = 0x80920540; // type:func
func_80920590_jp = 0x80920590; // type:func
func_809205E0_jp = 0x809205E0; // type:func
func_80920630_jp = 0x80920630; // type:func
func_80920690_jp = 0x80920690; // type:func
func_809206DC_jp = 0x809206DC; // type:func
func_80920728_jp = 0x80920728; // type:func
func_80920778_jp = 0x80920778; // type:func
func_809207CC_jp = 0x809207CC; // type:func
func_80920824_jp = 0x80920824; // type:func
func_8092088C_jp = 0x8092088C; // type:func
func_809208E0_jp = 0x809208E0; // type:func
func_80920930_jp = 0x80920930; // type:func
func_80920980_jp = 0x80920980; // type:func
func_809209AC_jp = 0x809209AC; // type:func
func_809209D8_jp = 0x809209D8; // type:func
func_80920A04_jp = 0x80920A04; // type:func
func_80920A30_jp = 0x80920A30; // type:func
func_80920A74_jp = 0x80920A74; // type:func
func_80920AF4_jp = 0x80920AF4; // type:func
func_80920B14_jp = 0x80920B14; // type:func
func_80920B34_jp = 0x80920B34; // type:func
func_80920B54_jp = 0x80920B54; // type:func
func_80920B74_jp = 0x80920B74; // type:func
func_80920B94_jp = 0x80920B94; // type:func
func_80920BB4_jp = 0x80920BB4; // type:func
func_80920BD4_jp = 0x80920BD4; // type:func
func_80920BF4_jp = 0x80920BF4; // type:func
func_80920C14_jp = 0x80920C14; // type:func
func_80920C34_jp = 0x80920C34; // type:func
func_80920C54_jp = 0x80920C54; // type:func
func_80920C74_jp = 0x80920C74; // type:func
func_80920C94_jp = 0x80920C94; // type:func
func_80920CBC_jp = 0x80920CBC; // type:func
func_80920CE4_jp = 0x80920CE4; // type:func
func_80920D0C_jp = 0x80920D0C; // type:func
func_80920D34_jp = 0x80920D34; // type:func
func_80920D5C_jp = 0x80920D5C; // type:func
func_80920D84_jp = 0x80920D84; // type:func
func_80920DAC_jp = 0x80920DAC; // type:func
func_80920DD4_jp = 0x80920DD4; // type:func
func_80920DF4_jp = 0x80920DF4; // type:func
func_80920E38_jp = 0x80920E38; // type:func
func_80920E88_jp = 0x80920E88; // type:func
func_80920ECC_jp = 0x80920ECC; // type:func
func_80920F20_jp = 0x80920F20; // type:func
func_80920FAC_jp = 0x80920FAC; // type:func
func_80920FFC_jp = 0x80920FFC; // type:func
func_8092106C_jp = 0x8092106C; // type:func
func_809210E8_jp = 0x809210E8; // type:func
func_809211D8_jp = 0x809211D8; // type:func
func_809212A8_jp = 0x809212A8; // type:func
func_80921324_jp = 0x80921324; // type:func
func_80921464_jp = 0x80921464; // type:func
func_8092149C_jp = 0x8092149C; // type:func
func_809215E4_jp = 0x809215E4; // type:func
func_80921618_jp = 0x80921618; // type:func
func_80921704_jp = 0x80921704; // type:func
func_8092174C_jp = 0x8092174C; // type:func
func_809217A8_jp = 0x809217A8; // type:func
func_80921808_jp = 0x80921808; // type:func
func_80921858_jp = 0x80921858; // type:func
func_80921870_jp = 0x80921870; // type:func
func_809218AC_jp = 0x809218AC; // type:func
func_809218E8_jp = 0x809218E8; // type:func

// .data

D_80921930_jp = 0x80921930; //
D_80921938_jp = 0x80921938; //
D_8092193C_jp = 0x8092193C; //
D_80921940_jp = 0x80921940; //
D_80921944_jp = 0x80921944; //
D_80921948_jp = 0x80921948; //
D_8092194C_jp = 0x8092194C; //
D_80921950_jp = 0x80921950; //
D_80921968_jp = 0x80921968; //
D_80921980_jp = 0x80921980; //
D_80921998_jp = 0x80921998; //
D_809219B0_jp = 0x809219B0; //
D_809219E0_jp = 0x809219E0; //
D_809219F8_jp = 0x809219F8; //
D_80921A10_jp = 0x80921A10; //
D_80921A28_jp = 0x80921A28; //
D_80921A40_jp = 0x80921A40; //
D_80921A58_jp = 0x80921A58; //
D_80921A70_jp = 0x80921A70; //
D_80921A88_jp = 0x80921A88; //
D_80921AA0_jp = 0x80921AA0; //
D_80921AB8_jp = 0x80921AB8; //
D_80921AD0_jp = 0x80921AD0; //
D_80921AE8_jp = 0x80921AE8; //
D_80921B00_jp = 0x80921B00; //
D_80921B18_jp = 0x80921B18; //
D_80921B30_jp = 0x80921B30; //
D_80921B3C_jp = 0x80921B3C; //
D_80921B54_jp = 0x80921B54; // type:s8
D_80921B55_jp = 0x80921B55; // type:s8
D_80921B58_jp = 0x80921B58; // type:s8
D_80921B59_jp = 0x80921B59; //
D_80921B63_jp = 0x80921B63; //
D_80921BC3_jp = 0x80921BC3; //
D_80921BD8_jp = 0x80921BD8; //
D_80921BE0_jp = 0x80921BE0; //
D_80921BF4_jp = 0x80921BF4; //
D_80921C00_jp = 0x80921C00; //
D_80921C18_jp = 0x80921C18; //
D_80921C48_jp = 0x80921C48; //
D_80921C58_jp = 0x80921C58; //
D_80921C68_jp = 0x80921C68; //
D_80921C78_jp = 0x80921C78; //
D_80921C80_jp = 0x80921C80; //
D_80921C88_jp = 0x80921C88; //
D_80921C90_jp = 0x80921C90; //
D_80921CD4_jp = 0x80921CD4; //
D_80921D2C_jp = 0x80921D2C; //
D_80921D40_jp = 0x80921D40; //
D_80921D4C_jp = 0x80921D4C; //
D_80921D58_jp = 0x80921D58; // type:u8
D_80921D70_jp = 0x80921D70; //
D_80921D78_jp = 0x80921D78; //
D_80921D88_jp = 0x80921D88; //
D_80921DB0_jp = 0x80921DB0; //

// .bss

B_80921DE0_jp = 0x80921DE0; // type:s16
B_80921DE8_jp = 0x80921DE8; //
B_80921DEC_jp = 0x80921DEC; //
B_80921DF0_jp = 0x80921DF0; //
B_80921DF4_jp = 0x80921DF4; //
B_80921DF8_jp = 0x80921DF8; //
B_80921DFC_jp = 0x80921DFC; // type:u16
B_80921E08_jp = 0x80921E08; //
B_80921E18_jp = 0x80921E18; //
B_80921E80_jp = 0x80921E80; //
B_80921E90_jp = 0x80921E90; //
B_80921EA2_jp = 0x80921EA2; //
B_80921EB8_jp = 0x80921EB8; // type:s8

// .text

func_80922800_jp = 0x80922800; // type:func
func_80922840_jp = 0x80922840; // type:func
func_80922854_jp = 0x80922854; // type:func
func_8092288C_jp = 0x8092288C; // type:func
func_809228E4_jp = 0x809228E4; // type:func
func_809229C8_jp = 0x809229C8; // type:func
func_80922A08_jp = 0x80922A08; // type:func
func_80922BF4_jp = 0x80922BF4; // type:func
func_80922D54_jp = 0x80922D54; // type:func
func_80922E48_jp = 0x80922E48; // type:func
func_80922F24_jp = 0x80922F24; // type:func
func_80922F8C_jp = 0x80922F8C; // type:func
func_8092308C_jp = 0x8092308C; // type:func
func_80923104_jp = 0x80923104; // type:func
func_809233A0_jp = 0x809233A0; // type:func
func_80923544_jp = 0x80923544; // type:func
func_80923590_jp = 0x80923590; // type:func
func_80923684_jp = 0x80923684; // type:func
func_80923734_jp = 0x80923734; // type:func
func_80923774_jp = 0x80923774; // type:func
func_80923A14_jp = 0x80923A14; // type:func
func_80923BC4_jp = 0x80923BC4; // type:func
func_80923D80_jp = 0x80923D80; // type:func
func_80923EA8_jp = 0x80923EA8; // type:func
func_80923ED4_jp = 0x80923ED4; // type:func
func_80923F08_jp = 0x80923F08; // type:func
func_80923F8C_jp = 0x80923F8C; // type:func
func_80924050_jp = 0x80924050; // type:func
func_80924148_jp = 0x80924148; // type:func
func_80924384_jp = 0x80924384; // type:func
func_80924404_jp = 0x80924404; // type:func
func_809244A0_jp = 0x809244A0; // type:func
func_809244F4_jp = 0x809244F4; // type:func
func_80924528_jp = 0x80924528; // type:func
func_809246D4_jp = 0x809246D4; // type:func
func_809247E0_jp = 0x809247E0; // type:func
func_80924958_jp = 0x80924958; // type:func
func_809249D4_jp = 0x809249D4; // type:func
func_80924A84_jp = 0x80924A84; // type:func
func_80924B98_jp = 0x80924B98; // type:func
func_80924C9C_jp = 0x80924C9C; // type:func
func_80924DB0_jp = 0x80924DB0; // type:func
func_80924DF4_jp = 0x80924DF4; // type:func
func_80924E6C_jp = 0x80924E6C; // type:func
func_80924EEC_jp = 0x80924EEC; // type:func

// .data

D_80925080_jp = 0x80925080; //
D_809250B8_jp = 0x809250B8; //
D_809250BC_jp = 0x809250BC; //
D_809250C4_jp = 0x809250C4; //
D_809250C8_jp = 0x809250C8; //
D_809250D0_jp = 0x809250D0; //
D_809250D4_jp = 0x809250D4; //
D_809250DC_jp = 0x809250DC; //
D_809250E8_jp = 0x809250E8; // type:u8
D_809250F0_jp = 0x809250F0; //
D_809250F4_jp = 0x809250F4; //
D_809250FC_jp = 0x809250FC; //
D_80925100_jp = 0x80925100; //
D_80925108_jp = 0x80925108; //
D_8092510C_jp = 0x8092510C; //
D_80925114_jp = 0x80925114; //
D_80925118_jp = 0x80925118; //
D_80925120_jp = 0x80925120; //
D_80925124_jp = 0x80925124; //
D_8092512C_jp = 0x8092512C; //
D_80925130_jp = 0x80925130; //
D_80925138_jp = 0x80925138; //
D_8092513C_jp = 0x8092513C; //
D_80925144_jp = 0x80925144; //
D_80925160_jp = 0x80925160; // type:u8
D_80925168_jp = 0x80925168; //
D_8092516C_jp = 0x8092516C; //
D_80925174_jp = 0x80925174; //
D_80925178_jp = 0x80925178; //
D_80925180_jp = 0x80925180; //
D_80925184_jp = 0x80925184; //
D_8092518C_jp = 0x8092518C; //
D_80925190_jp = 0x80925190; //
D_80925198_jp = 0x80925198; //
D_8092519C_jp = 0x8092519C; //
D_809251A4_jp = 0x809251A4; //
D_809251A8_jp = 0x809251A8; //
D_809251B0_jp = 0x809251B0; //
D_809251B4_jp = 0x809251B4; //
D_809251BC_jp = 0x809251BC; //
D_809251C0_jp = 0x809251C0; //
D_809251D8_jp = 0x809251D8; //
D_809251E8_jp = 0x809251E8; //
D_809251F8_jp = 0x809251F8; //
D_80925240_jp = 0x80925240; //
D_80925248_jp = 0x80925248; //
D_80925250_jp = 0x80925250; //
D_80925258_jp = 0x80925258; //
D_8092527C_jp = 0x8092527C; //
D_8092528C_jp = 0x8092528C; // type:u8
D_8092528D_jp = 0x8092528D; // type:u8
D_80925294_jp = 0x80925294; // type:u16

// .rodata

jtbl_809252A0_jp = 0x809252A0; // type:jtbl
jtbl_809252BC_jp = 0x809252BC; // type:jtbl

// .bss

B_809252E0_jp = 0x809252E0; //
B_80925318_jp = 0x80925318; //
B_80925350_jp = 0x80925350; // type:s16
B_809253C0_jp = 0x809253C0; // type:s16
B_80925430_jp = 0x80925430; //
B_80925468_jp = 0x80925468; //
B_809254A0_jp = 0x809254A0; //
B_809254D8_jp = 0x809254D8; // type:s16
B_80925548_jp = 0x80925548; //
D_80925550_jp = 0x80925550; //

// .text

func_809259E0_jp = 0x809259E0; // type:func
func_80925A5C_jp = 0x80925A5C; // type:func
func_80925BB8_jp = 0x80925BB8; // type:func
func_80925D1C_jp = 0x80925D1C; // type:func
func_80925D54_jp = 0x80925D54; // type:func
func_80925E48_jp = 0x80925E48; // type:func
func_809260A4_jp = 0x809260A4; // type:func
func_809260BC_jp = 0x809260BC; // type:func
func_809262C8_jp = 0x809262C8; // type:func
func_8092651C_jp = 0x8092651C; // type:func
func_80926628_jp = 0x80926628; // type:func
func_8092680C_jp = 0x8092680C; // type:func
func_80926A08_jp = 0x80926A08; // type:func
func_80926B34_jp = 0x80926B34; // type:func
func_80926FA0_jp = 0x80926FA0; // type:func
func_8092726C_jp = 0x8092726C; // type:func
func_809274F8_jp = 0x809274F8; // type:func
func_809277F8_jp = 0x809277F8; // type:func
func_80927820_jp = 0x80927820; // type:func
func_80927A18_jp = 0x80927A18; // type:func
func_80927BB4_jp = 0x80927BB4; // type:func
func_80927D50_jp = 0x80927D50; // type:func
func_80927EEC_jp = 0x80927EEC; // type:func
func_80927F6C_jp = 0x80927F6C; // type:func
func_8092817C_jp = 0x8092817C; // type:func
func_809281B8_jp = 0x809281B8; // type:func

// .data

D_809283B0_jp = 0x809283B0; // type:u8
D_809283B1_jp = 0x809283B1; // type:u8
D_809283B2_jp = 0x809283B2; // type:u8
D_809283B3_jp = 0x809283B3; // type:u8
D_809283B6_jp = 0x809283B6; // type:u8
D_809283B9_jp = 0x809283B9; // type:u8
D_80928455_jp = 0x80928455; //
D_80928458_jp = 0x80928458; // type:u8
D_80928680_jp = 0x80928680; //
D_80928684_jp = 0x80928684; //
D_80928688_jp = 0x80928688; //
D_8092868C_jp = 0x8092868C; //
D_809286CC_jp = 0x809286CC; //
D_809286CE_jp = 0x809286CE; // type:u16
D_809286D0_jp = 0x809286D0; //
D_809286D4_jp = 0x809286D4; //
D_809286D8_jp = 0x809286D8; //
D_80929598_jp = 0x80929598; // type:u8
D_809295D8_jp = 0x809295D8; // type:u8
D_80929618_jp = 0x80929618; //
D_80929628_jp = 0x80929628; //
D_8092962C_jp = 0x8092962C; //
D_80929630_jp = 0x80929630; //
D_80929730_jp = 0x80929730; //
D_80929740_jp = 0x80929740; //

// .bss

B_80929750_jp = 0x80929750; //
B_80929754_jp = 0x80929754; //
B_80929758_jp = 0x80929758; //
B_80929830_jp = 0x80929830; // type:u16
B_80929A30_jp = 0x80929A30; //
D_80929C30_jp = 0x80929C30; //

// .text

func_8092A030_jp = 0x8092A030; // type:func
func_8092A054_jp = 0x8092A054; // type:func
func_8092A06C_jp = 0x8092A06C; // type:func
func_8092A0A0_jp = 0x8092A0A0; // type:func
func_8092A1B0_jp = 0x8092A1B0; // type:func
func_8092A20C_jp = 0x8092A20C; // type:func
func_8092A230_jp = 0x8092A230; // type:func
func_8092A258_jp = 0x8092A258; // type:func
func_8092A328_jp = 0x8092A328; // type:func
func_8092A4A8_jp = 0x8092A4A8; // type:func
func_8092A56C_jp = 0x8092A56C; // type:func
func_8092A690_jp = 0x8092A690; // type:func
func_8092A76C_jp = 0x8092A76C; // type:func
func_8092AB8C_jp = 0x8092AB8C; // type:func
func_8092AE10_jp = 0x8092AE10; // type:func
func_8092AF0C_jp = 0x8092AF0C; // type:func

// .data

D_8092B020_jp = 0x8092B020; //
D_8092B038_jp = 0x8092B038; //
D_8092B050_jp = 0x8092B050; //
D_8092B088_jp = 0x8092B088; //
D_8092B0B0_jp = 0x8092B0B0; //
D_8092B0C8_jp = 0x8092B0C8; //
D_8092B0E0_jp = 0x8092B0E0; //
D_8092B0F8_jp = 0x8092B0F8; //
D_8092B110_jp = 0x8092B110; //
D_8092B150_jp = 0x8092B150; //
D_8092B188_jp = 0x8092B188; //
D_8092B1A0_jp = 0x8092B1A0; //
D_8092B1B8_jp = 0x8092B1B8; //
D_8092B1D0_jp = 0x8092B1D0; //
D_8092B1E8_jp = 0x8092B1E8; //
D_8092B230_jp = 0x8092B230; //
D_8092B278_jp = 0x8092B278; //
D_8092B290_jp = 0x8092B290; //
D_8092B2A8_jp = 0x8092B2A8; //
D_8092B2D0_jp = 0x8092B2D0; //
D_8092B2F0_jp = 0x8092B2F0; //
D_8092B350_jp = 0x8092B350; //
D_8092B3B0_jp = 0x8092B3B0; //
D_8092B3C8_jp = 0x8092B3C8; //
D_8092B3F0_jp = 0x8092B3F0; //
D_8092B438_jp = 0x8092B438; //
D_8092B488_jp = 0x8092B488; //
D_8092B510_jp = 0x8092B510; //
D_8092B5A0_jp = 0x8092B5A0; //
D_8092B5C8_jp = 0x8092B5C8; //
D_8092B608_jp = 0x8092B608; //
D_8092B650_jp = 0x8092B650; //
D_8092B6A0_jp = 0x8092B6A0; //
D_8092B728_jp = 0x8092B728; //
D_8092B7B8_jp = 0x8092B7B8; //
D_8092B7E8_jp = 0x8092B7E8; //
D_8092B828_jp = 0x8092B828; //
D_8092B858_jp = 0x8092B858; //
D_8092B888_jp = 0x8092B888; //
D_8092B8E8_jp = 0x8092B8E8; //
D_8092B928_jp = 0x8092B928; //
D_8092B970_jp = 0x8092B970; //
D_8092B9A0_jp = 0x8092B9A0; //
D_8092B9D0_jp = 0x8092B9D0; //
D_8092BA00_jp = 0x8092BA00; //
D_8092BA58_jp = 0x8092BA58; //
D_8092BAA0_jp = 0x8092BAA0; //
D_8092BAE8_jp = 0x8092BAE8; //
D_8092BB18_jp = 0x8092BB18; //
D_8092BB38_jp = 0x8092BB38; //
D_8092BB58_jp = 0x8092BB58; //
D_8092BB80_jp = 0x8092BB80; //
D_8092BBA8_jp = 0x8092BBA8; //
D_8092BBC8_jp = 0x8092BBC8; //
D_8092BBE8_jp = 0x8092BBE8; //
D_8092C5A8_jp = 0x8092C5A8; //
D_8092C5B4_jp = 0x8092C5B4; //

// .bss

B_8092C5C0_jp = 0x8092C5C0; //
B_8092C628_jp = 0x8092C628; //
B_8092C828_jp = 0x8092C828; //
B_8092C8C8_jp = 0x8092C8C8; //

// .text

func_8092CD00_jp = 0x8092CD00; // type:func
func_8092CD5C_jp = 0x8092CD5C; // type:func
func_8092CDC8_jp = 0x8092CDC8; // type:func
func_8092CE10_jp = 0x8092CE10; // type:func
func_8092CE7C_jp = 0x8092CE7C; // type:func
func_8092D078_jp = 0x8092D078; // type:func
func_8092D100_jp = 0x8092D100; // type:func
func_8092D16C_jp = 0x8092D16C; // type:func
func_8092D278_jp = 0x8092D278; // type:func
func_8092D2C4_jp = 0x8092D2C4; // type:func
func_8092D2FC_jp = 0x8092D2FC; // type:func
func_8092D424_jp = 0x8092D424; // type:func
func_8092D4D0_jp = 0x8092D4D0; // type:func
func_8092D808_jp = 0x8092D808; // type:func
func_8092D8F8_jp = 0x8092D8F8; // type:func

// .data

D_8092D9C0_jp = 0x8092D9C0; //
D_8092D9E0_jp = 0x8092D9E0; //
D_8092DA00_jp = 0x8092DA00; //
D_8092DA20_jp = 0x8092DA20; //
D_8092DA40_jp = 0x8092DA40; //
D_8092DA60_jp = 0x8092DA60; //
D_8092DA78_jp = 0x8092DA78; //
D_8092DA90_jp = 0x8092DA90; //
D_8092DAA8_jp = 0x8092DAA8; //
D_8092DAB4_jp = 0x8092DAB4; //
D_8092DAC4_jp = 0x8092DAC4; // type:u8
D_8092DAC8_jp = 0x8092DAC8; //
D_8092DAE0_jp = 0x8092DAE0; //

// .text

func_8092DBC0_jp = 0x8092DBC0; // type:func
func_8092DBE4_jp = 0x8092DBE4; // type:func
func_8092DBFC_jp = 0x8092DBFC; // type:func
func_8092DC30_jp = 0x8092DC30; // type:func
func_8092DCEC_jp = 0x8092DCEC; // type:func
func_8092DE38_jp = 0x8092DE38; // type:func
func_8092DFC0_jp = 0x8092DFC0; // type:func
func_8092E01C_jp = 0x8092E01C; // type:func
func_8092E040_jp = 0x8092E040; // type:func
func_8092E0B0_jp = 0x8092E0B0; // type:func
func_8092E0FC_jp = 0x8092E0FC; // type:func
func_8092E148_jp = 0x8092E148; // type:func
func_8092E240_jp = 0x8092E240; // type:func
func_8092E2F8_jp = 0x8092E2F8; // type:func
func_8092E3B4_jp = 0x8092E3B4; // type:func
func_8092E470_jp = 0x8092E470; // type:func
func_8092E564_jp = 0x8092E564; // type:func
func_8092E5E0_jp = 0x8092E5E0; // type:func
func_8092E5F4_jp = 0x8092E5F4; // type:func
func_8092E920_jp = 0x8092E920; // type:func
func_8092EA18_jp = 0x8092EA18; // type:func
func_8092EA9C_jp = 0x8092EA9C; // type:func
func_8092EBC0_jp = 0x8092EBC0; // type:func
func_8092ECAC_jp = 0x8092ECAC; // type:func

// .data

D_8092EFB0_jp = 0x8092EFB0; //
D_8092F020_jp = 0x8092F020; //
D_8092F090_jp = 0x8092F090; //
D_8092F100_jp = 0x8092F100; //
D_8092F170_jp = 0x8092F170; //
D_8092F1E0_jp = 0x8092F1E0; //
D_8092F250_jp = 0x8092F250; //
D_8092F2C8_jp = 0x8092F2C8; //
D_8092F330_jp = 0x8092F330; //
D_8092F390_jp = 0x8092F390; //
D_8092F408_jp = 0x8092F408; //
D_8092F478_jp = 0x8092F478; //
D_8092F4D8_jp = 0x8092F4D8; //
D_8092F560_jp = 0x8092F560; //
D_8092F5D0_jp = 0x8092F5D0; //
D_8092F640_jp = 0x8092F640; //
D_8092F6D8_jp = 0x8092F6D8; //
D_8092F750_jp = 0x8092F750; //
D_8092F7D0_jp = 0x8092F7D0; //
D_8092F858_jp = 0x8092F858; //
D_8092F8D8_jp = 0x8092F8D8; //
D_8092F960_jp = 0x8092F960; //
D_8092F9E8_jp = 0x8092F9E8; //
D_8092FA68_jp = 0x8092FA68; //
D_8092FAF0_jp = 0x8092FAF0; //
D_8092FB88_jp = 0x8092FB88; //
D_8092FC00_jp = 0x8092FC00; //
D_8092FC80_jp = 0x8092FC80; //
D_8092FD00_jp = 0x8092FD00; //
D_8092FD68_jp = 0x8092FD68; //
D_8092FDD0_jp = 0x8092FDD0; //
D_8092FE40_jp = 0x8092FE40; //
D_8092FEA8_jp = 0x8092FEA8; //
D_8092FF00_jp = 0x8092FF00; //
D_8092FF70_jp = 0x8092FF70; //
D_8092FFE0_jp = 0x8092FFE0; //
D_80930050_jp = 0x80930050; //
D_809300D8_jp = 0x809300D8; //
D_80930148_jp = 0x80930148; //
D_809301B8_jp = 0x809301B8; //
D_809301D0_jp = 0x809301D0; //
D_809301E8_jp = 0x809301E8; //
D_80930200_jp = 0x80930200; //
D_809303A0_jp = 0x809303A0; //
D_809303C0_jp = 0x809303C0; //

// .bss

B_809303E0_jp = 0x809303E0; //
B_80930448_jp = 0x80930448; //
B_809304B0_jp = 0x809304B0; //
B_809306B0_jp = 0x809306B0; //
B_80930750_jp = 0x80930750; //

// .text

func_80930960_jp = 0x80930960; // type:func
func_80930D14_jp = 0x80930D14; // type:func
func_80930E94_jp = 0x80930E94; // type:func

// .data

D_80930FA0_jp = 0x80930FA0; // type:u8
D_80931708_jp = 0x80931708; //
D_80931714_jp = 0x80931714; //

// .rodata

RO_80931720_jp = 0x80931720; //
RO_80931750_jp = 0x80931750; //
D_80931780_jp = 0x80931780; //

// .text

func_809317D0_jp = 0x809317D0; // type:func
func_809318E4_jp = 0x809318E4; // type:func
func_809318FC_jp = 0x809318FC; // type:func
func_80931918_jp = 0x80931918; // type:func
func_80931934_jp = 0x80931934; // type:func
func_80931A04_jp = 0x80931A04; // type:func
func_80931B88_jp = 0x80931B88; // type:func
func_80931C4C_jp = 0x80931C4C; // type:func
func_80931CDC_jp = 0x80931CDC; // type:func
func_80931DC4_jp = 0x80931DC4; // type:func
func_80931E10_jp = 0x80931E10; // type:func
func_80931EA4_jp = 0x80931EA4; // type:func
func_80931EF4_jp = 0x80931EF4; // type:func
func_80931F30_jp = 0x80931F30; // type:func
func_80931FAC_jp = 0x80931FAC; // type:func
func_80932024_jp = 0x80932024; // type:func
func_8093214C_jp = 0x8093214C; // type:func
func_80932188_jp = 0x80932188; // type:func
func_809321B8_jp = 0x809321B8; // type:func
func_80932238_jp = 0x80932238; // type:func
func_80932298_jp = 0x80932298; // type:func
func_8093246C_jp = 0x8093246C; // type:func
func_809325CC_jp = 0x809325CC; // type:func
func_809326A0_jp = 0x809326A0; // type:func
func_809327AC_jp = 0x809327AC; // type:func
func_80932814_jp = 0x80932814; // type:func
func_809328A8_jp = 0x809328A8; // type:func
func_80932994_jp = 0x80932994; // type:func
func_80932B1C_jp = 0x80932B1C; // type:func
func_80932C68_jp = 0x80932C68; // type:func
func_80932EB4_jp = 0x80932EB4; // type:func
func_80933254_jp = 0x80933254; // type:func
func_809334A8_jp = 0x809334A8; // type:func
func_8093353C_jp = 0x8093353C; // type:func
func_80933674_jp = 0x80933674; // type:func
func_809336AC_jp = 0x809336AC; // type:func
func_809336E0_jp = 0x809336E0; // type:func
func_8093371C_jp = 0x8093371C; // type:func
func_80933790_jp = 0x80933790; // type:func
func_8093380C_jp = 0x8093380C; // type:func
func_8093382C_jp = 0x8093382C; // type:func
func_80933870_jp = 0x80933870; // type:func

// .data

D_80933960_jp = 0x80933960; // type:s16
D_80933962_jp = 0x80933962; // type:s16
D_80933964_jp = 0x80933964; //
D_FLT_80933A80_jp = 0x80933A80; // type:f32
D_FLT_80933A98_jp = 0x80933A98; // type:f32
D_80933AB0_jp = 0x80933AB0; // type:s16
D_FLT_80933ABC_jp = 0x80933ABC; // type:f32
D_FLT_80933AD4_jp = 0x80933AD4; // type:f32
D_FLT_80933AEC_jp = 0x80933AEC; // type:f32
D_FLT_80933B00_jp = 0x80933B00; // type:f32
D_FLT_80933B14_jp = 0x80933B14; // type:f32
D_FLT_80933B2C_jp = 0x80933B2C; // type:f32
D_80933B44_jp = 0x80933B44; // type:s16
D_80933B48_jp = 0x80933B48; //
D_FLT_80933B60_jp = 0x80933B60; // type:f32
D_80933B78_jp = 0x80933B78; //
D_80933B94_jp = 0x80933B94; //

// .rodata

RO_STR_80933BB0_jp = 0x80933BB0; // type:asciz
RO_STR_80933BC4_jp = 0x80933BC4; // type:asciz
RO_STR_80933BD8_jp = 0x80933BD8; // type:asciz
RO_FLT_80933BEC_jp = 0x80933BEC; // type:f32
RO_FLT_80933BF0_jp = 0x80933BF0; // type:f32
RO_FLT_80933BF4_jp = 0x80933BF4; // type:f32
RO_FLT_80933BF8_jp = 0x80933BF8; // type:f32
jtbl_80933BFC_jp = 0x80933BFC; // type:jtbl
RO_FLT_80933C14_jp = 0x80933C14; // type:f32
jtbl_80933C18_jp = 0x80933C18; // type:jtbl
RO_FLT_80933C30_jp = 0x80933C30; // type:f32
RO_FLT_80933C34_jp = 0x80933C34; // type:f32
RO_FLT_80933C38_jp = 0x80933C38; // type:f32
RO_FLT_80933C3C_jp = 0x80933C3C; // type:f32

// .text

func_80933F40_jp = 0x80933F40; // type:func
func_80933F8C_jp = 0x80933F8C; // type:func
func_80933FC8_jp = 0x80933FC8; // type:func
func_8093401C_jp = 0x8093401C; // type:func
func_80934040_jp = 0x80934040; // type:func
func_80934104_jp = 0x80934104; // type:func
func_80934190_jp = 0x80934190; // type:func
func_8093420C_jp = 0x8093420C; // type:func
func_809342BC_jp = 0x809342BC; // type:func
func_80934320_jp = 0x80934320; // type:func
func_809343BC_jp = 0x809343BC; // type:func
func_80934598_jp = 0x80934598; // type:func

// .data

D_80934600_jp = 0x80934600; //
D_80934610_jp = 0x80934610; //
D_8093461C_jp = 0x8093461C; //
D_80934624_jp = 0x80934624; //
D_8093462C_jp = 0x8093462C; //
_0082B3C0_Profile = 0x80934634; //

// .bss

B_80934660_jp = 0x80934660; //

// .text

func_80934740_jp = 0x80934740; // type:func
func_80934750_jp = 0x80934750; // type:func
func_80934760_jp = 0x80934760; // type:func
func_80934770_jp = 0x80934770; // type:func

// .data

_0082BB80_Profile = 0x80934780; //

// .text

func_809347E0_jp = 0x809347E0; // type:func
func_8093482C_jp = 0x8093482C; // type:func
func_809348E0_jp = 0x809348E0; // type:func
func_809348F0_jp = 0x809348F0; // type:func
func_80934B44_jp = 0x80934B44; // type:func
func_80934B68_jp = 0x80934B68; // type:func
func_80934BB0_jp = 0x80934BB0; // type:func
func_80934C38_jp = 0x80934C38; // type:func
func_80934CE8_jp = 0x80934CE8; // type:func
func_80934E2C_jp = 0x80934E2C; // type:func
func_80934E5C_jp = 0x80934E5C; // type:func
func_80934EDC_jp = 0x80934EDC; // type:func
func_809350C0_jp = 0x809350C0; // type:func
func_809356A8_jp = 0x809356A8; // type:func
func_80935874_jp = 0x80935874; // type:func

// .data

_0082BC20_Profile = 0x809358E0; //
D_80935904_jp = 0x80935904; //
D_8093590C_jp = 0x8093590C; //
D_80935914_jp = 0x80935914; //
D_80935920_jp = 0x80935920; //
D_80935930_jp = 0x80935930; // type:s16
D_80935954_jp = 0x80935954; //
D_8093596C_jp = 0x8093596C; //

// .rodata

RO_FLT_80935980_jp = 0x80935980; // type:f32
RO_FLT_80935984_jp = 0x80935984; // type:f32
RO_FLT_80935988_jp = 0x80935988; // type:f32
RO_FLT_8093598C_jp = 0x8093598C; // type:f32
RO_FLT_80935990_jp = 0x80935990; // type:f32
RO_FLT_80935994_jp = 0x80935994; // type:f32
RO_FLT_80935998_jp = 0x80935998; // type:f32

// .bss

B_809359A0_jp = 0x809359A0; //

// .text

func_80935DF0_jp = 0x80935DF0; // type:func
func_80935E98_jp = 0x80935E98; // type:func
func_80935FA8_jp = 0x80935FA8; // type:func
func_809361BC_jp = 0x809361BC; // type:func
func_8093629C_jp = 0x8093629C; // type:func
func_809364C8_jp = 0x809364C8; // type:func

// .data

_0082CED0_Profile = 0x80936650; //
D_FLT_80936674_jp = 0x80936674; // type:f32

// .text

func_80936710_jp = 0x80936710; // type:func
func_8093678C_jp = 0x8093678C; // type:func
func_8093690C_jp = 0x8093690C; // type:func
func_80936A10_jp = 0x80936A10; // type:func
func_80936A60_jp = 0x80936A60; // type:func
func_80936ADC_jp = 0x80936ADC; // type:func
func_80936B68_jp = 0x80936B68; // type:func
func_80936B7C_jp = 0x80936B7C; // type:func
func_80936D30_jp = 0x80936D30; // type:func
func_80936E74_jp = 0x80936E74; // type:func
func_80936E98_jp = 0x80936E98; // type:func
func_80937020_jp = 0x80937020; // type:func
func_80937140_jp = 0x80937140; // type:func
func_80937274_jp = 0x80937274; // type:func
func_80937354_jp = 0x80937354; // type:func
func_80937364_jp = 0x80937364; // type:func
func_80937394_jp = 0x80937394; // type:func
func_809373C4_jp = 0x809373C4; // type:func
func_80937414_jp = 0x80937414; // type:func
func_80937490_jp = 0x80937490; // type:func
func_809374C4_jp = 0x809374C4; // type:func
func_809374F4_jp = 0x809374F4; // type:func
func_80937520_jp = 0x80937520; // type:func
func_80937550_jp = 0x80937550; // type:func
func_80937578_jp = 0x80937578; // type:func
func_809375E8_jp = 0x809375E8; // type:func
func_809376B4_jp = 0x809376B4; // type:func
func_809376F4_jp = 0x809376F4; // type:func
func_80937740_jp = 0x80937740; // type:func
func_809377C4_jp = 0x809377C4; // type:func
func_80937820_jp = 0x80937820; // type:func
func_80937894_jp = 0x80937894; // type:func
func_8093792C_jp = 0x8093792C; // type:func
func_8093795C_jp = 0x8093795C; // type:func
func_809379DC_jp = 0x809379DC; // type:func
func_80937ABC_jp = 0x80937ABC; // type:func
func_80937B84_jp = 0x80937B84; // type:func
func_80937BE4_jp = 0x80937BE4; // type:func
func_80937C84_jp = 0x80937C84; // type:func
func_80937CC0_jp = 0x80937CC0; // type:func
func_80937D00_jp = 0x80937D00; // type:func
func_80937DB0_jp = 0x80937DB0; // type:func
func_80937E70_jp = 0x80937E70; // type:func
func_80937EC0_jp = 0x80937EC0; // type:func
func_80937EEC_jp = 0x80937EEC; // type:func
func_80937FB0_jp = 0x80937FB0; // type:func
func_809380EC_jp = 0x809380EC; // type:func
func_809381FC_jp = 0x809381FC; // type:func
func_80938310_jp = 0x80938310; // type:func
func_8093837C_jp = 0x8093837C; // type:func
func_809383EC_jp = 0x809383EC; // type:func
func_809384F0_jp = 0x809384F0; // type:func
func_80938534_jp = 0x80938534; // type:func
func_80938554_jp = 0x80938554; // type:func
func_809385E4_jp = 0x809385E4; // type:func
func_80938614_jp = 0x80938614; // type:func
func_80938650_jp = 0x80938650; // type:func
func_8093885C_jp = 0x8093885C; // type:func
func_8093893C_jp = 0x8093893C; // type:func
func_809389AC_jp = 0x809389AC; // type:func
func_80938A18_jp = 0x80938A18; // type:func
func_80938B2C_jp = 0x80938B2C; // type:func
func_80938BE0_jp = 0x80938BE0; // type:func
func_80938C24_jp = 0x80938C24; // type:func
func_80938C74_jp = 0x80938C74; // type:func
func_80938CE8_jp = 0x80938CE8; // type:func
func_80938D44_jp = 0x80938D44; // type:func
func_80938EF0_jp = 0x80938EF0; // type:func
func_80938F50_jp = 0x80938F50; // type:func
func_80938FD8_jp = 0x80938FD8; // type:func
func_80939050_jp = 0x80939050; // type:func
func_8093919C_jp = 0x8093919C; // type:func
func_809391C8_jp = 0x809391C8; // type:func
func_809391F0_jp = 0x809391F0; // type:func
func_809391FC_jp = 0x809391FC; // type:func
func_8093920C_jp = 0x8093920C; // type:func
func_809392E8_jp = 0x809392E8; // type:func
func_80939350_jp = 0x80939350; // type:func
func_809394F4_jp = 0x809394F4; // type:func
func_80939534_jp = 0x80939534; // type:func
func_80939574_jp = 0x80939574; // type:func
func_80939580_jp = 0x80939580; // type:func
func_809395B8_jp = 0x809395B8; // type:func
func_80939618_jp = 0x80939618; // type:func
func_80939694_jp = 0x80939694; // type:func
func_809396A4_jp = 0x809396A4; // type:func
func_80939708_jp = 0x80939708; // type:func
func_80939714_jp = 0x80939714; // type:func
func_80939788_jp = 0x80939788; // type:func
func_809397E8_jp = 0x809397E8; // type:func
func_80939884_jp = 0x80939884; // type:func
func_80939960_jp = 0x80939960; // type:func
func_809399C8_jp = 0x809399C8; // type:func
func_80939C04_jp = 0x80939C04; // type:func
func_80939C44_jp = 0x80939C44; // type:func
func_80939C8C_jp = 0x80939C8C; // type:func
func_80939C9C_jp = 0x80939C9C; // type:func
func_80939CFC_jp = 0x80939CFC; // type:func
func_80939D5C_jp = 0x80939D5C; // type:func
func_80939DF4_jp = 0x80939DF4; // type:func
func_80939EA4_jp = 0x80939EA4; // type:func
func_80939F0C_jp = 0x80939F0C; // type:func
func_80939F18_jp = 0x80939F18; // type:func
func_80939F80_jp = 0x80939F80; // type:func
func_80939F90_jp = 0x80939F90; // type:func
func_80939F9C_jp = 0x80939F9C; // type:func
func_8093A05C_jp = 0x8093A05C; // type:func
func_8093A068_jp = 0x8093A068; // type:func
func_8093A080_jp = 0x8093A080; // type:func
func_8093A08C_jp = 0x8093A08C; // type:func
func_8093A14C_jp = 0x8093A14C; // type:func
func_8093A158_jp = 0x8093A158; // type:func
func_8093A170_jp = 0x8093A170; // type:func
func_8093A17C_jp = 0x8093A17C; // type:func
func_8093A1DC_jp = 0x8093A1DC; // type:func
func_8093A284_jp = 0x8093A284; // type:func
func_8093A2E8_jp = 0x8093A2E8; // type:func
func_8093A364_jp = 0x8093A364; // type:func
func_8093A530_jp = 0x8093A530; // type:func
func_8093A6E4_jp = 0x8093A6E4; // type:func
func_8093A728_jp = 0x8093A728; // type:func
func_8093A79C_jp = 0x8093A79C; // type:func
func_8093A7C4_jp = 0x8093A7C4; // type:func
func_8093A7F4_jp = 0x8093A7F4; // type:func
func_8093A824_jp = 0x8093A824; // type:func
func_8093A89C_jp = 0x8093A89C; // type:func
func_8093AC78_jp = 0x8093AC78; // type:func
func_8093AD18_jp = 0x8093AD18; // type:func
func_8093AFA4_jp = 0x8093AFA4; // type:func
func_8093B044_jp = 0x8093B044; // type:func
func_8093B054_jp = 0x8093B054; // type:func
func_8093B238_jp = 0x8093B238; // type:func
func_8093B2A8_jp = 0x8093B2A8; // type:func
func_8093B2D0_jp = 0x8093B2D0; // type:func
func_8093B360_jp = 0x8093B360; // type:func
func_8093B3F4_jp = 0x8093B3F4; // type:func
func_8093B418_jp = 0x8093B418; // type:func
func_8093B43C_jp = 0x8093B43C; // type:func
func_8093B498_jp = 0x8093B498; // type:func
func_8093B52C_jp = 0x8093B52C; // type:func
func_8093B6F4_jp = 0x8093B6F4; // type:func
func_8093B778_jp = 0x8093B778; // type:func
func_8093B7EC_jp = 0x8093B7EC; // type:func
func_8093B88C_jp = 0x8093B88C; // type:func
func_8093B9B4_jp = 0x8093B9B4; // type:func
func_8093B9DC_jp = 0x8093B9DC; // type:func
func_8093BA0C_jp = 0x8093BA0C; // type:func
func_8093BA68_jp = 0x8093BA68; // type:func
func_8093BA98_jp = 0x8093BA98; // type:func
func_8093BB04_jp = 0x8093BB04; // type:func
func_8093BB5C_jp = 0x8093BB5C; // type:func
func_8093BC30_jp = 0x8093BC30; // type:func
func_8093BC94_jp = 0x8093BC94; // type:func
func_8093BD60_jp = 0x8093BD60; // type:func
func_8093BDB4_jp = 0x8093BDB4; // type:func
func_8093BEB4_jp = 0x8093BEB4; // type:func
func_8093BFF4_jp = 0x8093BFF4; // type:func
func_8093C074_jp = 0x8093C074; // type:func
func_8093C0EC_jp = 0x8093C0EC; // type:func
func_8093C188_jp = 0x8093C188; // type:func
func_8093C2E0_jp = 0x8093C2E0; // type:func
func_8093C348_jp = 0x8093C348; // type:func
func_8093C380_jp = 0x8093C380; // type:func
func_8093C3B0_jp = 0x8093C3B0; // type:func
func_8093C430_jp = 0x8093C430; // type:func
func_8093C4C0_jp = 0x8093C4C0; // type:func
func_8093C540_jp = 0x8093C540; // type:func
func_8093C5C0_jp = 0x8093C5C0; // type:func
func_8093C7E0_jp = 0x8093C7E0; // type:func
func_8093C9E4_jp = 0x8093C9E4; // type:func
func_8093CA1C_jp = 0x8093CA1C; // type:func
func_8093CAF8_jp = 0x8093CAF8; // type:func
func_8093CD3C_jp = 0x8093CD3C; // type:func
func_8093CE38_jp = 0x8093CE38; // type:func
func_8093CF44_jp = 0x8093CF44; // type:func
func_8093D1B4_jp = 0x8093D1B4; // type:func
func_8093D2FC_jp = 0x8093D2FC; // type:func
func_8093D400_jp = 0x8093D400; // type:func
func_8093D504_jp = 0x8093D504; // type:func
func_8093D604_jp = 0x8093D604; // type:func
func_8093D6E0_jp = 0x8093D6E0; // type:func
func_8093D9C0_jp = 0x8093D9C0; // type:func
func_8093DB4C_jp = 0x8093DB4C; // type:func
func_8093DB64_jp = 0x8093DB64; // type:func
func_8093E178_jp = 0x8093E178; // type:func
func_8093E190_jp = 0x8093E190; // type:func
func_8093E204_jp = 0x8093E204; // type:func
func_8093E234_jp = 0x8093E234; // type:func
func_8093E5C8_jp = 0x8093E5C8; // type:func
func_8093E608_jp = 0x8093E608; // type:func
func_8093E628_jp = 0x8093E628; // type:func
func_8093E648_jp = 0x8093E648; // type:func
func_8093E984_jp = 0x8093E984; // type:func
func_8093EA34_jp = 0x8093EA34; // type:func
func_8093EA60_jp = 0x8093EA60; // type:func
func_8093EAD0_jp = 0x8093EAD0; // type:func
func_8093EB10_jp = 0x8093EB10; // type:func
func_8093EBA4_jp = 0x8093EBA4; // type:func
func_8093EBF4_jp = 0x8093EBF4; // type:func
func_8093EE40_jp = 0x8093EE40; // type:func
func_8093F010_jp = 0x8093F010; // type:func
func_8093F438_jp = 0x8093F438; // type:func
func_8093F7A0_jp = 0x8093F7A0; // type:func
func_8093F854_jp = 0x8093F854; // type:func
func_8093F894_jp = 0x8093F894; // type:func
func_8093F8F4_jp = 0x8093F8F4; // type:func
func_8093F9D4_jp = 0x8093F9D4; // type:func
func_8093FAF0_jp = 0x8093FAF0; // type:func
func_8093FBE0_jp = 0x8093FBE0; // type:func
func_8093FCD0_jp = 0x8093FCD0; // type:func
func_8093FD14_jp = 0x8093FD14; // type:func
func_8093FF64_jp = 0x8093FF64; // type:func
func_80940304_jp = 0x80940304; // type:func
func_80940378_jp = 0x80940378; // type:func
func_80940498_jp = 0x80940498; // type:func
func_80940784_jp = 0x80940784; // type:func
func_80940A64_jp = 0x80940A64; // type:func
func_80940D4C_jp = 0x80940D4C; // type:func
func_809410FC_jp = 0x809410FC; // type:func
func_80941230_jp = 0x80941230; // type:func
func_80941258_jp = 0x80941258; // type:func
func_80941284_jp = 0x80941284; // type:func
func_8094146C_jp = 0x8094146C; // type:func
func_80941818_jp = 0x80941818; // type:func
func_80941868_jp = 0x80941868; // type:func
func_80941C08_jp = 0x80941C08; // type:func
func_80941DC8_jp = 0x80941DC8; // type:func
func_80941FA0_jp = 0x80941FA0; // type:func
func_80942174_jp = 0x80942174; // type:func
func_809421A8_jp = 0x809421A8; // type:func
func_809421FC_jp = 0x809421FC; // type:func
func_80942318_jp = 0x80942318; // type:func
func_80942444_jp = 0x80942444; // type:func
func_809424D8_jp = 0x809424D8; // type:func
func_809425D8_jp = 0x809425D8; // type:func
func_80942688_jp = 0x80942688; // type:func
func_809426C4_jp = 0x809426C4; // type:func
func_80942824_jp = 0x80942824; // type:func
func_80942914_jp = 0x80942914; // type:func
func_809430A0_jp = 0x809430A0; // type:func
func_80943234_jp = 0x80943234; // type:func
func_80943294_jp = 0x80943294; // type:func
func_80943AF8_jp = 0x80943AF8; // type:func
func_80943B4C_jp = 0x80943B4C; // type:func
func_80943C10_jp = 0x80943C10; // type:func
func_80943FF4_jp = 0x80943FF4; // type:func
func_80944080_jp = 0x80944080; // type:func
func_809441A0_jp = 0x809441A0; // type:func
func_809442CC_jp = 0x809442CC; // type:func
func_809442E0_jp = 0x809442E0; // type:func
func_809442F8_jp = 0x809442F8; // type:func
func_80944310_jp = 0x80944310; // type:func
func_80944328_jp = 0x80944328; // type:func
func_80944340_jp = 0x80944340; // type:func
func_80944358_jp = 0x80944358; // type:func
func_809443FC_jp = 0x809443FC; // type:func
func_809444E8_jp = 0x809444E8; // type:func
func_809445C8_jp = 0x809445C8; // type:func
func_80944A5C_jp = 0x80944A5C; // type:func
func_80944CA0_jp = 0x80944CA0; // type:func
func_80944D9C_jp = 0x80944D9C; // type:func
func_80944DCC_jp = 0x80944DCC; // type:func
func_80944DFC_jp = 0x80944DFC; // type:func
func_80945028_jp = 0x80945028; // type:func
func_80945084_jp = 0x80945084; // type:func
func_809452BC_jp = 0x809452BC; // type:func
func_80945330_jp = 0x80945330; // type:func
func_809454F0_jp = 0x809454F0; // type:func
func_80945534_jp = 0x80945534; // type:func
func_80945578_jp = 0x80945578; // type:func
func_809455DC_jp = 0x809455DC; // type:func
func_809457DC_jp = 0x809457DC; // type:func
func_80945810_jp = 0x80945810; // type:func
func_80945DD8_jp = 0x80945DD8; // type:func
func_80945E30_jp = 0x80945E30; // type:func
func_80945ED8_jp = 0x80945ED8; // type:func
func_8094601C_jp = 0x8094601C; // type:func
func_80946160_jp = 0x80946160; // type:func
func_8094630C_jp = 0x8094630C; // type:func
func_809465CC_jp = 0x809465CC; // type:func
func_809467F0_jp = 0x809467F0; // type:func
func_80946858_jp = 0x80946858; // type:func
func_80946A2C_jp = 0x80946A2C; // type:func
func_80946C58_jp = 0x80946C58; // type:func
func_80946CFC_jp = 0x80946CFC; // type:func
func_80946E68_jp = 0x80946E68; // type:func
func_80946F40_jp = 0x80946F40; // type:func
func_80947024_jp = 0x80947024; // type:func
func_809472D0_jp = 0x809472D0; // type:func
func_809473D4_jp = 0x809473D4; // type:func
func_809474CC_jp = 0x809474CC; // type:func

// .data

D_80947560_jp = 0x80947560; //
D_80947564_jp = 0x80947564; //
D_80947568_jp = 0x80947568; //
_0082D7F0_Profile = 0x8094756C; //
D_80947590_jp = 0x80947590; //
D_809475A8_jp = 0x809475A8; //
D_809475C0_jp = 0x809475C0; //
D_809475D8_jp = 0x809475D8; //
D_809475F0_jp = 0x809475F0; //
D_80947608_jp = 0x80947608; //
D_80947620_jp = 0x80947620; //
D_80947638_jp = 0x80947638; //
D_8094B168_jp = 0x8094B168; //
D_8094C034_jp = 0x8094C034; //
D_8094C060_jp = 0x8094C060; // type:u8
D_8094C160_jp = 0x8094C160; //
D_8094C260_jp = 0x8094C260; //
D_8094C264_jp = 0x8094C264; //
D_FLT_8094C268_jp = 0x8094C268; // type:f32
D_8094C278_jp = 0x8094C278; // type:u8
D_8094C27C_jp = 0x8094C27C; // type:u8
D_FLT_8094C630_jp = 0x8094C630; // type:f32
D_FLT_8094C638_jp = 0x8094C638; // type:f32
D_FLT_8094C63C_jp = 0x8094C63C; // type:f32
D_FLT_8094C644_jp = 0x8094C644; // type:f32
D_FLT_8094C648_jp = 0x8094C648; // type:f32
D_FLT_8094C650_jp = 0x8094C650; // type:f32
D_FLT_8094C654_jp = 0x8094C654; // type:f32
D_FLT_8094C65C_jp = 0x8094C65C; // type:f32
D_8094C660_jp = 0x8094C660; //
D_8094C680_jp = 0x8094C680; //
D_8094C880_jp = 0x8094C880; //
D_8094C8E0_jp = 0x8094C8E0; // type:s16
D_8094C940_jp = 0x8094C940; //
D_8094C958_jp = 0x8094C958; //
D_8094C960_jp = 0x8094C960; //
D_8094C990_jp = 0x8094C990; //
D_8094C998_jp = 0x8094C998; //
D_8094C9B0_jp = 0x8094C9B0; //
D_8094C9C8_jp = 0x8094C9C8; //
D_8094C9E0_jp = 0x8094C9E0; //
D_8094C9F8_jp = 0x8094C9F8; //
D_8094CA10_jp = 0x8094CA10; //
D_8094CA20_jp = 0x8094CA20; //
D_8094CA24_jp = 0x8094CA24; //
D_8094CA30_jp = 0x8094CA30; //
D_8094CA3C_jp = 0x8094CA3C; //
D_8094CA48_jp = 0x8094CA48; //
D_8094CA7C_jp = 0x8094CA7C; //
D_8094CAB0_jp = 0x8094CAB0; //
D_8094CB40_jp = 0x8094CB40; //
D_8094CBD0_jp = 0x8094CBD0; //
D_8094CC60_jp = 0x8094CC60; //
D_8094CCF0_jp = 0x8094CCF0; //
D_8094CD80_jp = 0x8094CD80; //
D_8094CE10_jp = 0x8094CE10; //
D_8094CE14_jp = 0x8094CE14; //
D_8094CE44_jp = 0x8094CE44; //
D_FLT_8094CE5C_jp = 0x8094CE5C; // type:f32
D_8094CE6C_jp = 0x8094CE6C; //
D_8094CE78_jp = 0x8094CE78; // type:s16
D_8094CEB8_jp = 0x8094CEB8; //
D_8094CED8_jp = 0x8094CED8; //
D_8094CEE4_jp = 0x8094CEE4; //
D_FLT_8094CEEC_jp = 0x8094CEEC; // type:f32
D_8094CF0C_jp = 0x8094CF0C; // type:s16
D_8094CF0E_jp = 0x8094CF0E; // type:s16
D_8094CF10_jp = 0x8094CF10; // type:s16
D_8094CF12_jp = 0x8094CF12; // type:s16
D_8094CF14_jp = 0x8094CF14; //
D_8094CF1C_jp = 0x8094CF1C; // type:s16
D_8094CF24_jp = 0x8094CF24; // type:s16
D_8094CF2C_jp = 0x8094CF2C; //
D_8094CF3C_jp = 0x8094CF3C; //
D_8094CF4C_jp = 0x8094CF4C; //
D_8094CF58_jp = 0x8094CF58; // type:s16
D_8094CF60_jp = 0x8094CF60; // type:s16
D_8094CF78_jp = 0x8094CF78; //
D_8094CFA8_jp = 0x8094CFA8; // type:s16
D_FLT_8094CFC0_jp = 0x8094CFC0; // type:f32
D_8094CFF0_jp = 0x8094CFF0; // type:u8
D_8094CFF4_jp = 0x8094CFF4; // type:u8
D_8094CFF8_jp = 0x8094CFF8; //
D_8094CFFC_jp = 0x8094CFFC; //
D_8094D004_jp = 0x8094D004; //
D_8094D008_jp = 0x8094D008; //
D_8094D010_jp = 0x8094D010; //
D_8094D014_jp = 0x8094D014; //
D_8094D01C_jp = 0x8094D01C; //
D_8094D028_jp = 0x8094D028; //
D_8094D030_jp = 0x8094D030; //
D_8094D03C_jp = 0x8094D03C; //
D_8094D048_jp = 0x8094D048; //
D_8094D054_jp = 0x8094D054; //
D_8094D05C_jp = 0x8094D05C; //
D_FLT_8094D068_jp = 0x8094D068; // type:f32
D_8094D0A4_jp = 0x8094D0A4; // type:u8
D_8094D0A8_jp = 0x8094D0A8; //
D_8094D0B8_jp = 0x8094D0B8; //
D_8094D0C4_jp = 0x8094D0C4; //
D_8094D0D0_jp = 0x8094D0D0; //
D_8094D0DC_jp = 0x8094D0DC; //
D_8094D0E8_jp = 0x8094D0E8; //
D_8094D0F4_jp = 0x8094D0F4; //
D_8094D134_jp = 0x8094D134; //

// .rodata

RO_STR_8094D140_jp = 0x8094D140; // type:asciz
RO_STR_8094D150_jp = 0x8094D150; // type:asciz
RO_STR_8094D160_jp = 0x8094D160; // type:asciz
jtbl_8094D170_jp = 0x8094D170; // type:jtbl
RO_FLT_8094D188_jp = 0x8094D188; // type:f32
RO_FLT_8094D18C_jp = 0x8094D18C; // type:f32
RO_FLT_8094D190_jp = 0x8094D190; // type:f32
RO_FLT_8094D194_jp = 0x8094D194; // type:f32
RO_FLT_8094D198_jp = 0x8094D198; // type:f32
RO_FLT_8094D19C_jp = 0x8094D19C; // type:f32
RO_FLT_8094D1A0_jp = 0x8094D1A0; // type:f32
RO_FLT_8094D1A4_jp = 0x8094D1A4; // type:f32
jtbl_8094D1A8_jp = 0x8094D1A8; // type:jtbl
RO_FLT_8094D1C0_jp = 0x8094D1C0; // type:f32
RO_FLT_8094D1C4_jp = 0x8094D1C4; // type:f32
RO_FLT_8094D1C8_jp = 0x8094D1C8; // type:f32
RO_FLT_8094D1CC_jp = 0x8094D1CC; // type:f32
RO_FLT_8094D1D0_jp = 0x8094D1D0; // type:f32
RO_FLT_8094D1D4_jp = 0x8094D1D4; // type:f32
RO_FLT_8094D1D8_jp = 0x8094D1D8; // type:f32
jtbl_8094D1DC_jp = 0x8094D1DC; // type:jtbl
RO_FLT_8094D1F4_jp = 0x8094D1F4; // type:f32
RO_FLT_8094D1F8_jp = 0x8094D1F8; // type:f32
RO_FLT_8094D1FC_jp = 0x8094D1FC; // type:f32
RO_FLT_8094D200_jp = 0x8094D200; // type:f32
RO_FLT_8094D204_jp = 0x8094D204; // type:f32
RO_FLT_8094D208_jp = 0x8094D208; // type:f32
RO_FLT_8094D20C_jp = 0x8094D20C; // type:f32
RO_FLT_8094D210_jp = 0x8094D210; // type:f32
RO_FLT_8094D214_jp = 0x8094D214; // type:f32
RO_FLT_8094D218_jp = 0x8094D218; // type:f32
RO_FLT_8094D21C_jp = 0x8094D21C; // type:f32
RO_FLT_8094D220_jp = 0x8094D220; // type:f32
RO_FLT_8094D224_jp = 0x8094D224; // type:f32
jtbl_8094D228_jp = 0x8094D228; // type:jtbl
RO_FLT_8094D240_jp = 0x8094D240; // type:f32
RO_FLT_8094D244_jp = 0x8094D244; // type:f32
RO_FLT_8094D248_jp = 0x8094D248; // type:f32
RO_FLT_8094D24C_jp = 0x8094D24C; // type:f32
RO_FLT_8094D250_jp = 0x8094D250; // type:f32
RO_FLT_8094D254_jp = 0x8094D254; // type:f32
RO_FLT_8094D258_jp = 0x8094D258; // type:f32
RO_FLT_8094D25C_jp = 0x8094D25C; // type:f32
RO_FLT_8094D260_jp = 0x8094D260; // type:f32
RO_FLT_8094D264_jp = 0x8094D264; // type:f32
RO_FLT_8094D268_jp = 0x8094D268; // type:f32
RO_FLT_8094D26C_jp = 0x8094D26C; // type:f32
RO_FLT_8094D270_jp = 0x8094D270; // type:f32
RO_FLT_8094D274_jp = 0x8094D274; // type:f32
RO_FLT_8094D278_jp = 0x8094D278; // type:f32
RO_FLT_8094D27C_jp = 0x8094D27C; // type:f32
RO_FLT_8094D280_jp = 0x8094D280; // type:f32
jtbl_8094D284_jp = 0x8094D284; // type:jtbl
jtbl_8094D2A8_jp = 0x8094D2A8; // type:jtbl
jtbl_8094D2C8_jp = 0x8094D2C8; // type:jtbl
jtbl_8094D2EC_jp = 0x8094D2EC; // type:jtbl
RO_FLT_8094D30C_jp = 0x8094D30C; // type:f32
RO_FLT_8094D310_jp = 0x8094D310; // type:f32

// .bss

B_8094D320_jp = 0x8094D320; //
B_8094D324_jp = 0x8094D324; //
B_8094D328_jp = 0x8094D328; //
B_8094D32C_jp = 0x8094D32C; //
B_8094D8D0_jp = 0x8094D8D0; //
B_8094D8D4_jp = 0x8094D8D4; //
B_8094D8D8_jp = 0x8094D8D8; //
B_8094D8DC_jp = 0x8094D8DC; //
B_8094DACC_jp = 0x8094DACC; //
B_8094E1EC_jp = 0x8094E1EC; //
B_8094E1F0_jp = 0x8094E1F0; //
B_8094E1F4_jp = 0x8094E1F4; //
B_8094E1F8_jp = 0x8094E1F8; //
B_8094E1FC_jp = 0x8094E1FC; //
B_8094E7A0_jp = 0x8094E7A0; //
B_8094E7A4_jp = 0x8094E7A4; //
B_8094E7A8_jp = 0x8094E7A8; //
B_8094E7AC_jp = 0x8094E7AC; //
B_8094E99C_jp = 0x8094E99C; //
B_8094F0BC_jp = 0x8094F0BC; //
B_8094F0C0_jp = 0x8094F0C0; // type:u8
B_8094F0C1_jp = 0x8094F0C1; // type:u8
B_8094F0C2_jp = 0x8094F0C2; // type:u8
B_8094F0C3_jp = 0x8094F0C3; // type:u8
B_8094F473_jp = 0x8094F473; //
B_8094F478_jp = 0x8094F478; //
B_8094F608_jp = 0x8094F608; //

// .text

func_80950E50_jp = 0x80950E50; // type:func
func_80950EC8_jp = 0x80950EC8; // type:func
func_80950F1C_jp = 0x80950F1C; // type:func
func_80950F70_jp = 0x80950F70; // type:func
func_80950FA4_jp = 0x80950FA4; // type:func
func_80951100_jp = 0x80951100; // type:func
func_80951124_jp = 0x80951124; // type:func
func_809512C4_jp = 0x809512C4; // type:func
func_80951430_jp = 0x80951430; // type:func
func_80951470_jp = 0x80951470; // type:func
func_80951480_jp = 0x80951480; // type:func

// .data

_00845C40_Profile = 0x80951510; //

// .rodata

RO_STR_80951540_jp = 0x80951540; // type:asciz
RO_STR_80951558_jp = 0x80951558; // type:asciz
RO_STR_80951570_jp = 0x80951570; // type:asciz
RO_STR_80951588_jp = 0x80951588; // type:asciz
RO_FLT_809515A0_jp = 0x809515A0; // type:f32
RO_FLT_809515A4_jp = 0x809515A4; // type:f32

// .text

func_80951640_jp = 0x80951640; // type:func
func_80951650_jp = 0x80951650; // type:func
func_80951660_jp = 0x80951660; // type:func
func_80951670_jp = 0x80951670; // type:func

// .data

_00846430_Profile = 0x80951680; //

// .text

func_809516E0_jp = 0x809516E0; // type:func
func_80951794_jp = 0x80951794; // type:func
func_809517F4_jp = 0x809517F4; // type:func
func_8095180C_jp = 0x8095180C; // type:func
func_8095181C_jp = 0x8095181C; // type:func
func_8095182C_jp = 0x8095182C; // type:func
func_809518D0_jp = 0x809518D0; // type:func

// .data

_008464D0_Profile = 0x809519E0; //
D_80951A04_jp = 0x80951A04; //

// .text

func_80951A70_jp = 0x80951A70; // type:func
func_80951A9C_jp = 0x80951A9C; // type:func
func_80951BC4_jp = 0x80951BC4; // type:func
func_80951CDC_jp = 0x80951CDC; // type:func
func_80951DF4_jp = 0x80951DF4; // type:func
func_80951E64_jp = 0x80951E64; // type:func
func_80951EBC_jp = 0x80951EBC; // type:func
func_80951F14_jp = 0x80951F14; // type:func
func_80951FE8_jp = 0x80951FE8; // type:func
func_80952038_jp = 0x80952038; // type:func
func_8095205C_jp = 0x8095205C; // type:func
func_80952254_jp = 0x80952254; // type:func
func_80952404_jp = 0x80952404; // type:func
func_80952444_jp = 0x80952444; // type:func
func_8095253C_jp = 0x8095253C; // type:func
func_80952644_jp = 0x80952644; // type:func
func_8095267C_jp = 0x8095267C; // type:func
func_809526D4_jp = 0x809526D4; // type:func
func_8095272C_jp = 0x8095272C; // type:func
func_80952754_jp = 0x80952754; // type:func

// .data

D_809527B0_jp = 0x809527B0; //
D_809527CC_jp = 0x809527CC; //
D_809527E8_jp = 0x809527E8; //
D_80952804_jp = 0x80952804; //
_00846860_Profile = 0x80952810; //

// .rodata

RO_STR_80952840_jp = 0x80952840; // type:asciz
RO_STR_80952854_jp = 0x80952854; // type:asciz
RO_STR_80952868_jp = 0x80952868; // type:asciz
RO_STR_8095287C_jp = 0x8095287C; // type:asciz
RO_STR_80952890_jp = 0x80952890; // type:asciz
RO_FLT_809528A4_jp = 0x809528A4; // type:f32
RO_FLT_809528A8_jp = 0x809528A8; // type:f32

// .text

func_809529B0_jp = 0x809529B0; // type:func
func_80952A7C_jp = 0x80952A7C; // type:func
func_80952ACC_jp = 0x80952ACC; // type:func
func_80952B0C_jp = 0x80952B0C; // type:func
func_80952B48_jp = 0x80952B48; // type:func
func_80952B8C_jp = 0x80952B8C; // type:func
func_80952BD0_jp = 0x80952BD0; // type:func
func_80952C34_jp = 0x80952C34; // type:func
func_80952C8C_jp = 0x80952C8C; // type:func
func_80952D04_jp = 0x80952D04; // type:func
func_80952D70_jp = 0x80952D70; // type:func
func_80952DE0_jp = 0x80952DE0; // type:func
func_80952F84_jp = 0x80952F84; // type:func
func_80952FB8_jp = 0x80952FB8; // type:func
func_8095305C_jp = 0x8095305C; // type:func
func_8095308C_jp = 0x8095308C; // type:func
func_809531C8_jp = 0x809531C8; // type:func
func_80953238_jp = 0x80953238; // type:func
func_80953288_jp = 0x80953288; // type:func
func_809532F0_jp = 0x809532F0; // type:func
func_8095337C_jp = 0x8095337C; // type:func
func_809533B8_jp = 0x809533B8; // type:func
func_809533F0_jp = 0x809533F0; // type:func
func_80953444_jp = 0x80953444; // type:func
func_80953474_jp = 0x80953474; // type:func
func_809534C4_jp = 0x809534C4; // type:func
func_80953550_jp = 0x80953550; // type:func
func_80953580_jp = 0x80953580; // type:func
func_809535B4_jp = 0x809535B4; // type:func

// .data

_008477A0_Profile = 0x809535E0; //
D_80953604_jp = 0x80953604; // type:u16
D_8095360C_jp = 0x8095360C; //
D_8095361C_jp = 0x8095361C; //
D_FLT_8095362C_jp = 0x8095362C; // type:f32
D_FLT_8095363C_jp = 0x8095363C; // type:f32
D_80953644_jp = 0x80953644; //
D_80953650_jp = 0x80953650; //
D_80953684_jp = 0x80953684; //

// .rodata

RO_FLT_809536C0_jp = 0x809536C0; // type:f32
RO_FLT_809536C4_jp = 0x809536C4; // type:f32
RO_FLT_809536C8_jp = 0x809536C8; // type:f32
RO_FLT_809536CC_jp = 0x809536CC; // type:f32

// .bss

B_809536D0_jp = 0x809536D0; //

// .text

func_80953820_jp = 0x80953820; // type:func
func_80953864_jp = 0x80953864; // type:func
func_8095388C_jp = 0x8095388C; // type:func
func_809538CC_jp = 0x809538CC; // type:func
func_80953910_jp = 0x80953910; // type:func
func_80953974_jp = 0x80953974; // type:func
func_809539CC_jp = 0x809539CC; // type:func
func_80953A44_jp = 0x80953A44; // type:func
func_80953AE8_jp = 0x80953AE8; // type:func
func_80953B30_jp = 0x80953B30; // type:func
func_80953B98_jp = 0x80953B98; // type:func
func_80953C24_jp = 0x80953C24; // type:func
func_80953C60_jp = 0x80953C60; // type:func
func_80953C90_jp = 0x80953C90; // type:func
func_80953CC4_jp = 0x80953CC4; // type:func

// .data

_00848600_Profile = 0x80953CF0; //
D_80953D14_jp = 0x80953D14; //
D_80953D20_jp = 0x80953D20; //
D_80953D34_jp = 0x80953D34; //

// .rodata

RO_FLT_80953D50_jp = 0x80953D50; // type:f32
RO_FLT_80953D54_jp = 0x80953D54; // type:f32
RO_FLT_80953D58_jp = 0x80953D58; // type:f32

// .bss

B_80953D60_jp = 0x80953D60; //

// .text

func_80953E20_jp = 0x80953E20; // type:func
func_80953FF4_jp = 0x80953FF4; // type:func
func_809540C8_jp = 0x809540C8; // type:func
func_809541CC_jp = 0x809541CC; // type:func
func_809542D0_jp = 0x809542D0; // type:func
func_80954314_jp = 0x80954314; // type:func
func_80954384_jp = 0x80954384; // type:func
func_809543B4_jp = 0x809543B4; // type:func
func_80954400_jp = 0x80954400; // type:func
func_80954440_jp = 0x80954440; // type:func
func_80954514_jp = 0x80954514; // type:func
func_809545C4_jp = 0x809545C4; // type:func
func_809547A0_jp = 0x809547A0; // type:func
func_809547C4_jp = 0x809547C4; // type:func
func_809547D4_jp = 0x809547D4; // type:func
func_809547E4_jp = 0x809547E4; // type:func
func_80954970_jp = 0x80954970; // type:func

// .data

_00848BF0_Profile = 0x80954C80; //
D_80954CA4_jp = 0x80954CA4; // type:u16
D_80954CAC_jp = 0x80954CAC; //

// .text

func_80954D80_jp = 0x80954D80; // type:func
func_80954E0C_jp = 0x80954E0C; // type:func
func_80954E90_jp = 0x80954E90; // type:func
func_80954F5C_jp = 0x80954F5C; // type:func
func_80954FE8_jp = 0x80954FE8; // type:func
func_80955060_jp = 0x80955060; // type:func
func_80955150_jp = 0x80955150; // type:func
func_809551C8_jp = 0x809551C8; // type:func
func_80955224_jp = 0x80955224; // type:func
func_80955264_jp = 0x80955264; // type:func
func_809552E8_jp = 0x809552E8; // type:func
func_80955344_jp = 0x80955344; // type:func
func_809553C0_jp = 0x809553C0; // type:func
func_80955408_jp = 0x80955408; // type:func
func_80955468_jp = 0x80955468; // type:func
func_80955658_jp = 0x80955658; // type:func
func_80955668_jp = 0x80955668; // type:func
func_8095573C_jp = 0x8095573C; // type:func
func_80955814_jp = 0x80955814; // type:func
func_80955940_jp = 0x80955940; // type:func
func_80955990_jp = 0x80955990; // type:func
func_80955AAC_jp = 0x80955AAC; // type:func
func_80955B14_jp = 0x80955B14; // type:func
func_80955B6C_jp = 0x80955B6C; // type:func
func_80955BC0_jp = 0x80955BC0; // type:func
func_80955BFC_jp = 0x80955BFC; // type:func
func_80955C14_jp = 0x80955C14; // type:func
func_80955CA8_jp = 0x80955CA8; // type:func
func_80955D4C_jp = 0x80955D4C; // type:func
func_80955D8C_jp = 0x80955D8C; // type:func
func_80955DD8_jp = 0x80955DD8; // type:func
func_80955E38_jp = 0x80955E38; // type:func
func_80955E60_jp = 0x80955E60; // type:func
func_80955E88_jp = 0x80955E88; // type:func
func_80955F08_jp = 0x80955F08; // type:func
func_80955F38_jp = 0x80955F38; // type:func
func_80955FA4_jp = 0x80955FA4; // type:func
func_80956028_jp = 0x80956028; // type:func
func_8095613C_jp = 0x8095613C; // type:func
func_8095619C_jp = 0x8095619C; // type:func
func_809561D4_jp = 0x809561D4; // type:func
func_809561F8_jp = 0x809561F8; // type:func
func_80956248_jp = 0x80956248; // type:func
func_80956278_jp = 0x80956278; // type:func
func_80956314_jp = 0x80956314; // type:func
func_8095639C_jp = 0x8095639C; // type:func
func_80956424_jp = 0x80956424; // type:func
func_809564C8_jp = 0x809564C8; // type:func
func_809564F0_jp = 0x809564F0; // type:func
func_80956568_jp = 0x80956568; // type:func
func_8095658C_jp = 0x8095658C; // type:func
func_80956614_jp = 0x80956614; // type:func
func_80956638_jp = 0x80956638; // type:func
func_80956668_jp = 0x80956668; // type:func
func_809566F4_jp = 0x809566F4; // type:func
func_80956730_jp = 0x80956730; // type:func
func_80956750_jp = 0x80956750; // type:func
func_80956760_jp = 0x80956760; // type:func
func_809567C0_jp = 0x809567C0; // type:func
func_80956800_jp = 0x80956800; // type:func
func_80956840_jp = 0x80956840; // type:func
func_8095687C_jp = 0x8095687C; // type:func
func_809568A8_jp = 0x809568A8; // type:func
func_809568CC_jp = 0x809568CC; // type:func
func_809568F0_jp = 0x809568F0; // type:func
func_80956974_jp = 0x80956974; // type:func
func_80956A24_jp = 0x80956A24; // type:func
func_80956AC0_jp = 0x80956AC0; // type:func
func_80956B58_jp = 0x80956B58; // type:func
func_80956C10_jp = 0x80956C10; // type:func
func_80956C48_jp = 0x80956C48; // type:func
func_80956C98_jp = 0x80956C98; // type:func
func_80956E4C_jp = 0x80956E4C; // type:func
func_80956EA8_jp = 0x80956EA8; // type:func
func_80956EC8_jp = 0x80956EC8; // type:func
func_80956EE8_jp = 0x80956EE8; // type:func
func_80956F40_jp = 0x80956F40; // type:func
func_809570A8_jp = 0x809570A8; // type:func
func_80957100_jp = 0x80957100; // type:func

// .data

D_809571A0_jp = 0x809571A0; //
D_809571A4_jp = 0x809571A4; // type:u8
D_809571A8_jp = 0x809571A8; //
D_809571AC_jp = 0x809571AC; //
D_809571B0_jp = 0x809571B0; //
D_809571B4_jp = 0x809571B4; //
D_809571F0_jp = 0x809571F0; //
D_80957310_jp = 0x80957310; //
D_80957748_jp = 0x80957748; //
D_80957940_jp = 0x80957940; //
D_8095794C_jp = 0x8095794C; //
D_809579C4_jp = 0x809579C4; //
D_809579E0_jp = 0x809579E0; //
D_809579FC_jp = 0x809579FC; //
D_80957A08_jp = 0x80957A08; //
D_80957A0C_jp = 0x80957A0C; //
D_80957A34_jp = 0x80957A34; //
D_80957A50_jp = 0x80957A50; //
D_80957A80_jp = 0x80957A80; //
D_80957A84_jp = 0x80957A84; //
D_80957A88_jp = 0x80957A88; //
D_80957AA0_jp = 0x80957AA0; //
_00849B50_Profile = 0x80957AAC; //

// .text

func_80957DF0_jp = 0x80957DF0; // type:func
func_80957E74_jp = 0x80957E74; // type:func
func_80957F0C_jp = 0x80957F0C; // type:func
func_80957F68_jp = 0x80957F68; // type:func
func_80957F88_jp = 0x80957F88; // type:func
func_80957FA8_jp = 0x80957FA8; // type:func
func_80957FD4_jp = 0x80957FD4; // type:func
func_8095804C_jp = 0x8095804C; // type:func
func_8095806C_jp = 0x8095806C; // type:func
func_809580D4_jp = 0x809580D4; // type:func
func_80958130_jp = 0x80958130; // type:func
func_809581F0_jp = 0x809581F0; // type:func
func_8095824C_jp = 0x8095824C; // type:func
func_809582B4_jp = 0x809582B4; // type:func

// .data

D_809582D0_jp = 0x809582D0; //
D_809582F8_jp = 0x809582F8; //
D_80958304_jp = 0x80958304; //
_0084CBC0_Profile = 0x80958310; //

// .text

func_809583B0_jp = 0x809583B0; // type:func
func_809585F4_jp = 0x809585F4; // type:func
func_809586FC_jp = 0x809586FC; // type:func
func_80958824_jp = 0x80958824; // type:func
func_809588D4_jp = 0x809588D4; // type:func
func_80958A28_jp = 0x80958A28; // type:func
func_80958B18_jp = 0x80958B18; // type:func
func_80958B28_jp = 0x80958B28; // type:func
func_80958B38_jp = 0x80958B38; // type:func
func_80958EA4_jp = 0x80958EA4; // type:func
func_80958F70_jp = 0x80958F70; // type:func
func_80958FB8_jp = 0x80958FB8; // type:func

// .data

_0084D180_Profile = 0x80959040; //
D_80959064_jp = 0x80959064; //
D_80959074_jp = 0x80959074; //
D_809590CC_jp = 0x809590CC; //
D_8095914C_jp = 0x8095914C; //
D_80959204_jp = 0x80959204; //
D_80959214_jp = 0x80959214; //

// .text

func_809592B0_jp = 0x809592B0; // type:func
func_809593D4_jp = 0x809593D4; // type:func
func_80959434_jp = 0x80959434; // type:func
func_80959674_jp = 0x80959674; // type:func
func_809597B4_jp = 0x809597B4; // type:func
func_809599B0_jp = 0x809599B0; // type:func
func_80959A04_jp = 0x80959A04; // type:func
func_80959A80_jp = 0x80959A80; // type:func
func_80959B64_jp = 0x80959B64; // type:func
func_80959BB0_jp = 0x80959BB0; // type:func
func_80959C34_jp = 0x80959C34; // type:func
func_80959CD8_jp = 0x80959CD8; // type:func
func_80959F24_jp = 0x80959F24; // type:func
func_80959F34_jp = 0x80959F34; // type:func
func_8095A024_jp = 0x8095A024; // type:func
func_8095A158_jp = 0x8095A158; // type:func

// .data

_0084E080_Profile = 0x8095A290; //
D_8095A2B4_jp = 0x8095A2B4; //
D_8095A2C4_jp = 0x8095A2C4; //

// .rodata

RO_STR_8095A2D0_jp = 0x8095A2D0; // type:asciz
RO_STR_8095A2E8_jp = 0x8095A2E8; // type:asciz
RO_FLT_8095A300_jp = 0x8095A300; // type:f32

// .text

func_8095A3B0_jp = 0x8095A3B0; // type:func
func_8095A3F8_jp = 0x8095A3F8; // type:func
func_8095A514_jp = 0x8095A514; // type:func
func_8095A62C_jp = 0x8095A62C; // type:func
func_8095A744_jp = 0x8095A744; // type:func
func_8095A808_jp = 0x8095A808; // type:func
func_8095A86C_jp = 0x8095A86C; // type:func
func_8095A8C8_jp = 0x8095A8C8; // type:func
func_8095A9AC_jp = 0x8095A9AC; // type:func
func_8095A9D0_jp = 0x8095A9D0; // type:func
func_8095AD48_jp = 0x8095AD48; // type:func
func_8095AF7C_jp = 0x8095AF7C; // type:func
func_8095B2B0_jp = 0x8095B2B0; // type:func
func_8095B30C_jp = 0x8095B30C; // type:func
func_8095B32C_jp = 0x8095B32C; // type:func
func_8095B33C_jp = 0x8095B33C; // type:func
func_8095B3C0_jp = 0x8095B3C0; // type:func
func_8095B444_jp = 0x8095B444; // type:func
func_8095B4B0_jp = 0x8095B4B0; // type:func

// .data

D_8095B510_jp = 0x8095B510; //
D_8095B5B0_jp = 0x8095B5B0; //
D_8095B5C8_jp = 0x8095B5C8; //
D_8095B628_jp = 0x8095B628; // type:s16
D_8095B634_jp = 0x8095B634; // type:s16
_0084F180_Profile = 0x8095B640; //
D_8095B664_jp = 0x8095B664; //
D_8095B678_jp = 0x8095B678; //
D_8095B684_jp = 0x8095B684; //

// .rodata

RO_STR_8095B690_jp = 0x8095B690; // type:asciz
RO_STR_8095B6A4_jp = 0x8095B6A4; // type:asciz
RO_STR_8095B6B8_jp = 0x8095B6B8; // type:asciz
RO_STR_8095B6CC_jp = 0x8095B6CC; // type:asciz
RO_STR_8095B6E0_jp = 0x8095B6E0; // type:asciz
RO_STR_8095B6F4_jp = 0x8095B6F4; // type:asciz
RO_FLT_8095B708_jp = 0x8095B708; // type:f32
RO_FLT_8095B70C_jp = 0x8095B70C; // type:f32
RO_FLT_8095B710_jp = 0x8095B710; // type:f32
RO_FLT_8095B714_jp = 0x8095B714; // type:f32
RO_FLT_8095B718_jp = 0x8095B718; // type:f32
RO_FLT_8095B71C_jp = 0x8095B71C; // type:f32

// .text

func_8095B8B0_jp = 0x8095B8B0; // type:func
func_8095B96C_jp = 0x8095B96C; // type:func
func_8095B9CC_jp = 0x8095B9CC; // type:func
func_8095BA60_jp = 0x8095BA60; // type:func
func_8095BB80_jp = 0x8095BB80; // type:func
func_8095BBFC_jp = 0x8095BBFC; // type:func
func_8095BC60_jp = 0x8095BC60; // type:func
func_8095BCDC_jp = 0x8095BCDC; // type:func
func_8095BD18_jp = 0x8095BD18; // type:func
func_8095BD28_jp = 0x8095BD28; // type:func
func_8095BD40_jp = 0x8095BD40; // type:func
func_8095BD7C_jp = 0x8095BD7C; // type:func
func_8095BD8C_jp = 0x8095BD8C; // type:func
func_8095BDE8_jp = 0x8095BDE8; // type:func
func_8095C09C_jp = 0x8095C09C; // type:func
func_8095C264_jp = 0x8095C264; // type:func
func_8095C2C0_jp = 0x8095C2C0; // type:func
func_8095C2DC_jp = 0x8095C2DC; // type:func
func_8095C2F0_jp = 0x8095C2F0; // type:func
func_8095C2FC_jp = 0x8095C2FC; // type:func
func_8095C37C_jp = 0x8095C37C; // type:func
func_8095C4A8_jp = 0x8095C4A8; // type:func
func_8095C6C8_jp = 0x8095C6C8; // type:func
func_8095C994_jp = 0x8095C994; // type:func
func_8095CC88_jp = 0x8095CC88; // type:func
func_8095CD98_jp = 0x8095CD98; // type:func
func_8095CF90_jp = 0x8095CF90; // type:func
func_8095D1E0_jp = 0x8095D1E0; // type:func
func_8095D280_jp = 0x8095D280; // type:func
func_8095D324_jp = 0x8095D324; // type:func
func_8095D524_jp = 0x8095D524; // type:func
func_8095D608_jp = 0x8095D608; // type:func
func_8095D6F4_jp = 0x8095D6F4; // type:func
func_8095D818_jp = 0x8095D818; // type:func
func_8095D940_jp = 0x8095D940; // type:func
func_8095DA20_jp = 0x8095DA20; // type:func
func_8095DAD4_jp = 0x8095DAD4; // type:func
func_8095DC64_jp = 0x8095DC64; // type:func
func_8095DDE8_jp = 0x8095DDE8; // type:func
func_8095DFF0_jp = 0x8095DFF0; // type:func
func_8095E130_jp = 0x8095E130; // type:func
func_8095E2A4_jp = 0x8095E2A4; // type:func
func_8095E404_jp = 0x8095E404; // type:func
func_8095E49C_jp = 0x8095E49C; // type:func
func_8095E4CC_jp = 0x8095E4CC; // type:func
func_8095E534_jp = 0x8095E534; // type:func
func_8095E5B4_jp = 0x8095E5B4; // type:func
func_8095E63C_jp = 0x8095E63C; // type:func
func_8095EC24_jp = 0x8095EC24; // type:func
func_8095EDE4_jp = 0x8095EDE4; // type:func
func_8095EE1C_jp = 0x8095EE1C; // type:func
func_8095EE90_jp = 0x8095EE90; // type:func
func_8095EEF0_jp = 0x8095EEF0; // type:func
func_8095EF30_jp = 0x8095EF30; // type:func
func_8095EF94_jp = 0x8095EF94; // type:func
func_8095F054_jp = 0x8095F054; // type:func
func_8095F0C0_jp = 0x8095F0C0; // type:func
func_8095F100_jp = 0x8095F100; // type:func
func_8095F114_jp = 0x8095F114; // type:func
func_8095F1D4_jp = 0x8095F1D4; // type:func
func_8095F240_jp = 0x8095F240; // type:func
func_8095F280_jp = 0x8095F280; // type:func
func_8095F330_jp = 0x8095F330; // type:func
func_8095F3A4_jp = 0x8095F3A4; // type:func
func_8095F404_jp = 0x8095F404; // type:func
func_8095F444_jp = 0x8095F444; // type:func
func_8095F4A8_jp = 0x8095F4A8; // type:func
func_8095F50C_jp = 0x8095F50C; // type:func
func_8095F578_jp = 0x8095F578; // type:func
func_8095F58C_jp = 0x8095F58C; // type:func
func_8095F5A0_jp = 0x8095F5A0; // type:func
func_8095F5B4_jp = 0x8095F5B4; // type:func
func_8095F60C_jp = 0x8095F60C; // type:func
func_8095F66C_jp = 0x8095F66C; // type:func
func_8095F680_jp = 0x8095F680; // type:func
func_8095F708_jp = 0x8095F708; // type:func
func_8095F758_jp = 0x8095F758; // type:func
func_8095F7B8_jp = 0x8095F7B8; // type:func
func_8095F834_jp = 0x8095F834; // type:func
func_8095F884_jp = 0x8095F884; // type:func
func_8095F8C4_jp = 0x8095F8C4; // type:func
func_8095F928_jp = 0x8095F928; // type:func
func_8095F998_jp = 0x8095F998; // type:func
func_8095F9E8_jp = 0x8095F9E8; // type:func
func_8095FA28_jp = 0x8095FA28; // type:func
func_8095FABC_jp = 0x8095FABC; // type:func
func_8095FB30_jp = 0x8095FB30; // type:func
func_8095FB70_jp = 0x8095FB70; // type:func
func_8095FBD4_jp = 0x8095FBD4; // type:func
func_8095FC68_jp = 0x8095FC68; // type:func
func_8095FCDC_jp = 0x8095FCDC; // type:func
func_8095FD1C_jp = 0x8095FD1C; // type:func
func_8095FD80_jp = 0x8095FD80; // type:func
func_8095FE70_jp = 0x8095FE70; // type:func
func_8095FEFC_jp = 0x8095FEFC; // type:func
func_8095FF3C_jp = 0x8095FF3C; // type:func
func_8096002C_jp = 0x8096002C; // type:func
func_809600C0_jp = 0x809600C0; // type:func
func_809601AC_jp = 0x809601AC; // type:func
func_80960240_jp = 0x80960240; // type:func
func_80960280_jp = 0x80960280; // type:func
func_80960370_jp = 0x80960370; // type:func
func_80960404_jp = 0x80960404; // type:func
func_809604F4_jp = 0x809604F4; // type:func
func_80960580_jp = 0x80960580; // type:func
func_809605C0_jp = 0x809605C0; // type:func
func_809606B0_jp = 0x809606B0; // type:func
func_80960700_jp = 0x80960700; // type:func
func_80960740_jp = 0x80960740; // type:func
func_80960808_jp = 0x80960808; // type:func
func_80960858_jp = 0x80960858; // type:func
func_80960978_jp = 0x80960978; // type:func
func_809609C8_jp = 0x809609C8; // type:func
func_80960AB4_jp = 0x80960AB4; // type:func
func_80960B28_jp = 0x80960B28; // type:func
func_80960C28_jp = 0x80960C28; // type:func
func_80960CCC_jp = 0x80960CCC; // type:func
func_80960D50_jp = 0x80960D50; // type:func
func_80960DBC_jp = 0x80960DBC; // type:func
func_80960E18_jp = 0x80960E18; // type:func
func_80960E2C_jp = 0x80960E2C; // type:func
func_80960E40_jp = 0x80960E40; // type:func
func_80960F38_jp = 0x80960F38; // type:func
func_80960FC4_jp = 0x80960FC4; // type:func
func_80961004_jp = 0x80961004; // type:func
func_80961100_jp = 0x80961100; // type:func
func_80961274_jp = 0x80961274; // type:func
func_809612B0_jp = 0x809612B0; // type:func
func_80961380_jp = 0x80961380; // type:func
func_80961654_jp = 0x80961654; // type:func
func_80961768_jp = 0x80961768; // type:func
func_809618A4_jp = 0x809618A4; // type:func

// .data

D_80961C00_jp = 0x80961C00; // type:u8
D_80961C04_jp = 0x80961C04; //
D_80961C10_jp = 0x80961C10; //
D_80961C20_jp = 0x80961C20; //
D_80961C60_jp = 0x80961C60; //
D_80961C70_jp = 0x80961C70; //
D_80961C78_jp = 0x80961C78; //
D_80961C90_jp = 0x80961C90; //
D_80961D08_jp = 0x80961D08; //
D_80961D10_jp = 0x80961D10; //
D_80961ED0_jp = 0x80961ED0; //
D_80961F30_jp = 0x80961F30; //
D_80961F38_jp = 0x80961F38; //
D_80961F40_jp = 0x80961F40; //
D_80961F48_jp = 0x80961F48; //
D_809622C8_jp = 0x809622C8; //
D_809622CC_jp = 0x809622CC; //
_00850680_Profile = 0x809622EC; //

// .rodata

jtbl_80962310_jp = 0x80962310; // type:jtbl

// .bss

B_80962330_jp = 0x80962330; //
B_80962356_jp = 0x80962356; // type:s8
B_80962357_jp = 0x80962357; // type:s8
B_80962358_jp = 0x80962358; // type:s8
B_80962359_jp = 0x80962359; // type:s8
B_8096235A_jp = 0x8096235A; //
B_80962364_jp = 0x80962364; //
B_809623C4_jp = 0x809623C4; //
B_809623D4_jp = 0x809623D4; //
B_809623D8_jp = 0x809623D8; //
B_80962458_jp = 0x80962458; //

// .text

func_80962A20_jp = 0x80962A20; // type:func
func_80962C10_jp = 0x80962C10; // type:func
func_80962D58_jp = 0x80962D58; // type:func
func_80962E08_jp = 0x80962E08; // type:func
func_809630C8_jp = 0x809630C8; // type:func
func_80963320_jp = 0x80963320; // type:func
func_80963358_jp = 0x80963358; // type:func
func_809633E4_jp = 0x809633E4; // type:func
func_80963438_jp = 0x80963438; // type:func
func_80963548_jp = 0x80963548; // type:func
func_80963584_jp = 0x80963584; // type:func
func_809635A8_jp = 0x809635A8; // type:func
func_80963760_jp = 0x80963760; // type:func
func_80963988_jp = 0x80963988; // type:func

// .data

D_809639D0_jp = 0x809639D0; // type:u16
D_809639D2_jp = 0x809639D2; // type:u16
_008576C0_Profile = 0x80963C8C; //

// .rodata

RO_FLT_80963CB0_jp = 0x80963CB0; // type:f32
RO_FLT_80963CB4_jp = 0x80963CB4; // type:f32
RO_FLT_80963CB8_jp = 0x80963CB8; // type:f32
RO_FLT_80963CBC_jp = 0x80963CBC; // type:f32

// .bss

B_80963CC0_jp = 0x80963CC0; //
B_80963CC4_jp = 0x80963CC4; // type:s16
B_80963CC8_jp = 0x80963CC8; //

// .text

func_80963DC0_jp = 0x80963DC0; // type:func
func_80963DE0_jp = 0x80963DE0; // type:func
func_80963E08_jp = 0x80963E08; // type:func
func_80963E50_jp = 0x80963E50; // type:func
func_80963F00_jp = 0x80963F00; // type:func
func_8096400C_jp = 0x8096400C; // type:func
func_8096407C_jp = 0x8096407C; // type:func
func_809640A8_jp = 0x809640A8; // type:func
func_8096413C_jp = 0x8096413C; // type:func
func_8096415C_jp = 0x8096415C; // type:func
func_809641DC_jp = 0x809641DC; // type:func
func_80964308_jp = 0x80964308; // type:func
func_809643B8_jp = 0x809643B8; // type:func
func_809644A4_jp = 0x809644A4; // type:func
func_80964500_jp = 0x80964500; // type:func
func_8096462C_jp = 0x8096462C; // type:func
func_809647C4_jp = 0x809647C4; // type:func

// .data

_00858A50_Profile = 0x80964AB0; //
D_80964AD4_jp = 0x80964AD4; //
D_80964B64_jp = 0x80964B64; //
D_80964BF4_jp = 0x80964BF4; //
D_80964C00_jp = 0x80964C00; //
D_80964C0C_jp = 0x80964C0C; //
D_80964C18_jp = 0x80964C18; //
D_80964C24_jp = 0x80964C24; //
D_80964C30_jp = 0x80964C30; //
D_80964C3C_jp = 0x80964C3C; //
D_80964C48_jp = 0x80964C48; //
D_80964C54_jp = 0x80964C54; //
D_80964C60_jp = 0x80964C60; //
D_80964C6C_jp = 0x80964C6C; //
D_80964C78_jp = 0x80964C78; //
D_80964C84_jp = 0x80964C84; //
D_80964C90_jp = 0x80964C90; //
D_80964C9C_jp = 0x80964C9C; //
D_80964CA8_jp = 0x80964CA8; //
D_80964CB4_jp = 0x80964CB4; //
D_80964CC0_jp = 0x80964CC0; //
D_80964CCC_jp = 0x80964CCC; //
D_80964CD8_jp = 0x80964CD8; //
D_80964CE4_jp = 0x80964CE4; //
D_80964CF0_jp = 0x80964CF0; //
D_80964CFC_jp = 0x80964CFC; //
D_80964D08_jp = 0x80964D08; //
D_80964D14_jp = 0x80964D14; //
D_80964D20_jp = 0x80964D20; //
D_80964D2C_jp = 0x80964D2C; //
D_80964D38_jp = 0x80964D38; //
D_80964D44_jp = 0x80964D44; //
D_80964D50_jp = 0x80964D50; //
D_80964D5C_jp = 0x80964D5C; //
D_80964D68_jp = 0x80964D68; //
D_80964D74_jp = 0x80964D74; //
D_80964D80_jp = 0x80964D80; //
D_80964D8C_jp = 0x80964D8C; //
D_80964D98_jp = 0x80964D98; //
D_80964E28_jp = 0x80964E28; //
D_80964E94_jp = 0x80964E94; //
D_80964F00_jp = 0x80964F00; //
D_80964F20_jp = 0x80964F20; //
D_80964F60_jp = 0x80964F60; //
D_80964FA0_jp = 0x80964FA0; //
D_80964FC0_jp = 0x80964FC0; //
D_80964FE0_jp = 0x80964FE0; //
D_80965020_jp = 0x80965020; //
D_80965050_jp = 0x80965050; //
D_80965080_jp = 0x80965080; //
D_809650B0_jp = 0x809650B0; //
D_809650E0_jp = 0x809650E0; //
D_80965100_jp = 0x80965100; //
D_80965120_jp = 0x80965120; //
D_80965140_jp = 0x80965140; //
D_80965170_jp = 0x80965170; //
D_809651A0_jp = 0x809651A0; //
D_809651C0_jp = 0x809651C0; //
D_80965220_jp = 0x80965220; //
D_80965280_jp = 0x80965280; //
D_809652E0_jp = 0x809652E0; //
D_809652EC_jp = 0x809652EC; //
D_809652FC_jp = 0x809652FC; //
D_80965314_jp = 0x80965314; //
D_80965324_jp = 0x80965324; //
D_80965334_jp = 0x80965334; //
D_80965344_jp = 0x80965344; //
D_80965354_jp = 0x80965354; //
D_80965364_jp = 0x80965364; //
D_8096537C_jp = 0x8096537C; //
D_809653DC_jp = 0x809653DC; //
D_8096543C_jp = 0x8096543C; //
D_80965448_jp = 0x80965448; //
D_80965478_jp = 0x80965478; //
D_809654A8_jp = 0x809654A8; //
D_809654B4_jp = 0x809654B4; //

// .rodata

RO_STR_809654C0_jp = 0x809654C0; // type:asciz
RO_FLT_809654E0_jp = 0x809654E0; // type:f32
RO_FLT_809654E4_jp = 0x809654E4; // type:f32

// .bss

B_809654F0_jp = 0x809654F0; //

// .text

func_809657A0_jp = 0x809657A0; // type:func
func_809657C4_jp = 0x809657C4; // type:func
func_809657EC_jp = 0x809657EC; // type:func
func_8096595C_jp = 0x8096595C; // type:func
func_80965A4C_jp = 0x80965A4C; // type:func
func_80965A70_jp = 0x80965A70; // type:func
func_80965ACC_jp = 0x80965ACC; // type:func
func_80965B20_jp = 0x80965B20; // type:func

// .data

_0085A400_Profile = 0x80965B40; //
D_80965B64_jp = 0x80965B64; // type:s16
D_80965BBC_jp = 0x80965BBC; // type:s16

// .bss

B_80965C20_jp = 0x80965C20; //

// .text

func_80965C90_jp = 0x80965C90; // type:func
func_80965E38_jp = 0x80965E38; // type:func
func_80965EE0_jp = 0x80965EE0; // type:func
func_80965FF0_jp = 0x80965FF0; // type:func
func_80966088_jp = 0x80966088; // type:func
func_80966120_jp = 0x80966120; // type:func
func_8096628C_jp = 0x8096628C; // type:func
func_80966370_jp = 0x80966370; // type:func

// .data

_0085A8E0_Profile = 0x80966460; //

// .rodata

RO_FLT_80966490_jp = 0x80966490; // type:f32
RO_FLT_80966494_jp = 0x80966494; // type:f32
RO_FLT_80966498_jp = 0x80966498; // type:f32

// .text

func_80966520_jp = 0x80966520; // type:func
func_809666C8_jp = 0x809666C8; // type:func
func_80966788_jp = 0x80966788; // type:func
func_80966898_jp = 0x80966898; // type:func
func_80966930_jp = 0x80966930; // type:func
func_809669D0_jp = 0x809669D0; // type:func
func_80966B40_jp = 0x80966B40; // type:func
func_80966BB8_jp = 0x80966BB8; // type:func

// .data

_0085B170_Profile = 0x80966C30; //

// .rodata

RO_FLT_80966C60_jp = 0x80966C60; // type:f32
RO_FLT_80966C64_jp = 0x80966C64; // type:f32
RO_FLT_80966C68_jp = 0x80966C68; // type:f32
RO_FLT_80966C6C_jp = 0x80966C6C; // type:f32
RO_FLT_80966C70_jp = 0x80966C70; // type:f32
RO_FLT_80966C74_jp = 0x80966C74; // type:f32

// .text

func_80966D10_jp = 0x80966D10; // type:func
func_80966ED0_jp = 0x80966ED0; // type:func
func_80966F90_jp = 0x80966F90; // type:func
func_809670A0_jp = 0x809670A0; // type:func
func_80967138_jp = 0x80967138; // type:func
func_809671D8_jp = 0x809671D8; // type:func
func_8096722C_jp = 0x8096722C; // type:func
func_8096739C_jp = 0x8096739C; // type:func
func_80967428_jp = 0x80967428; // type:func

// .data

_0085B960_Profile = 0x809674C0; //

// .rodata

RO_FLT_809674F0_jp = 0x809674F0; // type:f32
RO_FLT_809674F4_jp = 0x809674F4; // type:f32
RO_FLT_809674F8_jp = 0x809674F8; // type:f32
RO_FLT_809674FC_jp = 0x809674FC; // type:f32
RO_FLT_80967500_jp = 0x80967500; // type:f32
RO_FLT_80967504_jp = 0x80967504; // type:f32

// .text

func_809675B0_jp = 0x809675B0; // type:func
func_80967614_jp = 0x80967614; // type:func
func_80967644_jp = 0x80967644; // type:func
func_80967678_jp = 0x80967678; // type:func
func_809676BC_jp = 0x809676BC; // type:func
func_809676E4_jp = 0x809676E4; // type:func
func_809677A4_jp = 0x809677A4; // type:func

// .data

_0085C200_Profile = 0x80967860; //
D_80967884_jp = 0x80967884; //
D_8096788C_jp = 0x8096788C; //
D_80967894_jp = 0x80967894; //
D_8096789C_jp = 0x8096789C; //
D_809678A4_jp = 0x809678A4; //
D_809678AC_jp = 0x809678AC; //

// .text

func_80967920_jp = 0x80967920; // type:func
func_80967A10_jp = 0x80967A10; // type:func
func_80967A20_jp = 0x80967A20; // type:func
func_80967B50_jp = 0x80967B50; // type:func
func_80967B78_jp = 0x80967B78; // type:func
func_80967B9C_jp = 0x80967B9C; // type:func
func_80967C8C_jp = 0x80967C8C; // type:func
func_80967D04_jp = 0x80967D04; // type:func
func_80967E1C_jp = 0x80967E1C; // type:func
func_80967E98_jp = 0x80967E98; // type:func
func_80968058_jp = 0x80968058; // type:func
func_80968068_jp = 0x80968068; // type:func
func_809680C8_jp = 0x809680C8; // type:func
func_809681A4_jp = 0x809681A4; // type:func
func_80968280_jp = 0x80968280; // type:func
func_80968304_jp = 0x80968304; // type:func
func_80968464_jp = 0x80968464; // type:func
func_809685B8_jp = 0x809685B8; // type:func
func_80968638_jp = 0x80968638; // type:func
func_80968674_jp = 0x80968674; // type:func

// .data

_0085C570_Profile = 0x80968710; //
D_80968734_jp = 0x80968734; // type:s16
D_80968744_jp = 0x80968744; // type:s16
D_80968754_jp = 0x80968754; //
D_80968760_jp = 0x80968760; //
D_8096876C_jp = 0x8096876C; //
D_80968778_jp = 0x80968778; //
D_80968784_jp = 0x80968784; //
D_80968794_jp = 0x80968794; //
D_809687BC_jp = 0x809687BC; //
D_809687C8_jp = 0x809687C8; //

// .rodata

RO_FLT_809687F0_jp = 0x809687F0; // type:f32
RO_FLT_809687F4_jp = 0x809687F4; // type:f32
RO_FLT_809687F8_jp = 0x809687F8; // type:f32
RO_FLT_809687FC_jp = 0x809687FC; // type:f32
RO_FLT_80968800_jp = 0x80968800; // type:f32
RO_FLT_80968804_jp = 0x80968804; // type:f32
RO_FLT_80968808_jp = 0x80968808; // type:f32
RO_FLT_8096880C_jp = 0x8096880C; // type:f32
RO_FLT_80968810_jp = 0x80968810; // type:f32
RO_FLT_80968814_jp = 0x80968814; // type:f32
RO_FLT_80968818_jp = 0x80968818; // type:f32
RO_FLT_8096881C_jp = 0x8096881C; // type:f32
RO_FLT_80968820_jp = 0x80968820; // type:f32
RO_FLT_80968824_jp = 0x80968824; // type:f32
RO_FLT_80968828_jp = 0x80968828; // type:f32
RO_FLT_8096882C_jp = 0x8096882C; // type:f32
RO_FLT_80968830_jp = 0x80968830; // type:f32
RO_FLT_80968834_jp = 0x80968834; // type:f32
RO_FLT_80968838_jp = 0x80968838; // type:f32
RO_FLT_8096883C_jp = 0x8096883C; // type:f32
jtbl_80968840_jp = 0x80968840; // type:jtbl

// .text

func_80968A10_jp = 0x80968A10; // type:func
func_80968AF4_jp = 0x80968AF4; // type:func
func_80968B9C_jp = 0x80968B9C; // type:func
func_80968D08_jp = 0x80968D08; // type:func
func_80968F98_jp = 0x80968F98; // type:func
func_80969040_jp = 0x80969040; // type:func
func_80969114_jp = 0x80969114; // type:func
func_809693EC_jp = 0x809693EC; // type:func
D_80969690_jp = 0x80969690; // type:s16
func_80969800_jp = 0x80969800; // type:func
func_8096983C_jp = 0x8096983C; // type:func
func_809698E8_jp = 0x809698E8; // type:func
func_80969998_jp = 0x80969998; // type:func
func_809699D8_jp = 0x809699D8; // type:func
func_80969DE8_jp = 0x80969DE8; // type:func
func_80969FBC_jp = 0x80969FBC; // type:func
func_80969FD8_jp = 0x80969FD8; // type:func
func_8096A0CC_jp = 0x8096A0CC; // type:func
func_8096A0EC_jp = 0x8096A0EC; // type:func
func_8096A23C_jp = 0x8096A23C; // type:func
func_8096A334_jp = 0x8096A334; // type:func
func_8096A3D8_jp = 0x8096A3D8; // type:func
func_8096A678_jp = 0x8096A678; // type:func
func_8096A77C_jp = 0x8096A77C; // type:func
func_8096A86C_jp = 0x8096A86C; // type:func

// .data

D_8096A8B0_jp = 0x8096A8B0; //
_0085D660_Profile = 0x8096A8BC; //
D_8096A8E0_jp = 0x8096A8E0; //
D_8096A8F0_jp = 0x8096A8F0; //
D_8096A8FC_jp = 0x8096A8FC; // type:s16

// .rodata

RO_STR_8096A900_jp = 0x8096A900; // type:asciz
RO_STR_8096A910_jp = 0x8096A910; // type:asciz
RO_FLT_8096A920_jp = 0x8096A920; // type:f32
RO_FLT_8096A924_jp = 0x8096A924; // type:f32
RO_FLT_8096A928_jp = 0x8096A928; // type:f32
RO_FLT_8096A92C_jp = 0x8096A92C; // type:f32
RO_FLT_8096A930_jp = 0x8096A930; // type:f32
RO_FLT_8096A934_jp = 0x8096A934; // type:f32
RO_FLT_8096A938_jp = 0x8096A938; // type:f32
RO_FLT_8096A93C_jp = 0x8096A93C; // type:f32
RO_FLT_8096A940_jp = 0x8096A940; // type:f32
RO_FLT_8096A944_jp = 0x8096A944; // type:f32
RO_FLT_8096A948_jp = 0x8096A948; // type:f32
RO_FLT_8096A94C_jp = 0x8096A94C; // type:f32
RO_FLT_8096A950_jp = 0x8096A950; // type:f32
RO_FLT_8096A954_jp = 0x8096A954; // type:f32
RO_FLT_8096A958_jp = 0x8096A958; // type:f32
RO_FLT_8096A95C_jp = 0x8096A95C; // type:f32
RO_FLT_8096A960_jp = 0x8096A960; // type:f32
RO_FLT_8096A964_jp = 0x8096A964; // type:f32
RO_FLT_8096A968_jp = 0x8096A968; // type:f32
RO_FLT_8096A96C_jp = 0x8096A96C; // type:f32
RO_FLT_8096A970_jp = 0x8096A970; // type:f32
RO_FLT_8096A974_jp = 0x8096A974; // type:f32
RO_FLT_8096A978_jp = 0x8096A978; // type:f32
RO_FLT_8096A97C_jp = 0x8096A97C; // type:f32

// .bss

B_8096A980_jp = 0x8096A980; //

// .text

func_8096AB90_jp = 0x8096AB90; // type:func
func_8096AC60_jp = 0x8096AC60; // type:func
func_8096ACB8_jp = 0x8096ACB8; // type:func
func_8096AD94_jp = 0x8096AD94; // type:func
func_8096ADC0_jp = 0x8096ADC0; // type:func
func_8096AE18_jp = 0x8096AE18; // type:func
func_8096AE88_jp = 0x8096AE88; // type:func
func_8096AEDC_jp = 0x8096AEDC; // type:func
func_8096AFE8_jp = 0x8096AFE8; // type:func
func_8096B0DC_jp = 0x8096B0DC; // type:func
func_8096B168_jp = 0x8096B168; // type:func
func_8096B1A4_jp = 0x8096B1A4; // type:func
func_8096B2D8_jp = 0x8096B2D8; // type:func
func_8096B398_jp = 0x8096B398; // type:func
func_8096B474_jp = 0x8096B474; // type:func
func_8096B558_jp = 0x8096B558; // type:func
func_8096B664_jp = 0x8096B664; // type:func
func_8096B6A4_jp = 0x8096B6A4; // type:func
func_8096B754_jp = 0x8096B754; // type:func
func_8096B7AC_jp = 0x8096B7AC; // type:func
func_8096B88C_jp = 0x8096B88C; // type:func
func_8096B900_jp = 0x8096B900; // type:func
func_8096B958_jp = 0x8096B958; // type:func
func_8096B9DC_jp = 0x8096B9DC; // type:func
func_8096BB98_jp = 0x8096BB98; // type:func
func_8096BC3C_jp = 0x8096BC3C; // type:func
func_8096BD00_jp = 0x8096BD00; // type:func
func_8096BD30_jp = 0x8096BD30; // type:func
func_8096BD60_jp = 0x8096BD60; // type:func
func_8096BDD0_jp = 0x8096BDD0; // type:func
func_8096BDE8_jp = 0x8096BDE8; // type:func
func_8096BE18_jp = 0x8096BE18; // type:func
func_8096C01C_jp = 0x8096C01C; // type:func
func_8096C174_jp = 0x8096C174; // type:func
func_8096C204_jp = 0x8096C204; // type:func
func_8096C29C_jp = 0x8096C29C; // type:func

// .data

_0085F7D0_Profile = 0x8096C410; //
D_8096C434_jp = 0x8096C434; //
D_8096C444_jp = 0x8096C444; //
D_8096C450_jp = 0x8096C450; //
D_8096C458_jp = 0x8096C458; //
D_8096C46C_jp = 0x8096C46C; //
D_8096C480_jp = 0x8096C480; //
D_8096C488_jp = 0x8096C488; //
D_FLT_8096C490_jp = 0x8096C490; // type:f32
D_FLT_8096C4A0_jp = 0x8096C4A0; // type:f32
D_8096C4B0_jp = 0x8096C4B0; //
D_8096C510_jp = 0x8096C510; //
D_8096C548_jp = 0x8096C548; //
D_8096C550_jp = 0x8096C550; //
D_8096C580_jp = 0x8096C580; //

// .rodata

RO_FLT_8096C600_jp = 0x8096C600; // type:f32
RO_FLT_8096C604_jp = 0x8096C604; // type:f32
RO_FLT_8096C608_jp = 0x8096C608; // type:f32
RO_FLT_8096C60C_jp = 0x8096C60C; // type:f32
RO_FLT_8096C610_jp = 0x8096C610; // type:f32
RO_FLT_8096C614_jp = 0x8096C614; // type:f32

// .text

func_8096C7E0_jp = 0x8096C7E0; // type:func
func_8096C8D0_jp = 0x8096C8D0; // type:func
func_8096C8FC_jp = 0x8096C8FC; // type:func
func_8096C970_jp = 0x8096C970; // type:func
func_8096CA0C_jp = 0x8096CA0C; // type:func
func_8096CB84_jp = 0x8096CB84; // type:func
func_8096CC30_jp = 0x8096CC30; // type:func
func_8096CC7C_jp = 0x8096CC7C; // type:func
func_8096CCD4_jp = 0x8096CCD4; // type:func
func_8096CDE8_jp = 0x8096CDE8; // type:func
func_8096CE9C_jp = 0x8096CE9C; // type:func
func_8096CF40_jp = 0x8096CF40; // type:func
func_8096CFF4_jp = 0x8096CFF4; // type:func
func_8096D070_jp = 0x8096D070; // type:func
func_8096D0E0_jp = 0x8096D0E0; // type:func
func_8096D194_jp = 0x8096D194; // type:func
func_8096D1F0_jp = 0x8096D1F0; // type:func
func_8096D28C_jp = 0x8096D28C; // type:func
func_8096D314_jp = 0x8096D314; // type:func

// .data

_00861420_Profile = 0x8096D4A0; //
D_8096D4C4_jp = 0x8096D4C4; //
D_8096D518_jp = 0x8096D518; //
D_8096D52C_jp = 0x8096D52C; //
D_8096D534_jp = 0x8096D534; // type:s16
D_8096D53C_jp = 0x8096D53C; //
D_8096D544_jp = 0x8096D544; // type:s16
D_FLT_8096D548_jp = 0x8096D548; // type:f32
D_8096D550_jp = 0x8096D550; //
D_8096D568_jp = 0x8096D568; //
D_8096D5A0_jp = 0x8096D5A0; //
D_8096D5F8_jp = 0x8096D5F8; //
D_8096D648_jp = 0x8096D648; //
D_8096D650_jp = 0x8096D650; //
D_8096D658_jp = 0x8096D658; //

// .text

func_8096D7A0_jp = 0x8096D7A0; // type:func
func_8096D860_jp = 0x8096D860; // type:func
func_8096D920_jp = 0x8096D920; // type:func
func_8096DA44_jp = 0x8096DA44; // type:func

// .data

_008623E0_Profile = 0x8096DBA0; //
D_8096DBC4_jp = 0x8096DBC4; //

// .text

func_8096DC30_jp = 0x8096DC30; // type:func
func_8096DDAC_jp = 0x8096DDAC; // type:func
func_8096DF58_jp = 0x8096DF58; // type:func
func_8096E1A4_jp = 0x8096E1A4; // type:func
func_8096E274_jp = 0x8096E274; // type:func
func_8096E2EC_jp = 0x8096E2EC; // type:func
func_8096E388_jp = 0x8096E388; // type:func
func_8096E638_jp = 0x8096E638; // type:func
func_8096E674_jp = 0x8096E674; // type:func
func_8096E8DC_jp = 0x8096E8DC; // type:func
func_8096EA18_jp = 0x8096EA18; // type:func
func_8096ED34_jp = 0x8096ED34; // type:func
func_8096ED6C_jp = 0x8096ED6C; // type:func
func_8096EE0C_jp = 0x8096EE0C; // type:func
func_8096EE74_jp = 0x8096EE74; // type:func
func_8096EF44_jp = 0x8096EF44; // type:func
func_8096F0BC_jp = 0x8096F0BC; // type:func
func_8096F0EC_jp = 0x8096F0EC; // type:func
func_8096F1E4_jp = 0x8096F1E4; // type:func
func_8096F298_jp = 0x8096F298; // type:func
func_8096F348_jp = 0x8096F348; // type:func
func_8096F654_jp = 0x8096F654; // type:func
func_8096F8C4_jp = 0x8096F8C4; // type:func
func_8096FAAC_jp = 0x8096FAAC; // type:func
func_8096FBDC_jp = 0x8096FBDC; // type:func
func_8096FD08_jp = 0x8096FD08; // type:func
func_8096FDF0_jp = 0x8096FDF0; // type:func
func_8096FF24_jp = 0x8096FF24; // type:func
func_809700F4_jp = 0x809700F4; // type:func
func_80970318_jp = 0x80970318; // type:func
func_8097033C_jp = 0x8097033C; // type:func
func_809703C4_jp = 0x809703C4; // type:func
func_80970468_jp = 0x80970468; // type:func
func_80970954_jp = 0x80970954; // type:func
func_80970968_jp = 0x80970968; // type:func
func_80970A68_jp = 0x80970A68; // type:func
func_80970A90_jp = 0x80970A90; // type:func
func_80970CAC_jp = 0x80970CAC; // type:func
func_80970DA4_jp = 0x80970DA4; // type:func
func_8097100C_jp = 0x8097100C; // type:func
func_80971040_jp = 0x80971040; // type:func
func_80971054_jp = 0x80971054; // type:func
func_809710F0_jp = 0x809710F0; // type:func
func_8097112C_jp = 0x8097112C; // type:func
func_80971354_jp = 0x80971354; // type:func
func_8097158C_jp = 0x8097158C; // type:func
func_80971608_jp = 0x80971608; // type:func
func_80971644_jp = 0x80971644; // type:func
func_80971780_jp = 0x80971780; // type:func
func_80971894_jp = 0x80971894; // type:func
func_80971954_jp = 0x80971954; // type:func
func_809719FC_jp = 0x809719FC; // type:func
func_80971B38_jp = 0x80971B38; // type:func

// .data

_00862870_Profile = 0x80971C40; //
D_80971C64_jp = 0x80971C64; //
D_80971C74_jp = 0x80971C74; //
D_80971C80_jp = 0x80971C80; //
D_80971C88_jp = 0x80971C88; // type:u16
D_FLT_80971CA0_jp = 0x80971CA0; // type:f32
D_FLT_80971CE8_jp = 0x80971CE8; // type:f32
D_FLT_80971CEC_jp = 0x80971CEC; // type:f32
D_FLT_80971CF0_jp = 0x80971CF0; // type:f32
D_80971CF4_jp = 0x80971CF4; // type:s16
D_80971CF8_jp = 0x80971CF8; //
D_80971D08_jp = 0x80971D08; //

// .rodata

RO_STR_80971D10_jp = 0x80971D10; // type:asciz
RO_STR_80971D20_jp = 0x80971D20; // type:asciz
RO_STR_80971D30_jp = 0x80971D30; // type:asciz
RO_FLT_80971D40_jp = 0x80971D40; // type:f32
RO_FLT_80971D44_jp = 0x80971D44; // type:f32
RO_FLT_80971D48_jp = 0x80971D48; // type:f32
RO_FLT_80971D4C_jp = 0x80971D4C; // type:f32
RO_FLT_80971D50_jp = 0x80971D50; // type:f32
RO_FLT_80971D54_jp = 0x80971D54; // type:f32
RO_FLT_80971D58_jp = 0x80971D58; // type:f32
RO_FLT_80971D5C_jp = 0x80971D5C; // type:f32
RO_FLT_80971D60_jp = 0x80971D60; // type:f32
RO_FLT_80971D64_jp = 0x80971D64; // type:f32
RO_FLT_80971D68_jp = 0x80971D68; // type:f32
RO_FLT_80971D6C_jp = 0x80971D6C; // type:f32
RO_FLT_80971D70_jp = 0x80971D70; // type:f32
RO_FLT_80971D74_jp = 0x80971D74; // type:f32
RO_FLT_80971D78_jp = 0x80971D78; // type:f32
RO_FLT_80971D7C_jp = 0x80971D7C; // type:f32
RO_FLT_80971D80_jp = 0x80971D80; // type:f32
RO_FLT_80971D84_jp = 0x80971D84; // type:f32
RO_FLT_80971D88_jp = 0x80971D88; // type:f32
RO_FLT_80971D8C_jp = 0x80971D8C; // type:f32
RO_FLT_80971D90_jp = 0x80971D90; // type:f32
RO_FLT_80971D94_jp = 0x80971D94; // type:f32
RO_FLT_80971D98_jp = 0x80971D98; // type:f32
RO_FLT_80971D9C_jp = 0x80971D9C; // type:f32
RO_FLT_80971DA0_jp = 0x80971DA0; // type:f32
RO_FLT_80971DA4_jp = 0x80971DA4; // type:f32
RO_FLT_80971DA8_jp = 0x80971DA8; // type:f32
RO_FLT_80971DAC_jp = 0x80971DAC; // type:f32
RO_FLT_80971DB0_jp = 0x80971DB0; // type:f32
RO_FLT_80971DB4_jp = 0x80971DB4; // type:f32
RO_FLT_80971DB8_jp = 0x80971DB8; // type:f32
RO_FLT_80971DBC_jp = 0x80971DBC; // type:f32
RO_FLT_80971DC0_jp = 0x80971DC0; // type:f32
RO_FLT_80971DC4_jp = 0x80971DC4; // type:f32
RO_FLT_80971DC8_jp = 0x80971DC8; // type:f32
RO_FLT_80971DCC_jp = 0x80971DCC; // type:f32
RO_FLT_80971DD0_jp = 0x80971DD0; // type:f32
RO_FLT_80971DD4_jp = 0x80971DD4; // type:f32
RO_FLT_80971DD8_jp = 0x80971DD8; // type:f32
RO_FLT_80971DDC_jp = 0x80971DDC; // type:f32
RO_FLT_80971DE0_jp = 0x80971DE0; // type:f32
RO_FLT_80971DE4_jp = 0x80971DE4; // type:f32
RO_FLT_80971DE8_jp = 0x80971DE8; // type:f32
RO_FLT_80971DEC_jp = 0x80971DEC; // type:f32
RO_FLT_80971DF0_jp = 0x80971DF0; // type:f32
RO_FLT_80971DF4_jp = 0x80971DF4; // type:f32
RO_FLT_80971DF8_jp = 0x80971DF8; // type:f32
RO_FLT_80971DFC_jp = 0x80971DFC; // type:f32
RO_FLT_80971E00_jp = 0x80971E00; // type:f32
RO_FLT_80971E04_jp = 0x80971E04; // type:f32
RO_FLT_80971E08_jp = 0x80971E08; // type:f32
RO_FLT_80971E0C_jp = 0x80971E0C; // type:f32
RO_FLT_80971E10_jp = 0x80971E10; // type:f32
RO_FLT_80971E14_jp = 0x80971E14; // type:f32
RO_FLT_80971E18_jp = 0x80971E18; // type:f32
RO_FLT_80971E1C_jp = 0x80971E1C; // type:f32
RO_FLT_80971E20_jp = 0x80971E20; // type:f32
RO_FLT_80971E24_jp = 0x80971E24; // type:f32
RO_FLT_80971E28_jp = 0x80971E28; // type:f32
RO_FLT_80971E2C_jp = 0x80971E2C; // type:f32
RO_FLT_80971E30_jp = 0x80971E30; // type:f32

// .text

func_80972290_jp = 0x80972290; // type:func
func_809724D8_jp = 0x809724D8; // type:func
func_80972528_jp = 0x80972528; // type:func
func_80972564_jp = 0x80972564; // type:func
func_80972720_jp = 0x80972720; // type:func
func_809727D4_jp = 0x809727D4; // type:func

// .data

_00866ED0_Profile = 0x80972940; //

// .rodata

RO_FLT_80972970_jp = 0x80972970; // type:f32
RO_FLT_80972974_jp = 0x80972974; // type:f32
RO_FLT_80972978_jp = 0x80972978; // type:f32
RO_FLT_8097297C_jp = 0x8097297C; // type:f32

// .text

func_809729E0_jp = 0x809729E0; // type:func
func_80972A84_jp = 0x80972A84; // type:func
func_80972AB0_jp = 0x80972AB0; // type:func
func_80972B20_jp = 0x80972B20; // type:func
func_80972B98_jp = 0x80972B98; // type:func

// .data

_00867620_Profile = 0x80972C10; //
D_80972C34_jp = 0x80972C34; //
D_80972C3C_jp = 0x80972C3C; // type:u16

// .text

func_80972C80_jp = 0x80972C80; // type:func
func_80972D20_jp = 0x80972D20; // type:func
func_80972D4C_jp = 0x80972D4C; // type:func
func_80972E14_jp = 0x80972E14; // type:func

// .data

D_80972EC0_jp = 0x80972EC0; //
D_80972F40_jp = 0x80972F40; //
_008678C0_Profile = 0x80972FA0; //

// .rodata

RO_FLT_80972FD0_jp = 0x80972FD0; // type:f32

// .text

func_80973020_jp = 0x80973020; // type:func
func_80973030_jp = 0x80973030; // type:func
func_80973040_jp = 0x80973040; // type:func
func_80973050_jp = 0x80973050; // type:func

// .data

_00867C60_Profile = 0x80973060; //

// .text

func_809730C0_jp = 0x809730C0; // type:func
func_809730D0_jp = 0x809730D0; // type:func
func_809730E0_jp = 0x809730E0; // type:func
func_809730F0_jp = 0x809730F0; // type:func

// .data

_00867D00_Profile = 0x80973100; //

// .text

func_80973160_jp = 0x80973160; // type:func
func_80973280_jp = 0x80973280; // type:func
func_8097335C_jp = 0x8097335C; // type:func
func_809733C8_jp = 0x809733C8; // type:func
func_809733EC_jp = 0x809733EC; // type:func

// .data

_00867DA0_Profile = 0x80973400; //
D_80973424_jp = 0x80973424; //

// .text

func_809735B0_jp = 0x809735B0; // type:func
func_8097366C_jp = 0x8097366C; // type:func
func_80973728_jp = 0x80973728; // type:func
func_8097381C_jp = 0x8097381C; // type:func
func_80973870_jp = 0x80973870; // type:func
func_809738C4_jp = 0x809738C4; // type:func
func_809739A0_jp = 0x809739A0; // type:func
func_80973AD8_jp = 0x80973AD8; // type:func
func_80973B8C_jp = 0x80973B8C; // type:func
func_80973BF4_jp = 0x80973BF4; // type:func
func_80973CE8_jp = 0x80973CE8; // type:func
func_80973E6C_jp = 0x80973E6C; // type:func
func_80973EAC_jp = 0x80973EAC; // type:func
func_80973F50_jp = 0x80973F50; // type:func
func_80973FAC_jp = 0x80973FAC; // type:func
func_809740AC_jp = 0x809740AC; // type:func
func_809740D4_jp = 0x809740D4; // type:func
func_80974184_jp = 0x80974184; // type:func
func_809741B4_jp = 0x809741B4; // type:func
func_80974270_jp = 0x80974270; // type:func
func_809742A0_jp = 0x809742A0; // type:func
func_809742F4_jp = 0x809742F4; // type:func
func_809743A4_jp = 0x809743A4; // type:func
func_809744A0_jp = 0x809744A0; // type:func
func_809744E0_jp = 0x809744E0; // type:func
func_80974610_jp = 0x80974610; // type:func
func_809746BC_jp = 0x809746BC; // type:func
func_80974734_jp = 0x80974734; // type:func
func_809747BC_jp = 0x809747BC; // type:func
func_80974884_jp = 0x80974884; // type:func
func_809749D0_jp = 0x809749D0; // type:func
func_80974CFC_jp = 0x80974CFC; // type:func
func_80974D88_jp = 0x80974D88; // type:func
func_80974F08_jp = 0x80974F08; // type:func
func_80974F4C_jp = 0x80974F4C; // type:func
func_80974FD8_jp = 0x80974FD8; // type:func
func_809750E0_jp = 0x809750E0; // type:func
func_80975158_jp = 0x80975158; // type:func
func_80975190_jp = 0x80975190; // type:func
func_809751BC_jp = 0x809751BC; // type:func
func_80975300_jp = 0x80975300; // type:func
func_80975320_jp = 0x80975320; // type:func
func_80975370_jp = 0x80975370; // type:func
func_809755A0_jp = 0x809755A0; // type:func
func_809757B4_jp = 0x809757B4; // type:func
func_809757D0_jp = 0x809757D0; // type:func
func_80975954_jp = 0x80975954; // type:func
func_80975980_jp = 0x80975980; // type:func
func_809759B0_jp = 0x809759B0; // type:func
func_80975A08_jp = 0x80975A08; // type:func
func_80975A60_jp = 0x80975A60; // type:func
func_80975AEC_jp = 0x80975AEC; // type:func
func_80975C38_jp = 0x80975C38; // type:func
func_80975CBC_jp = 0x80975CBC; // type:func
func_80975CD8_jp = 0x80975CD8; // type:func
func_80975DBC_jp = 0x80975DBC; // type:func
func_80975E20_jp = 0x80975E20; // type:func
func_80975F90_jp = 0x80975F90; // type:func
func_80975FB8_jp = 0x80975FB8; // type:func
func_80976158_jp = 0x80976158; // type:func
func_809761C0_jp = 0x809761C0; // type:func
func_80976258_jp = 0x80976258; // type:func
func_80976284_jp = 0x80976284; // type:func
func_809763DC_jp = 0x809763DC; // type:func
func_80976434_jp = 0x80976434; // type:func
func_80976588_jp = 0x80976588; // type:func
func_80976604_jp = 0x80976604; // type:func
func_80976670_jp = 0x80976670; // type:func
func_809766B8_jp = 0x809766B8; // type:func
func_80976714_jp = 0x80976714; // type:func
func_809767D4_jp = 0x809767D4; // type:func
func_80976838_jp = 0x80976838; // type:func
func_80976870_jp = 0x80976870; // type:func
func_809769A0_jp = 0x809769A0; // type:func
func_80976A64_jp = 0x80976A64; // type:func
func_80976B28_jp = 0x80976B28; // type:func
func_80976C74_jp = 0x80976C74; // type:func
func_80976D9C_jp = 0x80976D9C; // type:func
func_80976E90_jp = 0x80976E90; // type:func
func_80976F74_jp = 0x80976F74; // type:func
func_8097703C_jp = 0x8097703C; // type:func
func_809770B4_jp = 0x809770B4; // type:func
func_80977194_jp = 0x80977194; // type:func
func_809771DC_jp = 0x809771DC; // type:func
func_80977274_jp = 0x80977274; // type:func
func_8097736C_jp = 0x8097736C; // type:func
func_8097742C_jp = 0x8097742C; // type:func
func_80977468_jp = 0x80977468; // type:func
func_809774A0_jp = 0x809774A0; // type:func
func_809774DC_jp = 0x809774DC; // type:func
func_80977520_jp = 0x80977520; // type:func
func_80977544_jp = 0x80977544; // type:func
func_8097755C_jp = 0x8097755C; // type:func
func_80977588_jp = 0x80977588; // type:func
func_8097760C_jp = 0x8097760C; // type:func
func_80977644_jp = 0x80977644; // type:func
func_809776B4_jp = 0x809776B4; // type:func
func_8097776C_jp = 0x8097776C; // type:func
func_809777B0_jp = 0x809777B0; // type:func
func_8097782C_jp = 0x8097782C; // type:func
func_809778D0_jp = 0x809778D0; // type:func
func_80977910_jp = 0x80977910; // type:func
func_80977970_jp = 0x80977970; // type:func
func_80977A00_jp = 0x80977A00; // type:func
func_80977AB0_jp = 0x80977AB0; // type:func
func_80977B0C_jp = 0x80977B0C; // type:func
func_80977B8C_jp = 0x80977B8C; // type:func
func_80977C4C_jp = 0x80977C4C; // type:func
func_80977C90_jp = 0x80977C90; // type:func
func_80977CDC_jp = 0x80977CDC; // type:func
func_80977D80_jp = 0x80977D80; // type:func
func_80977E18_jp = 0x80977E18; // type:func
func_80977E60_jp = 0x80977E60; // type:func
func_80977F04_jp = 0x80977F04; // type:func
func_80978000_jp = 0x80978000; // type:func
func_80978064_jp = 0x80978064; // type:func
func_809780A4_jp = 0x809780A4; // type:func
func_809780E4_jp = 0x809780E4; // type:func
func_8097866C_jp = 0x8097866C; // type:func
func_809786A0_jp = 0x809786A0; // type:func
func_809786DC_jp = 0x809786DC; // type:func
func_8097875C_jp = 0x8097875C; // type:func
func_80978800_jp = 0x80978800; // type:func
func_80978874_jp = 0x80978874; // type:func
func_809788E8_jp = 0x809788E8; // type:func
func_80978918_jp = 0x80978918; // type:func
func_80978960_jp = 0x80978960; // type:func
func_809789A8_jp = 0x809789A8; // type:func
func_80978AFC_jp = 0x80978AFC; // type:func
func_80978D3C_jp = 0x80978D3C; // type:func
func_80978DE0_jp = 0x80978DE0; // type:func
func_80978E04_jp = 0x80978E04; // type:func
func_80978E80_jp = 0x80978E80; // type:func
func_80978EE8_jp = 0x80978EE8; // type:func
func_80978F0C_jp = 0x80978F0C; // type:func
func_80978F88_jp = 0x80978F88; // type:func
func_80979004_jp = 0x80979004; // type:func
func_80979050_jp = 0x80979050; // type:func
func_80979098_jp = 0x80979098; // type:func
func_809790C8_jp = 0x809790C8; // type:func
func_8097915C_jp = 0x8097915C; // type:func
func_809791C8_jp = 0x809791C8; // type:func
func_8097924C_jp = 0x8097924C; // type:func
func_8097927C_jp = 0x8097927C; // type:func
func_80979310_jp = 0x80979310; // type:func
func_8097937C_jp = 0x8097937C; // type:func
func_80979404_jp = 0x80979404; // type:func
func_80979434_jp = 0x80979434; // type:func
func_80979480_jp = 0x80979480; // type:func
func_809794EC_jp = 0x809794EC; // type:func
func_80979568_jp = 0x80979568; // type:func
func_80979598_jp = 0x80979598; // type:func
func_80979608_jp = 0x80979608; // type:func
func_8097965C_jp = 0x8097965C; // type:func
func_809796EC_jp = 0x809796EC; // type:func
func_809798A8_jp = 0x809798A8; // type:func
func_80979AB4_jp = 0x80979AB4; // type:func
func_80979B78_jp = 0x80979B78; // type:func
func_80979BD8_jp = 0x80979BD8; // type:func
func_80979C04_jp = 0x80979C04; // type:func
func_80979D08_jp = 0x80979D08; // type:func
func_80979E5C_jp = 0x80979E5C; // type:func
func_80979ECC_jp = 0x80979ECC; // type:func
func_80979F00_jp = 0x80979F00; // type:func
func_8097A0D0_jp = 0x8097A0D0; // type:func
func_8097A0FC_jp = 0x8097A0FC; // type:func
func_8097A140_jp = 0x8097A140; // type:func
func_8097A1CC_jp = 0x8097A1CC; // type:func
func_8097A22C_jp = 0x8097A22C; // type:func
func_8097A290_jp = 0x8097A290; // type:func
func_8097A2F8_jp = 0x8097A2F8; // type:func
func_8097A334_jp = 0x8097A334; // type:func
func_8097A3A0_jp = 0x8097A3A0; // type:func
func_8097A3D8_jp = 0x8097A3D8; // type:func
func_8097A408_jp = 0x8097A408; // type:func
func_8097A43C_jp = 0x8097A43C; // type:func
func_8097A4BC_jp = 0x8097A4BC; // type:func
func_8097A4F0_jp = 0x8097A4F0; // type:func
func_8097A528_jp = 0x8097A528; // type:func
func_8097A61C_jp = 0x8097A61C; // type:func
func_8097A670_jp = 0x8097A670; // type:func
func_8097A6A4_jp = 0x8097A6A4; // type:func
func_8097A740_jp = 0x8097A740; // type:func
func_8097A770_jp = 0x8097A770; // type:func
func_8097A7A4_jp = 0x8097A7A4; // type:func
func_8097A7F0_jp = 0x8097A7F0; // type:func
func_8097A828_jp = 0x8097A828; // type:func
func_8097A8D8_jp = 0x8097A8D8; // type:func
func_8097A940_jp = 0x8097A940; // type:func
func_8097AA1C_jp = 0x8097AA1C; // type:func
func_8097AA58_jp = 0x8097AA58; // type:func
func_8097AAC8_jp = 0x8097AAC8; // type:func
func_8097AAF8_jp = 0x8097AAF8; // type:func
func_8097AB90_jp = 0x8097AB90; // type:func
func_8097AC60_jp = 0x8097AC60; // type:func
func_8097ACE0_jp = 0x8097ACE0; // type:func
func_8097AD14_jp = 0x8097AD14; // type:func
func_8097ADC4_jp = 0x8097ADC4; // type:func
func_8097ADFC_jp = 0x8097ADFC; // type:func
func_8097AE6C_jp = 0x8097AE6C; // type:func
func_8097AEA0_jp = 0x8097AEA0; // type:func
func_8097AEE0_jp = 0x8097AEE0; // type:func
func_8097AF10_jp = 0x8097AF10; // type:func
func_8097AF8C_jp = 0x8097AF8C; // type:func
func_8097B000_jp = 0x8097B000; // type:func
func_8097B030_jp = 0x8097B030; // type:func
func_8097B0A0_jp = 0x8097B0A0; // type:func
func_8097B0CC_jp = 0x8097B0CC; // type:func
func_8097B0FC_jp = 0x8097B0FC; // type:func
func_8097B1D0_jp = 0x8097B1D0; // type:func
func_8097B1F8_jp = 0x8097B1F8; // type:func
func_8097B264_jp = 0x8097B264; // type:func
func_8097B2C4_jp = 0x8097B2C4; // type:func
func_8097B314_jp = 0x8097B314; // type:func
func_8097B37C_jp = 0x8097B37C; // type:func
func_8097B404_jp = 0x8097B404; // type:func
func_8097B418_jp = 0x8097B418; // type:func
func_8097B47C_jp = 0x8097B47C; // type:func
func_8097B4AC_jp = 0x8097B4AC; // type:func
func_8097B5C0_jp = 0x8097B5C0; // type:func
func_8097B620_jp = 0x8097B620; // type:func
func_8097B6B0_jp = 0x8097B6B0; // type:func
func_8097B718_jp = 0x8097B718; // type:func
func_8097B818_jp = 0x8097B818; // type:func
func_8097B854_jp = 0x8097B854; // type:func
func_8097B908_jp = 0x8097B908; // type:func
func_8097B96C_jp = 0x8097B96C; // type:func
func_8097B9C0_jp = 0x8097B9C0; // type:func
func_8097BA48_jp = 0x8097BA48; // type:func
func_8097BA5C_jp = 0x8097BA5C; // type:func
func_8097BAE4_jp = 0x8097BAE4; // type:func
func_8097BB14_jp = 0x8097BB14; // type:func
func_8097BB40_jp = 0x8097BB40; // type:func
func_8097BB70_jp = 0x8097BB70; // type:func
func_8097BBA0_jp = 0x8097BBA0; // type:func
func_8097BBD4_jp = 0x8097BBD4; // type:func
func_8097BC78_jp = 0x8097BC78; // type:func
func_8097BCC4_jp = 0x8097BCC4; // type:func
func_8097BCF8_jp = 0x8097BCF8; // type:func
func_8097BD54_jp = 0x8097BD54; // type:func
func_8097BD84_jp = 0x8097BD84; // type:func
func_8097BDBC_jp = 0x8097BDBC; // type:func
func_8097BE3C_jp = 0x8097BE3C; // type:func
func_8097BE6C_jp = 0x8097BE6C; // type:func
func_8097BE90_jp = 0x8097BE90; // type:func
func_8097BF90_jp = 0x8097BF90; // type:func
func_8097C00C_jp = 0x8097C00C; // type:func
func_8097C088_jp = 0x8097C088; // type:func
func_8097C148_jp = 0x8097C148; // type:func
func_8097C180_jp = 0x8097C180; // type:func
func_8097C1E8_jp = 0x8097C1E8; // type:func
func_8097C3EC_jp = 0x8097C3EC; // type:func
func_8097C61C_jp = 0x8097C61C; // type:func
func_8097C930_jp = 0x8097C930; // type:func
func_8097CA48_jp = 0x8097CA48; // type:func
func_8097CBD0_jp = 0x8097CBD0; // type:func
func_8097CC34_jp = 0x8097CC34; // type:func
func_8097CC5C_jp = 0x8097CC5C; // type:func
func_8097CD50_jp = 0x8097CD50; // type:func
func_8097CDE8_jp = 0x8097CDE8; // type:func
func_8097CFB0_jp = 0x8097CFB0; // type:func
func_8097D048_jp = 0x8097D048; // type:func
func_8097D110_jp = 0x8097D110; // type:func
func_8097D400_jp = 0x8097D400; // type:func
func_8097D438_jp = 0x8097D438; // type:func
func_8097D460_jp = 0x8097D460; // type:func
func_8097D520_jp = 0x8097D520; // type:func
func_8097D8C8_jp = 0x8097D8C8; // type:func
func_8097DAFC_jp = 0x8097DAFC; // type:func
func_8097DB2C_jp = 0x8097DB2C; // type:func
func_8097DB60_jp = 0x8097DB60; // type:func
func_8097DBA0_jp = 0x8097DBA0; // type:func
func_8097DBD0_jp = 0x8097DBD0; // type:func
func_8097DD60_jp = 0x8097DD60; // type:func
func_8097DDBC_jp = 0x8097DDBC; // type:func
func_8097DE54_jp = 0x8097DE54; // type:func
func_8097DEB0_jp = 0x8097DEB0; // type:func
func_8097DEDC_jp = 0x8097DEDC; // type:func
func_8097DF0C_jp = 0x8097DF0C; // type:func
func_8097DF78_jp = 0x8097DF78; // type:func
func_8097DFA8_jp = 0x8097DFA8; // type:func
func_8097E080_jp = 0x8097E080; // type:func
func_8097E0B0_jp = 0x8097E0B0; // type:func
func_8097E0F0_jp = 0x8097E0F0; // type:func
func_8097E158_jp = 0x8097E158; // type:func
func_8097E1E4_jp = 0x8097E1E4; // type:func
func_8097E254_jp = 0x8097E254; // type:func
func_8097E35C_jp = 0x8097E35C; // type:func
func_8097E434_jp = 0x8097E434; // type:func
func_8097E464_jp = 0x8097E464; // type:func
func_8097E520_jp = 0x8097E520; // type:func
func_8097E5C4_jp = 0x8097E5C4; // type:func
func_8097E5F4_jp = 0x8097E5F4; // type:func
func_8097E63C_jp = 0x8097E63C; // type:func
func_8097E6C0_jp = 0x8097E6C0; // type:func
func_8097E71C_jp = 0x8097E71C; // type:func
func_8097E74C_jp = 0x8097E74C; // type:func
func_8097E770_jp = 0x8097E770; // type:func
func_8097E7BC_jp = 0x8097E7BC; // type:func
func_8097E7F4_jp = 0x8097E7F4; // type:func
func_8097E860_jp = 0x8097E860; // type:func
func_8097E8A0_jp = 0x8097E8A0; // type:func
func_8097E8E8_jp = 0x8097E8E8; // type:func
func_8097E928_jp = 0x8097E928; // type:func
func_8097E960_jp = 0x8097E960; // type:func
func_8097E9B8_jp = 0x8097E9B8; // type:func
func_8097EA90_jp = 0x8097EA90; // type:func
func_8097EAF4_jp = 0x8097EAF4; // type:func
func_8097EB24_jp = 0x8097EB24; // type:func
func_8097EB54_jp = 0x8097EB54; // type:func
func_8097EC28_jp = 0x8097EC28; // type:func
func_8097ECC8_jp = 0x8097ECC8; // type:func
func_8097ECF8_jp = 0x8097ECF8; // type:func
func_8097ED30_jp = 0x8097ED30; // type:func
func_8097ED70_jp = 0x8097ED70; // type:func
func_8097EE3C_jp = 0x8097EE3C; // type:func
func_8097EE90_jp = 0x8097EE90; // type:func
func_8097EEC0_jp = 0x8097EEC0; // type:func
func_8097EF38_jp = 0x8097EF38; // type:func
func_8097EF7C_jp = 0x8097EF7C; // type:func
func_8097EFAC_jp = 0x8097EFAC; // type:func
func_8097EFF4_jp = 0x8097EFF4; // type:func
func_8097F030_jp = 0x8097F030; // type:func
func_8097F060_jp = 0x8097F060; // type:func
func_8097F084_jp = 0x8097F084; // type:func
func_8097F0BC_jp = 0x8097F0BC; // type:func
func_8097F0E4_jp = 0x8097F0E4; // type:func
func_8097F108_jp = 0x8097F108; // type:func
func_8097F148_jp = 0x8097F148; // type:func
func_8097F1C0_jp = 0x8097F1C0; // type:func
func_8097F230_jp = 0x8097F230; // type:func
func_8097F27C_jp = 0x8097F27C; // type:func
func_8097F358_jp = 0x8097F358; // type:func
func_8097F3A8_jp = 0x8097F3A8; // type:func
func_8097F418_jp = 0x8097F418; // type:func
func_8097F450_jp = 0x8097F450; // type:func
func_8097F47C_jp = 0x8097F47C; // type:func
func_8097F520_jp = 0x8097F520; // type:func
func_8097F94C_jp = 0x8097F94C; // type:func
func_8097FA44_jp = 0x8097FA44; // type:func
func_8097FB5C_jp = 0x8097FB5C; // type:func
func_8097FBAC_jp = 0x8097FBAC; // type:func
func_8097FC44_jp = 0x8097FC44; // type:func
func_8097FD50_jp = 0x8097FD50; // type:func
func_8097FD78_jp = 0x8097FD78; // type:func
func_8097FDBC_jp = 0x8097FDBC; // type:func
func_8097FDF0_jp = 0x8097FDF0; // type:func
func_8097FE80_jp = 0x8097FE80; // type:func
func_8097FF14_jp = 0x8097FF14; // type:func
func_8097FF78_jp = 0x8097FF78; // type:func
func_8097FFD0_jp = 0x8097FFD0; // type:func
func_80980014_jp = 0x80980014; // type:func
func_809800CC_jp = 0x809800CC; // type:func
func_80980168_jp = 0x80980168; // type:func
func_8098026C_jp = 0x8098026C; // type:func
func_80980328_jp = 0x80980328; // type:func
func_80980510_jp = 0x80980510; // type:func
func_809805C0_jp = 0x809805C0; // type:func
func_80980624_jp = 0x80980624; // type:func
func_80980764_jp = 0x80980764; // type:func
func_80980830_jp = 0x80980830; // type:func
func_80980950_jp = 0x80980950; // type:func
func_809809FC_jp = 0x809809FC; // type:func
func_80980A78_jp = 0x80980A78; // type:func
func_80980AE8_jp = 0x80980AE8; // type:func
func_80980BA4_jp = 0x80980BA4; // type:func
func_80980C2C_jp = 0x80980C2C; // type:func
func_80980C58_jp = 0x80980C58; // type:func
func_80980C84_jp = 0x80980C84; // type:func
func_80980CB0_jp = 0x80980CB0; // type:func
func_80980CDC_jp = 0x80980CDC; // type:func
func_80980D74_jp = 0x80980D74; // type:func
func_80981018_jp = 0x80981018; // type:func
func_809810A0_jp = 0x809810A0; // type:func
func_809811E8_jp = 0x809811E8; // type:func
func_80981270_jp = 0x80981270; // type:func
func_8098146C_jp = 0x8098146C; // type:func
func_809814CC_jp = 0x809814CC; // type:func
func_80981520_jp = 0x80981520; // type:func
func_8098154C_jp = 0x8098154C; // type:func
func_80981594_jp = 0x80981594; // type:func
func_809815C0_jp = 0x809815C0; // type:func
func_80981738_jp = 0x80981738; // type:func
func_80981838_jp = 0x80981838; // type:func

// .data

D_80981940_jp = 0x80981940; //
_008681F0_Profile = 0x8098194C; //
D_80981970_jp = 0x80981970; //
D_80981974_jp = 0x80981974; //
D_809820C4_jp = 0x809820C4; //
D_809820CC_jp = 0x809820CC; //
D_809821A4_jp = 0x809821A4; //
D_809821B0_jp = 0x809821B0; //
D_809821C0_jp = 0x809821C0; //
D_809821CC_jp = 0x809821CC; //
D_80982578_jp = 0x80982578; //
D_80982924_jp = 0x80982924; //
D_80982940_jp = 0x80982940; //
D_8098295C_jp = 0x8098295C; //
D_80982978_jp = 0x80982978; //
D_80982994_jp = 0x80982994; //
D_FLT_809829A4_jp = 0x809829A4; // type:f32
D_809829C8_jp = 0x809829C8; //
D_809829E0_jp = 0x809829E0; //
D_809829F8_jp = 0x809829F8; //
D_80982A00_jp = 0x80982A00; //
D_80982A08_jp = 0x80982A08; //
D_80982A10_jp = 0x80982A10; //
D_80982A18_jp = 0x80982A18; //
D_80982A20_jp = 0x80982A20; //
D_80982A28_jp = 0x80982A28; //
D_80982A44_jp = 0x80982A44; //
D_80982A4C_jp = 0x80982A4C; //
D_80982A58_jp = 0x80982A58; //
D_80982A60_jp = 0x80982A60; //
D_80982A70_jp = 0x80982A70; //
D_80982A7C_jp = 0x80982A7C; //
D_80982A84_jp = 0x80982A84; //
D_80982A94_jp = 0x80982A94; //
D_80982AA0_jp = 0x80982AA0; //
D_80982AAC_jp = 0x80982AAC; //
D_80982AB8_jp = 0x80982AB8; //
D_80982AC4_jp = 0x80982AC4; //
D_80982ACC_jp = 0x80982ACC; //
D_80982AD4_jp = 0x80982AD4; //
D_80982ADC_jp = 0x80982ADC; //
D_80982AE0_jp = 0x80982AE0; //
D_80982AE4_jp = 0x80982AE4; //
D_80982AE8_jp = 0x80982AE8; //
D_80982AF4_jp = 0x80982AF4; //
D_FLT_80982AFC_jp = 0x80982AFC; // type:f32
D_80982B04_jp = 0x80982B04; // type:u8
D_80982B07_jp = 0x80982B07; // type:u8
D_80982B08_jp = 0x80982B08; //
D_80982B14_jp = 0x80982B14; //
D_80982BBC_jp = 0x80982BBC; //
D_80982C64_jp = 0x80982C64; //
D_80982D0C_jp = 0x80982D0C; //
D_80982DB4_jp = 0x80982DB4; //
D_80982E5C_jp = 0x80982E5C; //
D_80982F04_jp = 0x80982F04; // type:u8
D_FLT_80982F08_jp = 0x80982F08; // type:f32
D_80982F10_jp = 0x80982F10; //
D_80982F18_jp = 0x80982F18; //
D_80982FF0_jp = 0x80982FF0; //
D_809831A0_jp = 0x809831A0; //
D_809831AC_jp = 0x809831AC; //
D_80983214_jp = 0x80983214; //
D_80983244_jp = 0x80983244; //
D_809832AC_jp = 0x809832AC; // type:u8
D_809832B4_jp = 0x809832B4; // type:s16
D_809832BA_jp = 0x809832BA; //
D_809832BC_jp = 0x809832BC; //
D_809832C8_jp = 0x809832C8; // type:u8
D_809832D0_jp = 0x809832D0; //
D_809832E0_jp = 0x809832E0; //
D_809832EC_jp = 0x809832EC; // type:u8
D_809832F4_jp = 0x809832F4; //
D_80983304_jp = 0x80983304; //
D_80983310_jp = 0x80983310; //
D_80983320_jp = 0x80983320; //
D_8098332C_jp = 0x8098332C; //
D_80983338_jp = 0x80983338; //
D_FLT_80983344_jp = 0x80983344; // type:f32
D_80983358_jp = 0x80983358; //
D_8098336C_jp = 0x8098336C; // type:u8
D_80983374_jp = 0x80983374; // type:u8
D_80983380_jp = 0x80983380; //
D_809833A4_jp = 0x809833A4; //
D_809833B0_jp = 0x809833B0; // type:u8
D_809833B4_jp = 0x809833B4; //
D_809833C0_jp = 0x809833C0; //
D_809833CC_jp = 0x809833CC; // type:u8
D_809833D0_jp = 0x809833D0; //
D_809833E0_jp = 0x809833E0; //
D_809833EC_jp = 0x809833EC; // type:u8
D_809833F0_jp = 0x809833F0; //
D_809833FC_jp = 0x809833FC; //
D_80983408_jp = 0x80983408; //
D_80983414_jp = 0x80983414; //
D_80983420_jp = 0x80983420; // type:u8
D_80983428_jp = 0x80983428; //
D_80983444_jp = 0x80983444; //
D_80983450_jp = 0x80983450; // type:u8
D_8098345C_jp = 0x8098345C; // type:u8
D_80983463_jp = 0x80983463; // type:u8
D_8098346C_jp = 0x8098346C; //
D_80983494_jp = 0x80983494; //
D_809834A0_jp = 0x809834A0; //
D_809834AC_jp = 0x809834AC; // type:u8
D_809834B0_jp = 0x809834B0; //
D_809834C0_jp = 0x809834C0; //
D_809834CC_jp = 0x809834CC; //
D_809834D8_jp = 0x809834D8; //
D_80983524_jp = 0x80983524; //
D_8098352C_jp = 0x8098352C; //
D_8098353C_jp = 0x8098353C; // type:u8
D_80983540_jp = 0x80983540; //
D_80983548_jp = 0x80983548; //
D_80983550_jp = 0x80983550; //
D_80983558_jp = 0x80983558; //
D_80983560_jp = 0x80983560; //
D_80983568_jp = 0x80983568; //
D_80983570_jp = 0x80983570; //
D_80983578_jp = 0x80983578; //
D_80983580_jp = 0x80983580; //
D_80983598_jp = 0x80983598; //
D_809835A0_jp = 0x809835A0; //
D_809835A8_jp = 0x809835A8; //
D_809835B0_jp = 0x809835B0; //
D_809835B8_jp = 0x809835B8; // type:s16
D_FLT_809835C0_jp = 0x809835C0; // type:f32
D_FLT_809835D0_jp = 0x809835D0; // type:f32
D_809835E0_jp = 0x809835E0; //
D_809835E8_jp = 0x809835E8; //
D_809835F0_jp = 0x809835F0; //
D_809835F8_jp = 0x809835F8; //
D_8098361C_jp = 0x8098361C; //
D_8098362C_jp = 0x8098362C; // type:u8
D_80983630_jp = 0x80983630; //
D_80983638_jp = 0x80983638; //
D_80983648_jp = 0x80983648; //
D_80983650_jp = 0x80983650; //
D_80983660_jp = 0x80983660; //
D_80983668_jp = 0x80983668; //
D_80983670_jp = 0x80983670; //
D_80983678_jp = 0x80983678; //
D_FLT_8098376C_jp = 0x8098376C; // type:f32
D_809837AA_jp = 0x809837AA; // type:u16

// .rodata

RO_STR_809837C0_jp = 0x809837C0; // type:asciz
RO_STR_809837D8_jp = 0x809837D8; // type:asciz
RO_STR_809837F0_jp = 0x809837F0; // type:asciz
RO_STR_80983808_jp = 0x80983808; // type:asciz
RO_STR_80983820_jp = 0x80983820; // type:asciz
RO_STR_80983838_jp = 0x80983838; // type:asciz
jtbl_80983850_jp = 0x80983850; // type:jtbl
RO_FLT_80983888_jp = 0x80983888; // type:f32
RO_FLT_8098388C_jp = 0x8098388C; // type:f32
RO_FLT_80983890_jp = 0x80983890; // type:f32
RO_FLT_80983894_jp = 0x80983894; // type:f32
RO_FLT_80983898_jp = 0x80983898; // type:f32
RO_FLT_8098389C_jp = 0x8098389C; // type:f32
RO_FLT_809838A0_jp = 0x809838A0; // type:f32
RO_FLT_809838A4_jp = 0x809838A4; // type:f32
jtbl_809838A8_jp = 0x809838A8; // type:jtbl
RO_FLT_809838E0_jp = 0x809838E0; // type:f32
RO_FLT_809838E4_jp = 0x809838E4; // type:f32
RO_FLT_809838E8_jp = 0x809838E8; // type:f32
jtbl_809838EC_jp = 0x809838EC; // type:jtbl

// .bss

B_80983910_jp = 0x80983910; //
B_80983A80_jp = 0x80983A80; //
B_80983BA8_jp = 0x80983BA8; //
B_80984510_jp = 0x80984510; //
B_80984E78_jp = 0x80984E78; //
B_809857E0_jp = 0x809857E0; //
B_80986148_jp = 0x80986148; //
B_80989050_jp = 0x80989050; // type:s16
B_80989858_jp = 0x80989858; //
B_8098AC88_jp = 0x8098AC88; //
B_8098B860_jp = 0x8098B860; //
B_80990870_jp = 0x80990870; //
D_80994880_jp = 0x80994880; //

// .text

func_80995BF0_jp = 0x80995BF0; // type:func
func_80995CAC_jp = 0x80995CAC; // type:func
func_80995D68_jp = 0x80995D68; // type:func
func_80995E5C_jp = 0x80995E5C; // type:func
func_80995EB0_jp = 0x80995EB0; // type:func
func_80995F04_jp = 0x80995F04; // type:func
func_80995FE0_jp = 0x80995FE0; // type:func
func_80996118_jp = 0x80996118; // type:func
func_809961CC_jp = 0x809961CC; // type:func
func_80996234_jp = 0x80996234; // type:func
func_80996328_jp = 0x80996328; // type:func
func_809964AC_jp = 0x809964AC; // type:func
func_809964EC_jp = 0x809964EC; // type:func
func_80996590_jp = 0x80996590; // type:func
func_809965EC_jp = 0x809965EC; // type:func
func_809966EC_jp = 0x809966EC; // type:func
func_80996714_jp = 0x80996714; // type:func
func_809967C4_jp = 0x809967C4; // type:func
func_809967F4_jp = 0x809967F4; // type:func
func_80996898_jp = 0x80996898; // type:func
func_809968C8_jp = 0x809968C8; // type:func
func_8099691C_jp = 0x8099691C; // type:func
func_80996960_jp = 0x80996960; // type:func
func_809969E4_jp = 0x809969E4; // type:func
func_80996A24_jp = 0x80996A24; // type:func
func_80996B54_jp = 0x80996B54; // type:func
func_80996C00_jp = 0x80996C00; // type:func
func_80996C78_jp = 0x80996C78; // type:func
func_80996D00_jp = 0x80996D00; // type:func
func_80996DC8_jp = 0x80996DC8; // type:func
func_80996F14_jp = 0x80996F14; // type:func
func_80997240_jp = 0x80997240; // type:func
func_809972CC_jp = 0x809972CC; // type:func
func_8099742C_jp = 0x8099742C; // type:func
func_80997470_jp = 0x80997470; // type:func
func_809974FC_jp = 0x809974FC; // type:func
func_80997604_jp = 0x80997604; // type:func
func_8099767C_jp = 0x8099767C; // type:func
func_809976B4_jp = 0x809976B4; // type:func
func_809976E0_jp = 0x809976E0; // type:func
func_80997824_jp = 0x80997824; // type:func
func_80997844_jp = 0x80997844; // type:func
func_80997894_jp = 0x80997894; // type:func
func_80997AC4_jp = 0x80997AC4; // type:func
func_80997CD8_jp = 0x80997CD8; // type:func
func_80997CF4_jp = 0x80997CF4; // type:func
func_80997E78_jp = 0x80997E78; // type:func
func_80997EA4_jp = 0x80997EA4; // type:func
func_80997ED4_jp = 0x80997ED4; // type:func
func_80997F3C_jp = 0x80997F3C; // type:func
func_80997FC8_jp = 0x80997FC8; // type:func
func_809980FC_jp = 0x809980FC; // type:func
func_80998180_jp = 0x80998180; // type:func
func_8099819C_jp = 0x8099819C; // type:func
func_80998280_jp = 0x80998280; // type:func
func_809982E4_jp = 0x809982E4; // type:func
func_8099844C_jp = 0x8099844C; // type:func
func_80998474_jp = 0x80998474; // type:func
func_80998614_jp = 0x80998614; // type:func
func_8099867C_jp = 0x8099867C; // type:func
func_80998714_jp = 0x80998714; // type:func
func_80998740_jp = 0x80998740; // type:func
func_80998898_jp = 0x80998898; // type:func
func_809988F0_jp = 0x809988F0; // type:func
func_80998B28_jp = 0x80998B28; // type:func
func_80998BA4_jp = 0x80998BA4; // type:func
func_80998C10_jp = 0x80998C10; // type:func
func_80998C5C_jp = 0x80998C5C; // type:func
func_80998CB8_jp = 0x80998CB8; // type:func
func_80998D78_jp = 0x80998D78; // type:func
func_80998DDC_jp = 0x80998DDC; // type:func
func_80998E14_jp = 0x80998E14; // type:func
func_80998F44_jp = 0x80998F44; // type:func
func_80999008_jp = 0x80999008; // type:func
func_809990B0_jp = 0x809990B0; // type:func
func_8099910C_jp = 0x8099910C; // type:func
func_80999244_jp = 0x80999244; // type:func
func_809992DC_jp = 0x809992DC; // type:func
func_80999318_jp = 0x80999318; // type:func
func_80999344_jp = 0x80999344; // type:func
func_8099937C_jp = 0x8099937C; // type:func
func_809993C0_jp = 0x809993C0; // type:func
func_8099941C_jp = 0x8099941C; // type:func
func_80999454_jp = 0x80999454; // type:func
func_809994C4_jp = 0x809994C4; // type:func
func_80999508_jp = 0x80999508; // type:func
func_809995AC_jp = 0x809995AC; // type:func
func_809995EC_jp = 0x809995EC; // type:func
func_80999634_jp = 0x80999634; // type:func
func_809996BC_jp = 0x809996BC; // type:func
func_8099973C_jp = 0x8099973C; // type:func
func_80999798_jp = 0x80999798; // type:func
func_80999818_jp = 0x80999818; // type:func
func_809998D8_jp = 0x809998D8; // type:func
func_8099991C_jp = 0x8099991C; // type:func
func_80999968_jp = 0x80999968; // type:func
func_80999A0C_jp = 0x80999A0C; // type:func
func_80999AA4_jp = 0x80999AA4; // type:func
func_80999AEC_jp = 0x80999AEC; // type:func
func_80999B90_jp = 0x80999B90; // type:func
func_80999C8C_jp = 0x80999C8C; // type:func
func_80999CF0_jp = 0x80999CF0; // type:func
func_80999D30_jp = 0x80999D30; // type:func
func_80999D70_jp = 0x80999D70; // type:func
func_8099A2F8_jp = 0x8099A2F8; // type:func
func_8099A32C_jp = 0x8099A32C; // type:func
func_8099A36C_jp = 0x8099A36C; // type:func
func_8099A3BC_jp = 0x8099A3BC; // type:func
func_8099A4CC_jp = 0x8099A4CC; // type:func
func_8099A540_jp = 0x8099A540; // type:func
func_8099A5B4_jp = 0x8099A5B4; // type:func
func_8099A5E4_jp = 0x8099A5E4; // type:func
func_8099A62C_jp = 0x8099A62C; // type:func
func_8099A670_jp = 0x8099A670; // type:func
func_8099A728_jp = 0x8099A728; // type:func
func_8099A788_jp = 0x8099A788; // type:func
func_8099A80C_jp = 0x8099A80C; // type:func
func_8099A8D4_jp = 0x8099A8D4; // type:func
func_8099A8F8_jp = 0x8099A8F8; // type:func
func_8099A974_jp = 0x8099A974; // type:func
func_8099A9DC_jp = 0x8099A9DC; // type:func
func_8099AA00_jp = 0x8099AA00; // type:func
func_8099AA38_jp = 0x8099AA38; // type:func
func_8099AAA4_jp = 0x8099AAA4; // type:func
func_8099AB20_jp = 0x8099AB20; // type:func
func_8099AB6C_jp = 0x8099AB6C; // type:func
func_8099ABB4_jp = 0x8099ABB4; // type:func
func_8099ABE4_jp = 0x8099ABE4; // type:func
func_8099AC7C_jp = 0x8099AC7C; // type:func
func_8099ACD8_jp = 0x8099ACD8; // type:func
func_8099AD2C_jp = 0x8099AD2C; // type:func
func_8099AD5C_jp = 0x8099AD5C; // type:func
func_8099ADF4_jp = 0x8099ADF4; // type:func
func_8099AE50_jp = 0x8099AE50; // type:func
func_8099AEA4_jp = 0x8099AEA4; // type:func
func_8099AED4_jp = 0x8099AED4; // type:func
func_8099AF20_jp = 0x8099AF20; // type:func
func_8099AF8C_jp = 0x8099AF8C; // type:func
func_8099B000_jp = 0x8099B000; // type:func
func_8099B030_jp = 0x8099B030; // type:func
func_8099B064_jp = 0x8099B064; // type:func
func_8099B0E4_jp = 0x8099B0E4; // type:func
func_8099B130_jp = 0x8099B130; // type:func
func_8099B168_jp = 0x8099B168; // type:func
func_8099B25C_jp = 0x8099B25C; // type:func
func_8099B2B0_jp = 0x8099B2B0; // type:func
func_8099B2E4_jp = 0x8099B2E4; // type:func
func_8099B358_jp = 0x8099B358; // type:func
func_8099B388_jp = 0x8099B388; // type:func
func_8099B3B0_jp = 0x8099B3B0; // type:func
func_8099B3E0_jp = 0x8099B3E0; // type:func
func_8099B450_jp = 0x8099B450; // type:func
func_8099B47C_jp = 0x8099B47C; // type:func
func_8099B4AC_jp = 0x8099B4AC; // type:func
func_8099B580_jp = 0x8099B580; // type:func
func_8099B5A8_jp = 0x8099B5A8; // type:func
func_8099B614_jp = 0x8099B614; // type:func
func_8099B674_jp = 0x8099B674; // type:func
func_8099B6C4_jp = 0x8099B6C4; // type:func
func_8099B72C_jp = 0x8099B72C; // type:func
func_8099B7B4_jp = 0x8099B7B4; // type:func
func_8099B7C8_jp = 0x8099B7C8; // type:func
func_8099B82C_jp = 0x8099B82C; // type:func
func_8099B85C_jp = 0x8099B85C; // type:func
func_8099B970_jp = 0x8099B970; // type:func
func_8099B9D0_jp = 0x8099B9D0; // type:func
func_8099BA60_jp = 0x8099BA60; // type:func
func_8099BAC8_jp = 0x8099BAC8; // type:func
func_8099BBC8_jp = 0x8099BBC8; // type:func
func_8099BC04_jp = 0x8099BC04; // type:func
func_8099BCB8_jp = 0x8099BCB8; // type:func
func_8099BD1C_jp = 0x8099BD1C; // type:func
func_8099BD70_jp = 0x8099BD70; // type:func
func_8099BDF8_jp = 0x8099BDF8; // type:func
func_8099BE0C_jp = 0x8099BE0C; // type:func
func_8099BE94_jp = 0x8099BE94; // type:func
func_8099BEC4_jp = 0x8099BEC4; // type:func
func_8099BEF8_jp = 0x8099BEF8; // type:func
func_8099BF74_jp = 0x8099BF74; // type:func
func_8099C020_jp = 0x8099C020; // type:func
func_8099C0A4_jp = 0x8099C0A4; // type:func
func_8099C0E0_jp = 0x8099C0E0; // type:func
func_8099C154_jp = 0x8099C154; // type:func
func_8099C168_jp = 0x8099C168; // type:func
func_8099C194_jp = 0x8099C194; // type:func
func_8099C1C4_jp = 0x8099C1C4; // type:func
func_8099C1F8_jp = 0x8099C1F8; // type:func
func_8099C28C_jp = 0x8099C28C; // type:func
func_8099C300_jp = 0x8099C300; // type:func
func_8099C314_jp = 0x8099C314; // type:func
func_8099C360_jp = 0x8099C360; // type:func
func_8099C390_jp = 0x8099C390; // type:func
func_8099C3F4_jp = 0x8099C3F4; // type:func
func_8099C424_jp = 0x8099C424; // type:func
func_8099C454_jp = 0x8099C454; // type:func
func_8099C478_jp = 0x8099C478; // type:func
func_8099C578_jp = 0x8099C578; // type:func
func_8099C5F4_jp = 0x8099C5F4; // type:func
func_8099C670_jp = 0x8099C670; // type:func
func_8099C6A0_jp = 0x8099C6A0; // type:func
func_8099C730_jp = 0x8099C730; // type:func
func_8099C794_jp = 0x8099C794; // type:func
func_8099C8F8_jp = 0x8099C8F8; // type:func
func_8099C968_jp = 0x8099C968; // type:func
func_8099CC40_jp = 0x8099CC40; // type:func
func_8099CE08_jp = 0x8099CE08; // type:func
func_8099CFA4_jp = 0x8099CFA4; // type:func
func_8099D354_jp = 0x8099D354; // type:func
func_8099D4E8_jp = 0x8099D4E8; // type:func
func_8099D594_jp = 0x8099D594; // type:func
func_8099D940_jp = 0x8099D940; // type:func
func_8099DD10_jp = 0x8099DD10; // type:func
func_8099DD9C_jp = 0x8099DD9C; // type:func
func_8099DE30_jp = 0x8099DE30; // type:func
func_8099DF30_jp = 0x8099DF30; // type:func
func_8099DF68_jp = 0x8099DF68; // type:func
func_8099DF90_jp = 0x8099DF90; // type:func
func_8099DFF0_jp = 0x8099DFF0; // type:func
func_8099E020_jp = 0x8099E020; // type:func
D_8099E1F0_jp = 0x8099E1F0; //
func_8099E3E0_jp = 0x8099E3E0; // type:func
func_8099E410_jp = 0x8099E410; // type:func
func_8099E44C_jp = 0x8099E44C; // type:func
func_8099E48C_jp = 0x8099E48C; // type:func
func_8099E4BC_jp = 0x8099E4BC; // type:func
func_8099E5B4_jp = 0x8099E5B4; // type:func
func_8099E668_jp = 0x8099E668; // type:func
func_8099E708_jp = 0x8099E708; // type:func
func_8099E74C_jp = 0x8099E74C; // type:func
func_8099E77C_jp = 0x8099E77C; // type:func
func_8099E8A8_jp = 0x8099E8A8; // type:func
func_8099E908_jp = 0x8099E908; // type:func
func_8099E980_jp = 0x8099E980; // type:func
func_8099EA14_jp = 0x8099EA14; // type:func
func_8099EA74_jp = 0x8099EA74; // type:func
func_8099EAA4_jp = 0x8099EAA4; // type:func
func_8099EAF8_jp = 0x8099EAF8; // type:func
func_8099EBC8_jp = 0x8099EBC8; // type:func
func_8099EBF8_jp = 0x8099EBF8; // type:func
func_8099EC1C_jp = 0x8099EC1C; // type:func
func_8099EC68_jp = 0x8099EC68; // type:func
func_8099ECA0_jp = 0x8099ECA0; // type:func
func_8099ED0C_jp = 0x8099ED0C; // type:func
func_8099ED4C_jp = 0x8099ED4C; // type:func
func_8099ED88_jp = 0x8099ED88; // type:func
func_8099EDB8_jp = 0x8099EDB8; // type:func
func_8099EE5C_jp = 0x8099EE5C; // type:func
func_8099EEC8_jp = 0x8099EEC8; // type:func
func_8099EEF8_jp = 0x8099EEF8; // type:func
func_8099EF28_jp = 0x8099EF28; // type:func
func_8099EFB0_jp = 0x8099EFB0; // type:func
func_8099F034_jp = 0x8099F034; // type:func
func_8099F064_jp = 0x8099F064; // type:func
func_8099F098_jp = 0x8099F098; // type:func
func_8099F0D4_jp = 0x8099F0D4; // type:func
func_8099F104_jp = 0x8099F104; // type:func
func_8099F168_jp = 0x8099F168; // type:func
func_8099F1A4_jp = 0x8099F1A4; // type:func
func_8099F1D4_jp = 0x8099F1D4; // type:func
func_8099F1F4_jp = 0x8099F1F4; // type:func
func_8099F230_jp = 0x8099F230; // type:func
func_8099F260_jp = 0x8099F260; // type:func
func_8099F284_jp = 0x8099F284; // type:func
func_8099F2BC_jp = 0x8099F2BC; // type:func
func_8099F2E4_jp = 0x8099F2E4; // type:func
func_8099F308_jp = 0x8099F308; // type:func
func_8099F348_jp = 0x8099F348; // type:func
func_8099F39C_jp = 0x8099F39C; // type:func
func_8099F40C_jp = 0x8099F40C; // type:func
func_8099F458_jp = 0x8099F458; // type:func
func_8099F534_jp = 0x8099F534; // type:func
func_8099F584_jp = 0x8099F584; // type:func
func_8099F5F4_jp = 0x8099F5F4; // type:func
func_8099F710_jp = 0x8099F710; // type:func
func_8099F8C0_jp = 0x8099F8C0; // type:func
func_8099F964_jp = 0x8099F964; // type:func
func_8099FCFC_jp = 0x8099FCFC; // type:func
func_8099FDE0_jp = 0x8099FDE0; // type:func
func_8099FE88_jp = 0x8099FE88; // type:func
func_8099FED8_jp = 0x8099FED8; // type:func
func_8099FF40_jp = 0x8099FF40; // type:func
func_809A004C_jp = 0x809A004C; // type:func
func_809A0074_jp = 0x809A0074; // type:func
func_809A0114_jp = 0x809A0114; // type:func
func_809A01B0_jp = 0x809A01B0; // type:func
func_809A0300_jp = 0x809A0300; // type:func
func_809A0344_jp = 0x809A0344; // type:func
func_809A0378_jp = 0x809A0378; // type:func
func_809A0408_jp = 0x809A0408; // type:func
func_809A049C_jp = 0x809A049C; // type:func
func_809A0500_jp = 0x809A0500; // type:func
func_809A0558_jp = 0x809A0558; // type:func
func_809A059C_jp = 0x809A059C; // type:func
func_809A0654_jp = 0x809A0654; // type:func
func_809A06F0_jp = 0x809A06F0; // type:func
func_809A07F4_jp = 0x809A07F4; // type:func
func_809A08B0_jp = 0x809A08B0; // type:func
func_809A0A98_jp = 0x809A0A98; // type:func
func_809A0AB8_jp = 0x809A0AB8; // type:func
func_809A0B34_jp = 0x809A0B34; // type:func
func_809A0BA4_jp = 0x809A0BA4; // type:func
func_809A0E28_jp = 0x809A0E28; // type:func
func_809A0E50_jp = 0x809A0E50; // type:func
func_809A0F98_jp = 0x809A0F98; // type:func
func_809A1020_jp = 0x809A1020; // type:func
func_809A121C_jp = 0x809A121C; // type:func
func_809A127C_jp = 0x809A127C; // type:func

// .data

D_809A1320_jp = 0x809A1320; //
_008798C0_Profile = 0x809A132C; //
D_809A1350_jp = 0x809A1350; //
D_809A1354_jp = 0x809A1354; //
D_809A1AA4_jp = 0x809A1AA4; //
D_809A1AAC_jp = 0x809A1AAC; //
D_809A1B58_jp = 0x809A1B58; //
D_809A1B64_jp = 0x809A1B64; //
D_809A1B74_jp = 0x809A1B74; //
D_809A1B80_jp = 0x809A1B80; //
D_809A1F2C_jp = 0x809A1F2C; //
D_809A22D8_jp = 0x809A22D8; //
D_809A22F4_jp = 0x809A22F4; //
D_809A2310_jp = 0x809A2310; //
D_809A232C_jp = 0x809A232C; //
D_809A2348_jp = 0x809A2348; //
D_FLT_809A2358_jp = 0x809A2358; // type:f32
D_809A237C_jp = 0x809A237C; //
D_809A2394_jp = 0x809A2394; //
D_809A23AC_jp = 0x809A23AC; //
D_809A23B4_jp = 0x809A23B4; //
D_809A23BC_jp = 0x809A23BC; //
D_809A23C4_jp = 0x809A23C4; //
D_809A23CC_jp = 0x809A23CC; //
D_809A23D4_jp = 0x809A23D4; //
D_809A23DC_jp = 0x809A23DC; //
D_809A23F8_jp = 0x809A23F8; //
D_809A2400_jp = 0x809A2400; //
D_809A240C_jp = 0x809A240C; //
D_809A2414_jp = 0x809A2414; //
D_809A2424_jp = 0x809A2424; //
D_809A2430_jp = 0x809A2430; //
D_809A2438_jp = 0x809A2438; //
D_809A2448_jp = 0x809A2448; //
D_809A2454_jp = 0x809A2454; //
D_809A2460_jp = 0x809A2460; //
D_809A246C_jp = 0x809A246C; //
D_809A2478_jp = 0x809A2478; //
D_809A2480_jp = 0x809A2480; //
D_809A2488_jp = 0x809A2488; //
D_809A2490_jp = 0x809A2490; //
D_809A2494_jp = 0x809A2494; //
D_809A2498_jp = 0x809A2498; //
D_809A249C_jp = 0x809A249C; //
D_809A24A8_jp = 0x809A24A8; //
D_FLT_809A24B0_jp = 0x809A24B0; // type:f32
D_809A24B8_jp = 0x809A24B8; // type:u8
D_809A24BB_jp = 0x809A24BB; // type:u8
D_809A24BC_jp = 0x809A24BC; //
D_809A24C8_jp = 0x809A24C8; //
D_809A2570_jp = 0x809A2570; //
D_809A2618_jp = 0x809A2618; //
D_809A26C0_jp = 0x809A26C0; //
D_809A2768_jp = 0x809A2768; //
D_809A2810_jp = 0x809A2810; //
D_809A28B8_jp = 0x809A28B8; //
D_809A2964_jp = 0x809A2964; //
D_809A2ABC_jp = 0x809A2ABC; //
D_809A2AC8_jp = 0x809A2AC8; //
D_809A2AE4_jp = 0x809A2AE4; //
D_809A2B30_jp = 0x809A2B30; //
D_809A2B60_jp = 0x809A2B60; //
D_809A2BC8_jp = 0x809A2BC8; // type:u8
D_809A2BD0_jp = 0x809A2BD0; //
D_809A2BDC_jp = 0x809A2BDC; // type:u8
D_809A2BE4_jp = 0x809A2BE4; //
D_809A2BF4_jp = 0x809A2BF4; //
D_809A2C00_jp = 0x809A2C00; // type:u8
D_809A2C08_jp = 0x809A2C08; //
D_809A2C18_jp = 0x809A2C18; //
D_809A2C24_jp = 0x809A2C24; //
D_809A2C34_jp = 0x809A2C34; //
D_809A2C40_jp = 0x809A2C40; // type:u8
D_809A2C48_jp = 0x809A2C48; //
D_809A2C54_jp = 0x809A2C54; //
D_809A2C60_jp = 0x809A2C60; //
D_809A2C6C_jp = 0x809A2C6C; //
D_809A2C78_jp = 0x809A2C78; // type:u8
D_809A2C80_jp = 0x809A2C80; //
D_809A2C9C_jp = 0x809A2C9C; //
D_809A2CA8_jp = 0x809A2CA8; // type:u8
D_809A2CB4_jp = 0x809A2CB4; // type:u8
D_809A2CBB_jp = 0x809A2CBB; // type:u8
D_809A2CC4_jp = 0x809A2CC4; //
D_809A2CEC_jp = 0x809A2CEC; //
D_809A2CF8_jp = 0x809A2CF8; // type:u8
D_809A2CFC_jp = 0x809A2CFC; //
D_809A2D08_jp = 0x809A2D08; //
D_809A2D14_jp = 0x809A2D14; // type:u8
D_809A2D18_jp = 0x809A2D18; //
D_809A2D1C_jp = 0x809A2D1C; //
D_809A2D28_jp = 0x809A2D28; //
D_809A2D34_jp = 0x809A2D34; //
D_809A2D78_jp = 0x809A2D78; //
D_809A2D88_jp = 0x809A2D88; //
D_809A2D9C_jp = 0x809A2D9C; //
D_809A2DB0_jp = 0x809A2DB0; //
D_809A2DC4_jp = 0x809A2DC4; //
D_809A2DD4_jp = 0x809A2DD4; //
D_809A2DE8_jp = 0x809A2DE8; //
D_809A2DFC_jp = 0x809A2DFC; //
D_809A2E04_jp = 0x809A2E04; //
D_809A2E0C_jp = 0x809A2E0C; //
D_809A2E14_jp = 0x809A2E14; //
D_809A2E1C_jp = 0x809A2E1C; //
D_809A2E24_jp = 0x809A2E24; //
D_809A2E2C_jp = 0x809A2E2C; //
D_809A2E48_jp = 0x809A2E48; //
D_809A2E54_jp = 0x809A2E54; //
D_809A2E5C_jp = 0x809A2E5C; //
D_809A2E68_jp = 0x809A2E68; //
D_809A2E70_jp = 0x809A2E70; //
D_809A2E78_jp = 0x809A2E78; //
D_809A2E80_jp = 0x809A2E80; //
D_809A2E88_jp = 0x809A2E88; //
D_809A2EA0_jp = 0x809A2EA0; //
D_809A2EC4_jp = 0x809A2EC4; //
D_809A2ED0_jp = 0x809A2ED0; //
D_809A2EDC_jp = 0x809A2EDC; //
D_809A2EE8_jp = 0x809A2EE8; //
D_809A2EF4_jp = 0x809A2EF4; //
D_809A2F00_jp = 0x809A2F00; //
D_809A2F0C_jp = 0x809A2F0C; //
D_809A2F18_jp = 0x809A2F18; //
D_809A2F38_jp = 0x809A2F38; // type:s16
D_809A2F40_jp = 0x809A2F40; //
D_809A2FD0_jp = 0x809A2FD0; //
D_FLT_809A313C_jp = 0x809A313C; // type:f32

// .rodata

RO_STR_809A3180_jp = 0x809A3180; // type:asciz
RO_STR_809A3198_jp = 0x809A3198; // type:asciz
RO_STR_809A31B0_jp = 0x809A31B0; // type:asciz
RO_STR_809A31C8_jp = 0x809A31C8; // type:asciz
RO_STR_809A31E0_jp = 0x809A31E0; // type:asciz
RO_STR_809A31F8_jp = 0x809A31F8; // type:asciz
jtbl_809A3210_jp = 0x809A3210; // type:jtbl
RO_FLT_809A3248_jp = 0x809A3248; // type:f32
RO_FLT_809A324C_jp = 0x809A324C; // type:f32
RO_FLT_809A3250_jp = 0x809A3250; // type:f32
RO_FLT_809A3254_jp = 0x809A3254; // type:f32
RO_FLT_809A3258_jp = 0x809A3258; // type:f32
RO_FLT_809A325C_jp = 0x809A325C; // type:f32
jtbl_809A3260_jp = 0x809A3260; // type:jtbl
RO_FLT_809A3298_jp = 0x809A3298; // type:f32
RO_FLT_809A329C_jp = 0x809A329C; // type:f32
RO_FLT_809A32A0_jp = 0x809A32A0; // type:f32
jtbl_809A32A4_jp = 0x809A32A4; // type:jtbl

// .bss

B_809A32D0_jp = 0x809A32D0; //
B_809A3648_jp = 0x809A3648; //
B_809A3668_jp = 0x809A3668; //

// .text

func_809A4780_jp = 0x809A4780; // type:func
func_809A4800_jp = 0x809A4800; // type:func
func_809A482C_jp = 0x809A482C; // type:func
func_809A4858_jp = 0x809A4858; // type:func
func_809A4884_jp = 0x809A4884; // type:func
func_809A4928_jp = 0x809A4928; // type:func
func_809A4954_jp = 0x809A4954; // type:func
func_809A4AF0_jp = 0x809A4AF0; // type:func
func_809A4B70_jp = 0x809A4B70; // type:func
func_809A4BD0_jp = 0x809A4BD0; // type:func
func_809A4C64_jp = 0x809A4C64; // type:func
func_809A4CCC_jp = 0x809A4CCC; // type:func
func_809A4DC8_jp = 0x809A4DC8; // type:func
func_809A4E58_jp = 0x809A4E58; // type:func
func_809A4EDC_jp = 0x809A4EDC; // type:func
func_809A4F3C_jp = 0x809A4F3C; // type:func
func_809A4FE4_jp = 0x809A4FE4; // type:func
func_809A503C_jp = 0x809A503C; // type:func
func_809A50C4_jp = 0x809A50C4; // type:func
func_809A5128_jp = 0x809A5128; // type:func
func_809A5178_jp = 0x809A5178; // type:func
func_809A5194_jp = 0x809A5194; // type:func
func_809A51CC_jp = 0x809A51CC; // type:func
func_809A52CC_jp = 0x809A52CC; // type:func
func_809A530C_jp = 0x809A530C; // type:func
func_809A5340_jp = 0x809A5340; // type:func
func_809A536C_jp = 0x809A536C; // type:func
func_809A53F0_jp = 0x809A53F0; // type:func
func_809A5470_jp = 0x809A5470; // type:func
func_809A54E8_jp = 0x809A54E8; // type:func
func_809A550C_jp = 0x809A550C; // type:func
func_809A5548_jp = 0x809A5548; // type:func
func_809A5584_jp = 0x809A5584; // type:func
func_809A55C0_jp = 0x809A55C0; // type:func
func_809A5610_jp = 0x809A5610; // type:func
func_809A5640_jp = 0x809A5640; // type:func
func_809A5680_jp = 0x809A5680; // type:func
func_809A56C8_jp = 0x809A56C8; // type:func
func_809A57E0_jp = 0x809A57E0; // type:func
func_809A5810_jp = 0x809A5810; // type:func

// .data

_00887F90_Profile = 0x809A5840; //
D_809A5864_jp = 0x809A5864; //
D_809A5888_jp = 0x809A5888; //
D_809A58BC_jp = 0x809A58BC; //
D_809A58DC_jp = 0x809A58DC; //
D_809A58E4_jp = 0x809A58E4; //
D_809A58F0_jp = 0x809A58F0; //

// .text

func_809A5A60_jp = 0x809A5A60; // type:func
func_809A5AC8_jp = 0x809A5AC8; // type:func
func_809A5AF4_jp = 0x809A5AF4; // type:func
func_809A5B20_jp = 0x809A5B20; // type:func
func_809A5B4C_jp = 0x809A5B4C; // type:func
func_809A5B78_jp = 0x809A5B78; // type:func

// .data

_00889270_Profile = 0x809A5BB0; //
D_809A5BD4_jp = 0x809A5BD4; //

// .text

func_809A5C30_jp = 0x809A5C30; // type:func
func_809A5CC0_jp = 0x809A5CC0; // type:func
func_809A5CEC_jp = 0x809A5CEC; // type:func
func_809A5D18_jp = 0x809A5D18; // type:func
func_809A5D44_jp = 0x809A5D44; // type:func
func_809A5D98_jp = 0x809A5D98; // type:func
func_809A5E38_jp = 0x809A5E38; // type:func
func_809A5E6C_jp = 0x809A5E6C; // type:func
func_809A5F04_jp = 0x809A5F04; // type:func
func_809A5FC8_jp = 0x809A5FC8; // type:func
func_809A6008_jp = 0x809A6008; // type:func
func_809A604C_jp = 0x809A604C; // type:func
func_809A6088_jp = 0x809A6088; // type:func
func_809A60B4_jp = 0x809A60B4; // type:func
func_809A6138_jp = 0x809A6138; // type:func
func_809A6160_jp = 0x809A6160; // type:func
func_809A61E0_jp = 0x809A61E0; // type:func
func_809A6288_jp = 0x809A6288; // type:func
func_809A62E4_jp = 0x809A62E4; // type:func
func_809A6304_jp = 0x809A6304; // type:func
func_809A6330_jp = 0x809A6330; // type:func
func_809A635C_jp = 0x809A635C; // type:func
func_809A6384_jp = 0x809A6384; // type:func
func_809A6410_jp = 0x809A6410; // type:func
func_809A644C_jp = 0x809A644C; // type:func
func_809A64AC_jp = 0x809A64AC; // type:func
func_809A6500_jp = 0x809A6500; // type:func
func_809A6548_jp = 0x809A6548; // type:func
func_809A6598_jp = 0x809A6598; // type:func
func_809A666C_jp = 0x809A666C; // type:func
func_809A67AC_jp = 0x809A67AC; // type:func
func_809A6828_jp = 0x809A6828; // type:func
func_809A6838_jp = 0x809A6838; // type:func
func_809A6908_jp = 0x809A6908; // type:func
func_809A6A00_jp = 0x809A6A00; // type:func
func_809A6A54_jp = 0x809A6A54; // type:func
func_809A6AFC_jp = 0x809A6AFC; // type:func
func_809A6BF8_jp = 0x809A6BF8; // type:func
func_809A6C94_jp = 0x809A6C94; // type:func
func_809A6CE4_jp = 0x809A6CE4; // type:func
func_809A6D38_jp = 0x809A6D38; // type:func
func_809A6D68_jp = 0x809A6D68; // type:func
func_809A6D98_jp = 0x809A6D98; // type:func
func_809A6DC8_jp = 0x809A6DC8; // type:func
func_809A6ED8_jp = 0x809A6ED8; // type:func
func_809A6F18_jp = 0x809A6F18; // type:func
func_809A6F58_jp = 0x809A6F58; // type:func
func_809A6FD0_jp = 0x809A6FD0; // type:func
func_809A6FFC_jp = 0x809A6FFC; // type:func
func_809A7028_jp = 0x809A7028; // type:func
func_809A7348_jp = 0x809A7348; // type:func
func_809A759C_jp = 0x809A759C; // type:func
func_809A7614_jp = 0x809A7614; // type:func
func_809A7680_jp = 0x809A7680; // type:func
func_809A7820_jp = 0x809A7820; // type:func
func_809A7860_jp = 0x809A7860; // type:func
func_809A78B8_jp = 0x809A78B8; // type:func
func_809A79FC_jp = 0x809A79FC; // type:func
func_809A7AFC_jp = 0x809A7AFC; // type:func
func_809A7B30_jp = 0x809A7B30; // type:func
func_809A7BA8_jp = 0x809A7BA8; // type:func
func_809A7CE4_jp = 0x809A7CE4; // type:func
func_809A7D3C_jp = 0x809A7D3C; // type:func
func_809A7DA8_jp = 0x809A7DA8; // type:func
func_809A7DF4_jp = 0x809A7DF4; // type:func
func_809A7E24_jp = 0x809A7E24; // type:func
func_809A7EEC_jp = 0x809A7EEC; // type:func
func_809A7F88_jp = 0x809A7F88; // type:func
func_809A81B0_jp = 0x809A81B0; // type:func
func_809A8224_jp = 0x809A8224; // type:func
func_809A830C_jp = 0x809A830C; // type:func
func_809A83A0_jp = 0x809A83A0; // type:func
func_809A847C_jp = 0x809A847C; // type:func
func_809A858C_jp = 0x809A858C; // type:func
func_809A85DC_jp = 0x809A85DC; // type:func
func_809A86A0_jp = 0x809A86A0; // type:func
func_809A8850_jp = 0x809A8850; // type:func
func_809A8904_jp = 0x809A8904; // type:func
func_809A8AD4_jp = 0x809A8AD4; // type:func
func_809A8B3C_jp = 0x809A8B3C; // type:func
func_809A8B94_jp = 0x809A8B94; // type:func
func_809A8C00_jp = 0x809A8C00; // type:func
func_809A8C6C_jp = 0x809A8C6C; // type:func
func_809A8D08_jp = 0x809A8D08; // type:func
func_809A8D3C_jp = 0x809A8D3C; // type:func
func_809A8DD4_jp = 0x809A8DD4; // type:func
func_809A8E2C_jp = 0x809A8E2C; // type:func
func_809A8EA0_jp = 0x809A8EA0; // type:func
func_809A8EC4_jp = 0x809A8EC4; // type:func
func_809A8EEC_jp = 0x809A8EEC; // type:func
func_809A8F24_jp = 0x809A8F24; // type:func
func_809A8F54_jp = 0x809A8F54; // type:func
func_809A8F8C_jp = 0x809A8F8C; // type:func
func_809A8FBC_jp = 0x809A8FBC; // type:func
func_809A8FEC_jp = 0x809A8FEC; // type:func
func_809A902C_jp = 0x809A902C; // type:func
func_809A905C_jp = 0x809A905C; // type:func
func_809A908C_jp = 0x809A908C; // type:func
func_809A9170_jp = 0x809A9170; // type:func
func_809A91A0_jp = 0x809A91A0; // type:func
func_809A91E0_jp = 0x809A91E0; // type:func
func_809A9218_jp = 0x809A9218; // type:func
func_809A9250_jp = 0x809A9250; // type:func
func_809A9338_jp = 0x809A9338; // type:func
func_809A9360_jp = 0x809A9360; // type:func
func_809A93B8_jp = 0x809A93B8; // type:func
func_809A93F4_jp = 0x809A93F4; // type:func
func_809A9404_jp = 0x809A9404; // type:func
func_809A9428_jp = 0x809A9428; // type:func
func_809A9458_jp = 0x809A9458; // type:func
func_809A947C_jp = 0x809A947C; // type:func
func_809A94A0_jp = 0x809A94A0; // type:func
func_809A94C4_jp = 0x809A94C4; // type:func
func_809A94E8_jp = 0x809A94E8; // type:func
func_809A9518_jp = 0x809A9518; // type:func
func_809A9548_jp = 0x809A9548; // type:func
func_809A959C_jp = 0x809A959C; // type:func
func_809A9650_jp = 0x809A9650; // type:func

// .data

_00889440_Profile = 0x809A9680; //
D_809A96A4_jp = 0x809A96A4; //
D_FLT_809A96C0_jp = 0x809A96C0; // type:f32
D_809A96D0_jp = 0x809A96D0; // type:u8
D_FLT_809A9760_jp = 0x809A9760; // type:f32
D_FLT_809A9790_jp = 0x809A9790; // type:f32
D_809A97C0_jp = 0x809A97C0; //
D_809A9918_jp = 0x809A9918; //
D_809A9958_jp = 0x809A9958; //
D_809A995C_jp = 0x809A995C; //
D_809A9980_jp = 0x809A9980; //
D_809A99A0_jp = 0x809A99A0; //
D_809A9AA0_jp = 0x809A9AA0; //
D_809A9AC0_jp = 0x809A9AC0; //
D_809A9B00_jp = 0x809A9B00; //
D_809A9B40_jp = 0x809A9B40; //
D_809A9B48_jp = 0x809A9B48; //
D_809A9B54_jp = 0x809A9B54; //
D_809A9B8C_jp = 0x809A9B8C; //
D_809A9B90_jp = 0x809A9B90; //
D_809A9BF0_jp = 0x809A9BF0; //
D_809A9C10_jp = 0x809A9C10; //
D_809A9C14_jp = 0x809A9C14; //
D_809A9C18_jp = 0x809A9C18; //
D_809A9C58_jp = 0x809A9C58; //
D_809A9C88_jp = 0x809A9C88; //
D_809A9CB8_jp = 0x809A9CB8; //
D_809A9CD8_jp = 0x809A9CD8; //
D_809A9CE8_jp = 0x809A9CE8; // type:u16
D_809A9CF0_jp = 0x809A9CF0; //
D_809A9CFC_jp = 0x809A9CFC; //
D_809A9D08_jp = 0x809A9D08; //
D_809A9D10_jp = 0x809A9D10; //
D_809A9D28_jp = 0x809A9D28; //
D_809A9D40_jp = 0x809A9D40; //
D_809A9D54_jp = 0x809A9D54; //
D_809A9D6C_jp = 0x809A9D6C; //
D_809A9D78_jp = 0x809A9D78; //
D_809A9D84_jp = 0x809A9D84; // type:u16
D_809A9D88_jp = 0x809A9D88; //
D_809A9D90_jp = 0x809A9D90; //
D_809A9D9C_jp = 0x809A9D9C; //
D_809A9DA8_jp = 0x809A9DA8; //
D_809A9DCC_jp = 0x809A9DCC; //
D_809A9E00_jp = 0x809A9E00; //
D_809A9EAC_jp = 0x809A9EAC; //

// .rodata

RO_FLT_809A9F60_jp = 0x809A9F60; // type:f32
RO_FLT_809A9F64_jp = 0x809A9F64; // type:f32
RO_FLT_809A9F68_jp = 0x809A9F68; // type:f32
RO_FLT_809A9F6C_jp = 0x809A9F6C; // type:f32

// .text

func_809AA4F0_jp = 0x809AA4F0; // type:func
func_809AA5D8_jp = 0x809AA5D8; // type:func
func_809AA604_jp = 0x809AA604; // type:func
func_809AA630_jp = 0x809AA630; // type:func
func_809AA65C_jp = 0x809AA65C; // type:func
func_809AA690_jp = 0x809AA690; // type:func
func_809AA734_jp = 0x809AA734; // type:func
func_809AA764_jp = 0x809AA764; // type:func
func_809AA7FC_jp = 0x809AA7FC; // type:func
func_809AA8C0_jp = 0x809AA8C0; // type:func
func_809AA928_jp = 0x809AA928; // type:func
func_809AA96C_jp = 0x809AA96C; // type:func
func_809AA9A8_jp = 0x809AA9A8; // type:func
func_809AA9D4_jp = 0x809AA9D4; // type:func
func_809AAA58_jp = 0x809AAA58; // type:func
func_809AAA80_jp = 0x809AAA80; // type:func
func_809AAB00_jp = 0x809AAB00; // type:func
func_809AABA8_jp = 0x809AABA8; // type:func
func_809AAC04_jp = 0x809AAC04; // type:func
func_809AAC24_jp = 0x809AAC24; // type:func
func_809AAC50_jp = 0x809AAC50; // type:func
func_809AAC7C_jp = 0x809AAC7C; // type:func
func_809AACA4_jp = 0x809AACA4; // type:func
func_809AAD30_jp = 0x809AAD30; // type:func
func_809AAD6C_jp = 0x809AAD6C; // type:func
func_809AADCC_jp = 0x809AADCC; // type:func
func_809AAE20_jp = 0x809AAE20; // type:func
func_809AAE68_jp = 0x809AAE68; // type:func
func_809AAEB8_jp = 0x809AAEB8; // type:func
func_809AAF8C_jp = 0x809AAF8C; // type:func
func_809AB0CC_jp = 0x809AB0CC; // type:func
func_809AB148_jp = 0x809AB148; // type:func
func_809AB158_jp = 0x809AB158; // type:func
func_809AB228_jp = 0x809AB228; // type:func
func_809AB320_jp = 0x809AB320; // type:func
func_809AB374_jp = 0x809AB374; // type:func
func_809AB41C_jp = 0x809AB41C; // type:func
func_809AB518_jp = 0x809AB518; // type:func
func_809AB5B4_jp = 0x809AB5B4; // type:func
func_809AB604_jp = 0x809AB604; // type:func
func_809AB658_jp = 0x809AB658; // type:func
func_809AB688_jp = 0x809AB688; // type:func
func_809AB6B8_jp = 0x809AB6B8; // type:func
func_809AB6E8_jp = 0x809AB6E8; // type:func
func_809AB7F8_jp = 0x809AB7F8; // type:func
func_809AB838_jp = 0x809AB838; // type:func
func_809AB878_jp = 0x809AB878; // type:func
func_809AB8F0_jp = 0x809AB8F0; // type:func
func_809AB91C_jp = 0x809AB91C; // type:func
func_809AB948_jp = 0x809AB948; // type:func
func_809ABC68_jp = 0x809ABC68; // type:func
func_809ABEBC_jp = 0x809ABEBC; // type:func
func_809ABF34_jp = 0x809ABF34; // type:func
func_809ABFA0_jp = 0x809ABFA0; // type:func
func_809AC140_jp = 0x809AC140; // type:func
func_809AC180_jp = 0x809AC180; // type:func
func_809AC1D8_jp = 0x809AC1D8; // type:func
func_809AC31C_jp = 0x809AC31C; // type:func
func_809AC41C_jp = 0x809AC41C; // type:func
func_809AC450_jp = 0x809AC450; // type:func
func_809AC4C8_jp = 0x809AC4C8; // type:func
func_809AC604_jp = 0x809AC604; // type:func
func_809AC65C_jp = 0x809AC65C; // type:func
func_809AC6C8_jp = 0x809AC6C8; // type:func
func_809AC714_jp = 0x809AC714; // type:func
func_809AC744_jp = 0x809AC744; // type:func
func_809AC80C_jp = 0x809AC80C; // type:func
func_809AC8A8_jp = 0x809AC8A8; // type:func
func_809ACAD0_jp = 0x809ACAD0; // type:func
func_809ACB44_jp = 0x809ACB44; // type:func
func_809ACC2C_jp = 0x809ACC2C; // type:func
func_809ACCC0_jp = 0x809ACCC0; // type:func
func_809ACD9C_jp = 0x809ACD9C; // type:func
func_809ACEAC_jp = 0x809ACEAC; // type:func
func_809ACEFC_jp = 0x809ACEFC; // type:func
func_809ACFC0_jp = 0x809ACFC0; // type:func
func_809AD170_jp = 0x809AD170; // type:func
func_809AD224_jp = 0x809AD224; // type:func
func_809AD3F4_jp = 0x809AD3F4; // type:func
func_809AD45C_jp = 0x809AD45C; // type:func
func_809AD4B4_jp = 0x809AD4B4; // type:func
func_809AD520_jp = 0x809AD520; // type:func
func_809AD58C_jp = 0x809AD58C; // type:func
func_809AD628_jp = 0x809AD628; // type:func
func_809AD65C_jp = 0x809AD65C; // type:func
func_809AD6F4_jp = 0x809AD6F4; // type:func
func_809AD74C_jp = 0x809AD74C; // type:func
func_809AD7C0_jp = 0x809AD7C0; // type:func
func_809AD7E4_jp = 0x809AD7E4; // type:func
func_809AD80C_jp = 0x809AD80C; // type:func
func_809AD844_jp = 0x809AD844; // type:func
func_809AD874_jp = 0x809AD874; // type:func
func_809AD8AC_jp = 0x809AD8AC; // type:func
func_809AD8DC_jp = 0x809AD8DC; // type:func
func_809AD90C_jp = 0x809AD90C; // type:func
func_809AD94C_jp = 0x809AD94C; // type:func
func_809AD97C_jp = 0x809AD97C; // type:func
func_809AD9AC_jp = 0x809AD9AC; // type:func
func_809ADA90_jp = 0x809ADA90; // type:func
func_809ADAC0_jp = 0x809ADAC0; // type:func
func_809ADB00_jp = 0x809ADB00; // type:func
func_809ADB38_jp = 0x809ADB38; // type:func
func_809ADB70_jp = 0x809ADB70; // type:func
func_809ADC58_jp = 0x809ADC58; // type:func
func_809ADC80_jp = 0x809ADC80; // type:func
func_809ADCD8_jp = 0x809ADCD8; // type:func
func_809ADD14_jp = 0x809ADD14; // type:func
func_809ADD24_jp = 0x809ADD24; // type:func
func_809ADD48_jp = 0x809ADD48; // type:func
func_809ADD78_jp = 0x809ADD78; // type:func
func_809ADD9C_jp = 0x809ADD9C; // type:func
func_809ADDC0_jp = 0x809ADDC0; // type:func
func_809ADDE4_jp = 0x809ADDE4; // type:func
func_809ADE08_jp = 0x809ADE08; // type:func
func_809ADE38_jp = 0x809ADE38; // type:func
func_809ADE68_jp = 0x809ADE68; // type:func
func_809ADEBC_jp = 0x809ADEBC; // type:func
func_809ADF90_jp = 0x809ADF90; // type:func

// .data

_0088DD00_Profile = 0x809ADFC0; //
D_809ADFE4_jp = 0x809ADFE4; //
D_809AE000_jp = 0x809AE000; //
D_809AE00C_jp = 0x809AE00C; //
D_809AE018_jp = 0x809AE018; // type:u8
D_FLT_809AE06C_jp = 0x809AE06C; // type:f32
D_FLT_809AE090_jp = 0x809AE090; // type:f32
D_809AE0B4_jp = 0x809AE0B4; //
D_809AE20C_jp = 0x809AE20C; //
D_809AE24C_jp = 0x809AE24C; //
D_809AE250_jp = 0x809AE250; //
D_809AE274_jp = 0x809AE274; //
D_809AE294_jp = 0x809AE294; //
D_809AE394_jp = 0x809AE394; //
D_809AE3B4_jp = 0x809AE3B4; //
D_809AE3F4_jp = 0x809AE3F4; //
D_809AE434_jp = 0x809AE434; //
D_809AE43C_jp = 0x809AE43C; //
D_809AE448_jp = 0x809AE448; //
D_809AE480_jp = 0x809AE480; //
D_809AE484_jp = 0x809AE484; //
D_809AE4E4_jp = 0x809AE4E4; //
D_809AE504_jp = 0x809AE504; //
D_809AE508_jp = 0x809AE508; //
D_809AE50C_jp = 0x809AE50C; //
D_809AE54C_jp = 0x809AE54C; //
D_809AE57C_jp = 0x809AE57C; //
D_809AE5AC_jp = 0x809AE5AC; //
D_809AE5CC_jp = 0x809AE5CC; //
D_809AE5DC_jp = 0x809AE5DC; // type:u16
D_809AE5E4_jp = 0x809AE5E4; //
D_809AE5F0_jp = 0x809AE5F0; //
D_809AE5FC_jp = 0x809AE5FC; //
D_809AE604_jp = 0x809AE604; //
D_809AE61C_jp = 0x809AE61C; //
D_809AE634_jp = 0x809AE634; //
D_809AE648_jp = 0x809AE648; //
D_809AE660_jp = 0x809AE660; //
D_809AE66C_jp = 0x809AE66C; //
D_809AE678_jp = 0x809AE678; // type:u16
D_809AE67C_jp = 0x809AE67C; //
D_809AE684_jp = 0x809AE684; //
D_809AE690_jp = 0x809AE690; //
D_809AE69C_jp = 0x809AE69C; //
D_809AE6C0_jp = 0x809AE6C0; //
D_809AE6F4_jp = 0x809AE6F4; //
D_809AE7A0_jp = 0x809AE7A0; //

// .rodata

RO_FLT_809AE850_jp = 0x809AE850; // type:f32
RO_FLT_809AE854_jp = 0x809AE854; // type:f32
RO_FLT_809AE858_jp = 0x809AE858; // type:f32
RO_FLT_809AE85C_jp = 0x809AE85C; // type:f32

// .text

func_809AEDF0_jp = 0x809AEDF0; // type:func
func_809AEEA4_jp = 0x809AEEA4; // type:func
func_809AEED0_jp = 0x809AEED0; // type:func
func_809AEEFC_jp = 0x809AEEFC; // type:func
func_809AEF28_jp = 0x809AEF28; // type:func
func_809AEF54_jp = 0x809AEF54; // type:func

// .data

_00892600_Profile = 0x809AEF80; //
D_809AEFA4_jp = 0x809AEFA4; //

// .text

func_809AF000_jp = 0x809AF000; // type:func
func_809AF104_jp = 0x809AF104; // type:func
func_809AF130_jp = 0x809AF130; // type:func
func_809AF184_jp = 0x809AF184; // type:func
func_809AF1B0_jp = 0x809AF1B0; // type:func
func_809AF23C_jp = 0x809AF23C; // type:func
func_809AF5E4_jp = 0x809AF5E4; // type:func
func_809AF628_jp = 0x809AF628; // type:func
func_809AF654_jp = 0x809AF654; // type:func
func_809AF680_jp = 0x809AF680; // type:func
func_809AF6A0_jp = 0x809AF6A0; // type:func
func_809AF72C_jp = 0x809AF72C; // type:func
func_809AF784_jp = 0x809AF784; // type:func
func_809AF7CC_jp = 0x809AF7CC; // type:func
func_809AF868_jp = 0x809AF868; // type:func
func_809AF8E8_jp = 0x809AF8E8; // type:func
func_809AF94C_jp = 0x809AF94C; // type:func
func_809AF97C_jp = 0x809AF97C; // type:func
func_809AF9E4_jp = 0x809AF9E4; // type:func
func_809AFA24_jp = 0x809AFA24; // type:func
func_809AFA58_jp = 0x809AFA58; // type:func
func_809AFAF0_jp = 0x809AFAF0; // type:func
func_809AFB80_jp = 0x809AFB80; // type:func
func_809AFBE8_jp = 0x809AFBE8; // type:func
func_809AFC34_jp = 0x809AFC34; // type:func
func_809AFC60_jp = 0x809AFC60; // type:func
func_809AFD38_jp = 0x809AFD38; // type:func
func_809AFE28_jp = 0x809AFE28; // type:func
func_809AFE70_jp = 0x809AFE70; // type:func
func_809AFF04_jp = 0x809AFF04; // type:func
func_809AFF9C_jp = 0x809AFF9C; // type:func
func_809B00B4_jp = 0x809B00B4; // type:func
func_809B013C_jp = 0x809B013C; // type:func
func_809B0188_jp = 0x809B0188; // type:func
func_809B01B8_jp = 0x809B01B8; // type:func
func_809B01F0_jp = 0x809B01F0; // type:func
func_809B0248_jp = 0x809B0248; // type:func
func_809B02D4_jp = 0x809B02D4; // type:func
func_809B0324_jp = 0x809B0324; // type:func
func_809B0350_jp = 0x809B0350; // type:func
func_809B0400_jp = 0x809B0400; // type:func
func_809B0480_jp = 0x809B0480; // type:func
func_809B050C_jp = 0x809B050C; // type:func
func_809B0558_jp = 0x809B0558; // type:func
func_809B058C_jp = 0x809B058C; // type:func
func_809B0624_jp = 0x809B0624; // type:func
func_809B0674_jp = 0x809B0674; // type:func
func_809B06AC_jp = 0x809B06AC; // type:func
func_809B06EC_jp = 0x809B06EC; // type:func
func_809B0730_jp = 0x809B0730; // type:func
func_809B07C8_jp = 0x809B07C8; // type:func
func_809B07F8_jp = 0x809B07F8; // type:func
func_809B0828_jp = 0x809B0828; // type:func
func_809B086C_jp = 0x809B086C; // type:func
func_809B08B0_jp = 0x809B08B0; // type:func
func_809B08C4_jp = 0x809B08C4; // type:func
func_809B08DC_jp = 0x809B08DC; // type:func
func_809B0900_jp = 0x809B0900; // type:func
func_809B0948_jp = 0x809B0948; // type:func
func_809B097C_jp = 0x809B097C; // type:func
func_809B0990_jp = 0x809B0990; // type:func
func_809B09C8_jp = 0x809B09C8; // type:func
func_809B09F8_jp = 0x809B09F8; // type:func
func_809B0A14_jp = 0x809B0A14; // type:func
func_809B0A44_jp = 0x809B0A44; // type:func
func_809B0B64_jp = 0x809B0B64; // type:func
func_809B0B94_jp = 0x809B0B94; // type:func
func_809B0BE8_jp = 0x809B0BE8; // type:func
func_809B0C80_jp = 0x809B0C80; // type:func

// .data

_00892810_Profile = 0x809B0CB0; //
D_809B0CD4_jp = 0x809B0CD4; //
D_809B0CF0_jp = 0x809B0CF0; //
D_809B0D28_jp = 0x809B0D28; //
D_809B0D30_jp = 0x809B0D30; //
D_809B0E00_jp = 0x809B0E00; // type:s8
D_809B0E04_jp = 0x809B0E04; //
D_809B0E0C_jp = 0x809B0E0C; //
D_809B0E10_jp = 0x809B0E10; //
D_809B0E14_jp = 0x809B0E14; //
D_809B0E54_jp = 0x809B0E54; //
D_809B0E60_jp = 0x809B0E60; //
D_FLT_809B0E6C_jp = 0x809B0E6C; // type:f32
D_809B0E74_jp = 0x809B0E74; //
D_809B0EFC_jp = 0x809B0EFC; //

// .rodata

RO_FLT_809B0F90_jp = 0x809B0F90; // type:f32
RO_FLT_809B0F94_jp = 0x809B0F94; // type:f32
RO_FLT_809B0F98_jp = 0x809B0F98; // type:f32
RO_FLT_809B0F9C_jp = 0x809B0F9C; // type:f32
RO_FLT_809B0FA0_jp = 0x809B0FA0; // type:f32
RO_FLT_809B0FA4_jp = 0x809B0FA4; // type:f32
RO_FLT_809B0FA8_jp = 0x809B0FA8; // type:f32
RO_FLT_809B0FAC_jp = 0x809B0FAC; // type:f32

// .text

func_809B1260_jp = 0x809B1260; // type:func
func_809B134C_jp = 0x809B134C; // type:func
func_809B1378_jp = 0x809B1378; // type:func
func_809B13AC_jp = 0x809B13AC; // type:func
func_809B13D8_jp = 0x809B13D8; // type:func
func_809B141C_jp = 0x809B141C; // type:func
D_809B15CC_jp = 0x809B15CC; //
func_809B17C4_jp = 0x809B17C4; // type:func
func_809B1808_jp = 0x809B1808; // type:func
func_809B1834_jp = 0x809B1834; // type:func
func_809B1860_jp = 0x809B1860; // type:func
func_809B1880_jp = 0x809B1880; // type:func
func_809B190C_jp = 0x809B190C; // type:func
func_809B1964_jp = 0x809B1964; // type:func
func_809B19AC_jp = 0x809B19AC; // type:func
func_809B1A88_jp = 0x809B1A88; // type:func
func_809B1B3C_jp = 0x809B1B3C; // type:func
func_809B1BD8_jp = 0x809B1BD8; // type:func
func_809B1C58_jp = 0x809B1C58; // type:func
func_809B1CBC_jp = 0x809B1CBC; // type:func
func_809B1CEC_jp = 0x809B1CEC; // type:func
func_809B1D54_jp = 0x809B1D54; // type:func
func_809B1D94_jp = 0x809B1D94; // type:func
func_809B1DEC_jp = 0x809B1DEC; // type:func
func_809B1E84_jp = 0x809B1E84; // type:func
func_809B1ECC_jp = 0x809B1ECC; // type:func
func_809B1F3C_jp = 0x809B1F3C; // type:func
func_809B1FA4_jp = 0x809B1FA4; // type:func
func_809B1FEC_jp = 0x809B1FEC; // type:func
func_809B2018_jp = 0x809B2018; // type:func
func_809B20BC_jp = 0x809B20BC; // type:func
func_809B2154_jp = 0x809B2154; // type:func
func_809B2294_jp = 0x809B2294; // type:func
func_809B230C_jp = 0x809B230C; // type:func
func_809B2358_jp = 0x809B2358; // type:func
func_809B2388_jp = 0x809B2388; // type:func
func_809B23C0_jp = 0x809B23C0; // type:func
func_809B2418_jp = 0x809B2418; // type:func
func_809B24A4_jp = 0x809B24A4; // type:func
func_809B24F4_jp = 0x809B24F4; // type:func
func_809B2520_jp = 0x809B2520; // type:func
func_809B25D0_jp = 0x809B25D0; // type:func
func_809B2650_jp = 0x809B2650; // type:func
func_809B26DC_jp = 0x809B26DC; // type:func
func_809B2728_jp = 0x809B2728; // type:func
func_809B275C_jp = 0x809B275C; // type:func
func_809B27F4_jp = 0x809B27F4; // type:func
func_809B2844_jp = 0x809B2844; // type:func
func_809B287C_jp = 0x809B287C; // type:func
func_809B28BC_jp = 0x809B28BC; // type:func
func_809B28EC_jp = 0x809B28EC; // type:func
func_809B2928_jp = 0x809B2928; // type:func
func_809B2960_jp = 0x809B2960; // type:func
func_809B2990_jp = 0x809B2990; // type:func
func_809B29A4_jp = 0x809B29A4; // type:func
func_809B29B8_jp = 0x809B29B8; // type:func
func_809B29D0_jp = 0x809B29D0; // type:func
func_809B29F4_jp = 0x809B29F4; // type:func
func_809B2A3C_jp = 0x809B2A3C; // type:func
func_809B2A70_jp = 0x809B2A70; // type:func
func_809B2A84_jp = 0x809B2A84; // type:func
func_809B2ABC_jp = 0x809B2ABC; // type:func
func_809B2AEC_jp = 0x809B2AEC; // type:func
func_809B2B08_jp = 0x809B2B08; // type:func
func_809B2B38_jp = 0x809B2B38; // type:func
func_809B2BB8_jp = 0x809B2BB8; // type:func
func_809B2BE8_jp = 0x809B2BE8; // type:func
func_809B2C3C_jp = 0x809B2C3C; // type:func
func_809B2CD4_jp = 0x809B2CD4; // type:func

// .data

_00894A70_Profile = 0x809B2D00; //
D_809B2D24_jp = 0x809B2D24; //
D_809B2D40_jp = 0x809B2D40; //
D_809B2E28_jp = 0x809B2E28; // type:s8
D_809B2E2C_jp = 0x809B2E2C; //
D_809B2E34_jp = 0x809B2E34; //
D_809B2E38_jp = 0x809B2E38; //
D_809B2E3C_jp = 0x809B2E3C; //
D_809B2E7C_jp = 0x809B2E7C; //
D_809B2E84_jp = 0x809B2E84; //
D_809B2E8C_jp = 0x809B2E8C; //
D_FLT_809B2E94_jp = 0x809B2E94; // type:f32
D_809B2E9C_jp = 0x809B2E9C; //
D_809B2F10_jp = 0x809B2F10; //

// .rodata

RO_FLT_809B2F90_jp = 0x809B2F90; // type:f32
RO_FLT_809B2F94_jp = 0x809B2F94; // type:f32
RO_FLT_809B2F98_jp = 0x809B2F98; // type:f32
RO_FLT_809B2F9C_jp = 0x809B2F9C; // type:f32
RO_FLT_809B2FA0_jp = 0x809B2FA0; // type:f32
RO_FLT_809B2FA4_jp = 0x809B2FA4; // type:f32
RO_FLT_809B2FA8_jp = 0x809B2FA8; // type:f32
RO_FLT_809B2FAC_jp = 0x809B2FAC; // type:f32

// .text

func_809B3220_jp = 0x809B3220; // type:func
func_809B3290_jp = 0x809B3290; // type:func
func_809B32BC_jp = 0x809B32BC; // type:func
func_809B3324_jp = 0x809B3324; // type:func
func_809B3350_jp = 0x809B3350; // type:func
func_809B3388_jp = 0x809B3388; // type:func
func_809B33C8_jp = 0x809B33C8; // type:func
func_809B3430_jp = 0x809B3430; // type:func
func_809B3464_jp = 0x809B3464; // type:func
func_809B34C4_jp = 0x809B34C4; // type:func
func_809B3530_jp = 0x809B3530; // type:func
func_809B3550_jp = 0x809B3550; // type:func
func_809B3560_jp = 0x809B3560; // type:func
func_809B3590_jp = 0x809B3590; // type:func
func_809B3630_jp = 0x809B3630; // type:func
func_809B36E8_jp = 0x809B36E8; // type:func
func_809B371C_jp = 0x809B371C; // type:func
func_809B3770_jp = 0x809B3770; // type:func
func_809B3884_jp = 0x809B3884; // type:func
func_809B38A0_jp = 0x809B38A0; // type:func
func_809B3918_jp = 0x809B3918; // type:func
func_809B3948_jp = 0x809B3948; // type:func
func_809B3988_jp = 0x809B3988; // type:func
func_809B39F4_jp = 0x809B39F4; // type:func
func_809B3A24_jp = 0x809B3A24; // type:func

// .data

_00896A30_Profile = 0x809B3A50; //
D_809B3A74_jp = 0x809B3A74; //
D_809B3A90_jp = 0x809B3A90; // type:s16
D_809B3A98_jp = 0x809B3A98; //
D_809B3AA0_jp = 0x809B3AA0; //
D_FLT_809B3AAC_jp = 0x809B3AAC; // type:f32
D_FLT_809B3ABC_jp = 0x809B3ABC; // type:f32
D_809B3ACC_jp = 0x809B3ACC; // type:s16
D_809B3AD4_jp = 0x809B3AD4; //
D_809B3B14_jp = 0x809B3B14; //
D_809B3B1C_jp = 0x809B3B1C; //

// .rodata

RO_FLT_809B3B30_jp = 0x809B3B30; // type:f32
RO_FLT_809B3B34_jp = 0x809B3B34; // type:f32

// .text

func_809B3C40_jp = 0x809B3C40; // type:func
func_809B3CB0_jp = 0x809B3CB0; // type:func
func_809B3CDC_jp = 0x809B3CDC; // type:func
func_809B3D44_jp = 0x809B3D44; // type:func
func_809B3D70_jp = 0x809B3D70; // type:func
func_809B3DA8_jp = 0x809B3DA8; // type:func
func_809B3DE8_jp = 0x809B3DE8; // type:func
func_809B3E5C_jp = 0x809B3E5C; // type:func
func_809B3E78_jp = 0x809B3E78; // type:func
func_809B3F10_jp = 0x809B3F10; // type:func
func_809B3F44_jp = 0x809B3F44; // type:func
func_809B3FB4_jp = 0x809B3FB4; // type:func
func_809B3FE8_jp = 0x809B3FE8; // type:func
func_809B4018_jp = 0x809B4018; // type:func
func_809B40B8_jp = 0x809B40B8; // type:func
func_809B40D8_jp = 0x809B40D8; // type:func
func_809B40E8_jp = 0x809B40E8; // type:func
func_809B4118_jp = 0x809B4118; // type:func
func_809B4200_jp = 0x809B4200; // type:func
func_809B423C_jp = 0x809B423C; // type:func
func_809B4294_jp = 0x809B4294; // type:func
func_809B4360_jp = 0x809B4360; // type:func
func_809B4394_jp = 0x809B4394; // type:func
func_809B43E8_jp = 0x809B43E8; // type:func
func_809B44FC_jp = 0x809B44FC; // type:func
func_809B4594_jp = 0x809B4594; // type:func
func_809B4624_jp = 0x809B4624; // type:func
func_809B4654_jp = 0x809B4654; // type:func
func_809B4694_jp = 0x809B4694; // type:func
func_809B4700_jp = 0x809B4700; // type:func
func_809B4730_jp = 0x809B4730; // type:func

// .data

_00897450_Profile = 0x809B4760; //
D_809B4784_jp = 0x809B4784; //
D_809B47A0_jp = 0x809B47A0; // type:s16
D_809B47B0_jp = 0x809B47B0; //
D_809B47B8_jp = 0x809B47B8; //
D_809B47D0_jp = 0x809B47D0; //
D_809B47D8_jp = 0x809B47D8; //
D_809B47E4_jp = 0x809B47E4; //
D_FLT_809B47FC_jp = 0x809B47FC; // type:f32
D_FLT_809B480C_jp = 0x809B480C; // type:f32
D_809B481C_jp = 0x809B481C; // type:s16
D_809B4824_jp = 0x809B4824; //
D_809B4894_jp = 0x809B4894; //
D_809B489C_jp = 0x809B489C; //

// .rodata

RO_FLT_809B48B0_jp = 0x809B48B0; // type:f32
RO_FLT_809B48B4_jp = 0x809B48B4; // type:f32

// .text

func_809B4A10_jp = 0x809B4A10; // type:func
func_809B4A80_jp = 0x809B4A80; // type:func
func_809B4AAC_jp = 0x809B4AAC; // type:func
func_809B4B14_jp = 0x809B4B14; // type:func
func_809B4B40_jp = 0x809B4B40; // type:func
func_809B4B78_jp = 0x809B4B78; // type:func
func_809B4BB8_jp = 0x809B4BB8; // type:func
func_809B4C18_jp = 0x809B4C18; // type:func
func_809B4D08_jp = 0x809B4D08; // type:func
func_809B4D68_jp = 0x809B4D68; // type:func
func_809B4DB8_jp = 0x809B4DB8; // type:func
func_809B4E34_jp = 0x809B4E34; // type:func
func_809B4E84_jp = 0x809B4E84; // type:func
func_809B4F0C_jp = 0x809B4F0C; // type:func
func_809B4F28_jp = 0x809B4F28; // type:func
func_809B4F90_jp = 0x809B4F90; // type:func
func_809B4FC4_jp = 0x809B4FC4; // type:func
func_809B5084_jp = 0x809B5084; // type:func
func_809B50F0_jp = 0x809B50F0; // type:func
func_809B5110_jp = 0x809B5110; // type:func
func_809B5120_jp = 0x809B5120; // type:func
func_809B5150_jp = 0x809B5150; // type:func
func_809B51BC_jp = 0x809B51BC; // type:func
func_809B5214_jp = 0x809B5214; // type:func
func_809B5300_jp = 0x809B5300; // type:func
func_809B5334_jp = 0x809B5334; // type:func
func_809B5388_jp = 0x809B5388; // type:func
func_809B549C_jp = 0x809B549C; // type:func
func_809B5530_jp = 0x809B5530; // type:func
func_809B55A8_jp = 0x809B55A8; // type:func
func_809B55D8_jp = 0x809B55D8; // type:func
func_809B5618_jp = 0x809B5618; // type:func
func_809B5684_jp = 0x809B5684; // type:func
func_809B56B4_jp = 0x809B56B4; // type:func

// .data

_00898220_Profile = 0x809B56E0; //
D_809B5704_jp = 0x809B5704; //
D_809B5720_jp = 0x809B5720; // type:s16
D_809B572C_jp = 0x809B572C; //
D_809B5744_jp = 0x809B5744; //
D_809B5750_jp = 0x809B5750; //
D_809B575C_jp = 0x809B575C; //
D_809B5770_jp = 0x809B5770; //
D_809B5778_jp = 0x809B5778; //
D_FLT_809B5784_jp = 0x809B5784; // type:f32
D_FLT_809B5794_jp = 0x809B5794; // type:f32
D_809B57A4_jp = 0x809B57A4; // type:s16
D_809B57AC_jp = 0x809B57AC; //
D_809B57FC_jp = 0x809B57FC; //
D_809B5804_jp = 0x809B5804; //

// .rodata

RO_FLT_809B5810_jp = 0x809B5810; // type:f32
RO_FLT_809B5814_jp = 0x809B5814; // type:f32
RO_FLT_809B5818_jp = 0x809B5818; // type:f32
RO_FLT_809B581C_jp = 0x809B581C; // type:f32
RO_FLT_809B5820_jp = 0x809B5820; // type:f32

// .text

func_809B59A0_jp = 0x809B59A0; // type:func
func_809B5A10_jp = 0x809B5A10; // type:func
func_809B5A3C_jp = 0x809B5A3C; // type:func
func_809B5AA4_jp = 0x809B5AA4; // type:func
func_809B5AD0_jp = 0x809B5AD0; // type:func
func_809B5B08_jp = 0x809B5B08; // type:func
func_809B5B48_jp = 0x809B5B48; // type:func
func_809B5BC0_jp = 0x809B5BC0; // type:func
func_809B5BF4_jp = 0x809B5BF4; // type:func
func_809B5C24_jp = 0x809B5C24; // type:func
func_809B5C80_jp = 0x809B5C80; // type:func
func_809B5D00_jp = 0x809B5D00; // type:func
func_809B5D20_jp = 0x809B5D20; // type:func
func_809B5D30_jp = 0x809B5D30; // type:func
func_809B5D60_jp = 0x809B5D60; // type:func
func_809B5E00_jp = 0x809B5E00; // type:func
func_809B5EB8_jp = 0x809B5EB8; // type:func
func_809B5F60_jp = 0x809B5F60; // type:func
func_809B5FA4_jp = 0x809B5FA4; // type:func
func_809B5FD8_jp = 0x809B5FD8; // type:func
func_809B602C_jp = 0x809B602C; // type:func
func_809B6140_jp = 0x809B6140; // type:func
func_809B615C_jp = 0x809B615C; // type:func
func_809B61CC_jp = 0x809B61CC; // type:func
func_809B6210_jp = 0x809B6210; // type:func
func_809B6288_jp = 0x809B6288; // type:func
func_809B62B8_jp = 0x809B62B8; // type:func
func_809B62F8_jp = 0x809B62F8; // type:func
func_809B6364_jp = 0x809B6364; // type:func
func_809B6394_jp = 0x809B6394; // type:func
func_809B6690_jp = 0x809B6690; // type:func

// .data

_008991B0_Profile = 0x809B66E0; //
D_809B6704_jp = 0x809B6704; //
D_809B6720_jp = 0x809B6720; // type:s16
D_809B6730_jp = 0x809B6730; //
D_809B6740_jp = 0x809B6740; //
D_FLT_809B674C_jp = 0x809B674C; // type:f32
D_FLT_809B675C_jp = 0x809B675C; // type:f32
D_809B676C_jp = 0x809B676C; // type:s16
D_809B6774_jp = 0x809B6774; //
D_809B67E4_jp = 0x809B67E4; //
D_809B67EC_jp = 0x809B67EC; //

// .rodata

RO_FLT_809B6800_jp = 0x809B6800; // type:f32
RO_FLT_809B6804_jp = 0x809B6804; // type:f32
RO_FLT_809B6808_jp = 0x809B6808; // type:f32

// .bss

B_809B6810_jp = 0x809B6810; // type:s8
B_809B6818_jp = 0x809B6818; //
B_809B681C_jp = 0x809B681C; //

// .text

func_809B69B0_jp = 0x809B69B0; // type:func
func_809B6AD4_jp = 0x809B6AD4; // type:func
func_809B6B00_jp = 0x809B6B00; // type:func
func_809B6B2C_jp = 0x809B6B2C; // type:func
func_809B6B58_jp = 0x809B6B58; // type:func
func_809B6C34_jp = 0x809B6C34; // type:func
func_809B6C80_jp = 0x809B6C80; // type:func
func_809B6D18_jp = 0x809B6D18; // type:func
func_809B6E08_jp = 0x809B6E08; // type:func
func_809B6E58_jp = 0x809B6E58; // type:func
func_809B6E9C_jp = 0x809B6E9C; // type:func
func_809B6ED8_jp = 0x809B6ED8; // type:func
func_809B6F04_jp = 0x809B6F04; // type:func
func_809B6F88_jp = 0x809B6F88; // type:func
func_809B6FB0_jp = 0x809B6FB0; // type:func
func_809B7030_jp = 0x809B7030; // type:func
func_809B70D8_jp = 0x809B70D8; // type:func
func_809B7134_jp = 0x809B7134; // type:func
func_809B7154_jp = 0x809B7154; // type:func
func_809B7180_jp = 0x809B7180; // type:func
func_809B71AC_jp = 0x809B71AC; // type:func
func_809B7238_jp = 0x809B7238; // type:func
func_809B7274_jp = 0x809B7274; // type:func
func_809B72D4_jp = 0x809B72D4; // type:func
func_809B7328_jp = 0x809B7328; // type:func
func_809B7370_jp = 0x809B7370; // type:func
func_809B73C0_jp = 0x809B73C0; // type:func
func_809B7494_jp = 0x809B7494; // type:func
func_809B765C_jp = 0x809B765C; // type:func
func_809B76D8_jp = 0x809B76D8; // type:func
func_809B76E8_jp = 0x809B76E8; // type:func
func_809B77B8_jp = 0x809B77B8; // type:func
func_809B78B0_jp = 0x809B78B0; // type:func
func_809B7904_jp = 0x809B7904; // type:func
func_809B79AC_jp = 0x809B79AC; // type:func
func_809B7AA8_jp = 0x809B7AA8; // type:func
func_809B7B44_jp = 0x809B7B44; // type:func
func_809B7B94_jp = 0x809B7B94; // type:func
func_809B7BE8_jp = 0x809B7BE8; // type:func
func_809B7C08_jp = 0x809B7C08; // type:func
func_809B7C38_jp = 0x809B7C38; // type:func
func_809B7C68_jp = 0x809B7C68; // type:func
func_809B7D78_jp = 0x809B7D78; // type:func
func_809B7DB8_jp = 0x809B7DB8; // type:func
func_809B7DF8_jp = 0x809B7DF8; // type:func
func_809B7E70_jp = 0x809B7E70; // type:func
func_809B7E9C_jp = 0x809B7E9C; // type:func
func_809B7EC8_jp = 0x809B7EC8; // type:func
func_809B7F2C_jp = 0x809B7F2C; // type:func
func_809B7F4C_jp = 0x809B7F4C; // type:func
func_809B7F6C_jp = 0x809B7F6C; // type:func
func_809B7F8C_jp = 0x809B7F8C; // type:func
func_809B80C4_jp = 0x809B80C4; // type:func
func_809B8168_jp = 0x809B8168; // type:func
func_809B837C_jp = 0x809B837C; // type:func
func_809B844C_jp = 0x809B844C; // type:func
func_809B84A8_jp = 0x809B84A8; // type:func
func_809B8520_jp = 0x809B8520; // type:func
func_809B8564_jp = 0x809B8564; // type:func
func_809B85BC_jp = 0x809B85BC; // type:func
func_809B85F0_jp = 0x809B85F0; // type:func
func_809B8668_jp = 0x809B8668; // type:func
func_809B87A4_jp = 0x809B87A4; // type:func
func_809B87FC_jp = 0x809B87FC; // type:func
func_809B8868_jp = 0x809B8868; // type:func
func_809B88B4_jp = 0x809B88B4; // type:func
func_809B88E4_jp = 0x809B88E4; // type:func
func_809B89AC_jp = 0x809B89AC; // type:func
func_809B8A48_jp = 0x809B8A48; // type:func
func_809B8C70_jp = 0x809B8C70; // type:func
func_809B8CE4_jp = 0x809B8CE4; // type:func
func_809B8DCC_jp = 0x809B8DCC; // type:func
func_809B8E60_jp = 0x809B8E60; // type:func
func_809B8F3C_jp = 0x809B8F3C; // type:func
func_809B904C_jp = 0x809B904C; // type:func
func_809B909C_jp = 0x809B909C; // type:func
func_809B9160_jp = 0x809B9160; // type:func
func_809B9310_jp = 0x809B9310; // type:func
func_809B93C4_jp = 0x809B93C4; // type:func
func_809B9594_jp = 0x809B9594; // type:func
func_809B95FC_jp = 0x809B95FC; // type:func
func_809B9654_jp = 0x809B9654; // type:func
func_809B96C0_jp = 0x809B96C0; // type:func
func_809B972C_jp = 0x809B972C; // type:func
func_809B97C8_jp = 0x809B97C8; // type:func
func_809B97FC_jp = 0x809B97FC; // type:func
func_809B989C_jp = 0x809B989C; // type:func
func_809B98CC_jp = 0x809B98CC; // type:func
func_809B9924_jp = 0x809B9924; // type:func
func_809B9990_jp = 0x809B9990; // type:func
func_809B99B4_jp = 0x809B99B4; // type:func
func_809B99DC_jp = 0x809B99DC; // type:func
func_809B9A14_jp = 0x809B9A14; // type:func
func_809B9A44_jp = 0x809B9A44; // type:func
func_809B9A74_jp = 0x809B9A74; // type:func
func_809B9AB4_jp = 0x809B9AB4; // type:func
func_809B9AE4_jp = 0x809B9AE4; // type:func
func_809B9B14_jp = 0x809B9B14; // type:func
func_809B9BF8_jp = 0x809B9BF8; // type:func
func_809B9C28_jp = 0x809B9C28; // type:func
func_809B9C68_jp = 0x809B9C68; // type:func
func_809B9CA0_jp = 0x809B9CA0; // type:func
func_809B9CD8_jp = 0x809B9CD8; // type:func
func_809B9DC0_jp = 0x809B9DC0; // type:func
func_809B9DE8_jp = 0x809B9DE8; // type:func
func_809B9E40_jp = 0x809B9E40; // type:func
func_809B9E7C_jp = 0x809B9E7C; // type:func
func_809B9E8C_jp = 0x809B9E8C; // type:func
func_809B9EB0_jp = 0x809B9EB0; // type:func
func_809B9EE0_jp = 0x809B9EE0; // type:func
func_809B9F04_jp = 0x809B9F04; // type:func
func_809B9F28_jp = 0x809B9F28; // type:func
func_809B9F4C_jp = 0x809B9F4C; // type:func
func_809B9F70_jp = 0x809B9F70; // type:func
func_809B9FA0_jp = 0x809B9FA0; // type:func
func_809B9FD0_jp = 0x809B9FD0; // type:func
func_809BA024_jp = 0x809BA024; // type:func
func_809BA100_jp = 0x809BA100; // type:func

// .data

D_809BA130_jp = 0x809BA130; //
_0089A1B0_Profile = 0x809BA134; //
D_809BA158_jp = 0x809BA158; //
D_809BA174_jp = 0x809BA174; //
D_809BA17C_jp = 0x809BA17C; // type:u8
D_809BA184_jp = 0x809BA184; //
D_809BA284_jp = 0x809BA284; //
D_809BA384_jp = 0x809BA384; //
D_809BA484_jp = 0x809BA484; //
D_809BA584_jp = 0x809BA584; //
D_809BA594_jp = 0x809BA594; //
D_809BB7A4_jp = 0x809BB7A4; //
D_809BC5B4_jp = 0x809BC5B4; //
D_809BC678_jp = 0x809BC678; //
D_809BC69C_jp = 0x809BC69C; //
D_809BC6AC_jp = 0x809BC6AC; //
D_809BC6BC_jp = 0x809BC6BC; //
D_809BC7CC_jp = 0x809BC7CC; //
D_809BC8DC_jp = 0x809BC8DC; //
D_809BC9CC_jp = 0x809BC9CC; //
D_809BCABC_jp = 0x809BCABC; //
D_809BCAF4_jp = 0x809BCAF4; //
D_809BCB2C_jp = 0x809BCB2C; //
D_809BCB44_jp = 0x809BCB44; //
D_809BCB5C_jp = 0x809BCB5C; //
D_809BCB6C_jp = 0x809BCB6C; //
D_809BCB7C_jp = 0x809BCB7C; // type:u8
D_809BCB80_jp = 0x809BCB80; //
D_809BCCE0_jp = 0x809BCCE0; //
D_809BCD20_jp = 0x809BCD20; //
D_809BCD24_jp = 0x809BCD24; //
D_809BCD48_jp = 0x809BCD48; //
D_809BCD68_jp = 0x809BCD68; //
D_809BCE68_jp = 0x809BCE68; //
D_809BCE88_jp = 0x809BCE88; //
D_809BCEC8_jp = 0x809BCEC8; //
D_809BCF08_jp = 0x809BCF08; //
D_809BCF10_jp = 0x809BCF10; //
D_809BCF1C_jp = 0x809BCF1C; //
D_809BCF54_jp = 0x809BCF54; //
D_809BCF58_jp = 0x809BCF58; //
D_809BCFB8_jp = 0x809BCFB8; //
D_809BCFD8_jp = 0x809BCFD8; //
D_809BCFDC_jp = 0x809BCFDC; //
D_809BCFE0_jp = 0x809BCFE0; //
D_809BD020_jp = 0x809BD020; //
D_809BD050_jp = 0x809BD050; //
D_809BD080_jp = 0x809BD080; //
D_809BD0A0_jp = 0x809BD0A0; //
D_809BD0B0_jp = 0x809BD0B0; // type:u16
D_809BD0B8_jp = 0x809BD0B8; //
D_809BD0C0_jp = 0x809BD0C0; //
D_809BD0C8_jp = 0x809BD0C8; //
D_809BD0D0_jp = 0x809BD0D0; //
D_809BD0D8_jp = 0x809BD0D8; //
D_809BD0F0_jp = 0x809BD0F0; //
D_809BD108_jp = 0x809BD108; //
D_809BD11C_jp = 0x809BD11C; //
D_809BD134_jp = 0x809BD134; //
D_809BD140_jp = 0x809BD140; //
D_809BD14C_jp = 0x809BD14C; // type:u16
D_809BD150_jp = 0x809BD150; //
D_809BD158_jp = 0x809BD158; //
D_809BD164_jp = 0x809BD164; //
D_809BD170_jp = 0x809BD170; //
D_809BD194_jp = 0x809BD194; //
D_809BD1B8_jp = 0x809BD1B8; //
D_809BD1DC_jp = 0x809BD1DC; //
D_809BD28C_jp = 0x809BD28C; //

// .rodata

RO_FLT_809BD340_jp = 0x809BD340; // type:f32
RO_FLT_809BD344_jp = 0x809BD344; // type:f32
RO_FLT_809BD348_jp = 0x809BD348; // type:f32
RO_FLT_809BD34C_jp = 0x809BD34C; // type:f32

// .bss

B_809BD350_jp = 0x809BD350; //
D_809BD87C_jp = 0x809BD87C; // type:s16

// .text

func_809BD970_jp = 0x809BD970; // type:func
func_809BDAF0_jp = 0x809BDAF0; // type:func
func_809BDB1C_jp = 0x809BDB1C; // type:func
func_809BDB48_jp = 0x809BDB48; // type:func
func_809BDB74_jp = 0x809BDB74; // type:func
func_809BDC54_jp = 0x809BDC54; // type:func
func_809BDCC4_jp = 0x809BDCC4; // type:func
func_809BDE58_jp = 0x809BDE58; // type:func
func_809BDE78_jp = 0x809BDE78; // type:func
func_809BDEA8_jp = 0x809BDEA8; // type:func
func_809BDF08_jp = 0x809BDF08; // type:func
func_809BDF74_jp = 0x809BDF74; // type:func
func_809BDFA4_jp = 0x809BDFA4; // type:func
func_809BE04C_jp = 0x809BE04C; // type:func
func_809BE104_jp = 0x809BE104; // type:func
func_809BE194_jp = 0x809BE194; // type:func
func_809BE1D0_jp = 0x809BE1D0; // type:func
func_809BE20C_jp = 0x809BE20C; // type:func
func_809BE27C_jp = 0x809BE27C; // type:func
func_809BE2EC_jp = 0x809BE2EC; // type:func
func_809BE30C_jp = 0x809BE30C; // type:func
func_809BE350_jp = 0x809BE350; // type:func
func_809BE384_jp = 0x809BE384; // type:func
func_809BE3D8_jp = 0x809BE3D8; // type:func
func_809BE548_jp = 0x809BE548; // type:func

// .data

_008A1160_Profile = 0x809BE580; //
D_809BE5A4_jp = 0x809BE5A4; // type:u8
D_809BE5A8_jp = 0x809BE5A8; // type:u8
D_809BE5AC_jp = 0x809BE5AC; //
D_809BE5C8_jp = 0x809BE5C8; //
D_809BE5DC_jp = 0x809BE5DC; //
D_809BE5E4_jp = 0x809BE5E4; //
D_809BE5EC_jp = 0x809BE5EC; // type:u8
D_809BE5F0_jp = 0x809BE5F0; // type:u8
D_809BE5F4_jp = 0x809BE5F4; //

// .text

func_809BE720_jp = 0x809BE720; // type:func
func_809BE8C4_jp = 0x809BE8C4; // type:func
func_809BE8F0_jp = 0x809BE8F0; // type:func
func_809BE91C_jp = 0x809BE91C; // type:func
func_809BE948_jp = 0x809BE948; // type:func
func_809BE9D8_jp = 0x809BE9D8; // type:func
func_809BEA0C_jp = 0x809BEA0C; // type:func
func_809BEA28_jp = 0x809BEA28; // type:func
func_809BEA58_jp = 0x809BEA58; // type:func
func_809BEA98_jp = 0x809BEA98; // type:func
func_809BEB04_jp = 0x809BEB04; // type:func
func_809BEB34_jp = 0x809BEB34; // type:func
func_809BEB98_jp = 0x809BEB98; // type:func
func_809BEC44_jp = 0x809BEC44; // type:func
func_809BECB4_jp = 0x809BECB4; // type:func
func_809BECF8_jp = 0x809BECF8; // type:func
func_809BED64_jp = 0x809BED64; // type:func
func_809BEDE4_jp = 0x809BEDE4; // type:func
func_809BEE64_jp = 0x809BEE64; // type:func
func_809BEF0C_jp = 0x809BEF0C; // type:func
func_809BEFC4_jp = 0x809BEFC4; // type:func
func_809BF02C_jp = 0x809BF02C; // type:func
func_809BF070_jp = 0x809BF070; // type:func
func_809BF12C_jp = 0x809BF12C; // type:func
func_809BF1E8_jp = 0x809BF1E8; // type:func
func_809BF244_jp = 0x809BF244; // type:func
func_809BF3E4_jp = 0x809BF3E4; // type:func
func_809BF4C0_jp = 0x809BF4C0; // type:func
func_809BF528_jp = 0x809BF528; // type:func
func_809BF584_jp = 0x809BF584; // type:func
func_809BF690_jp = 0x809BF690; // type:func
func_809BF7D4_jp = 0x809BF7D4; // type:func
func_809BF824_jp = 0x809BF824; // type:func
func_809BF864_jp = 0x809BF864; // type:func
func_809BF8A4_jp = 0x809BF8A4; // type:func
func_809BF92C_jp = 0x809BF92C; // type:func
func_809BFAEC_jp = 0x809BFAEC; // type:func
func_809BFBB4_jp = 0x809BFBB4; // type:func
func_809BFD44_jp = 0x809BFD44; // type:func
func_809BFDF4_jp = 0x809BFDF4; // type:func
func_809BFE9C_jp = 0x809BFE9C; // type:func
func_809BFFA4_jp = 0x809BFFA4; // type:func
func_809C0050_jp = 0x809C0050; // type:func
func_809C01A8_jp = 0x809C01A8; // type:func
func_809C0270_jp = 0x809C0270; // type:func
func_809C02BC_jp = 0x809C02BC; // type:func
func_809C0308_jp = 0x809C0308; // type:func
func_809C03B0_jp = 0x809C03B0; // type:func
func_809C0510_jp = 0x809C0510; // type:func
func_809C05BC_jp = 0x809C05BC; // type:func
func_809C0670_jp = 0x809C0670; // type:func
func_809C0854_jp = 0x809C0854; // type:func
func_809C08AC_jp = 0x809C08AC; // type:func
func_809C0934_jp = 0x809C0934; // type:func
func_809C0964_jp = 0x809C0964; // type:func
func_809C09E4_jp = 0x809C09E4; // type:func
func_809C0A08_jp = 0x809C0A08; // type:func
func_809C0A38_jp = 0x809C0A38; // type:func
func_809C0A6C_jp = 0x809C0A6C; // type:func
func_809C0A98_jp = 0x809C0A98; // type:func
func_809C0ACC_jp = 0x809C0ACC; // type:func
func_809C0B24_jp = 0x809C0B24; // type:func
func_809C0B94_jp = 0x809C0B94; // type:func

// .data

_008A1F10_Profile = 0x809C0BC0; //
D_809C0BE4_jp = 0x809C0BE4; // type:u8
D_809C0BE8_jp = 0x809C0BE8; // type:u8
D_809C0BEC_jp = 0x809C0BEC; //
D_809C0C08_jp = 0x809C0C08; //
D_809C0C20_jp = 0x809C0C20; //
D_809C0C28_jp = 0x809C0C28; //
D_809C0C30_jp = 0x809C0C30; // type:u8
D_809C0C34_jp = 0x809C0C34; // type:u8
D_809C0C38_jp = 0x809C0C38; //
D_809C0C3C_jp = 0x809C0C3C; //
D_809C0C48_jp = 0x809C0C48; //
D_809C0C54_jp = 0x809C0C54; //
D_809C0C60_jp = 0x809C0C60; //
D_809C0C6C_jp = 0x809C0C6C; //
D_809C0C70_jp = 0x809C0C70; // type:s16
D_809C0C78_jp = 0x809C0C78; // type:s16
D_809C0C80_jp = 0x809C0C80; // type:u8
D_809C0C84_jp = 0x809C0C84; //
D_809C0C90_jp = 0x809C0C90; //
D_809C0C9C_jp = 0x809C0C9C; //
D_809C0CA8_jp = 0x809C0CA8; //
D_809C0CB4_jp = 0x809C0CB4; //
D_809C0CC4_jp = 0x809C0CC4; //
D_809C0CD8_jp = 0x809C0CD8; //
D_809C0CEC_jp = 0x809C0CEC; //
D_809C0CF8_jp = 0x809C0CF8; //
D_809C0D04_jp = 0x809C0D04; //
D_809C0D18_jp = 0x809C0D18; //
D_809C0D2C_jp = 0x809C0D2C; //
D_809C0D9C_jp = 0x809C0D9C; //

// .rodata

jtbl_809C0E10_jp = 0x809C0E10; // type:jtbl

// .text

func_809C1150_jp = 0x809C1150; // type:func
func_809C128C_jp = 0x809C128C; // type:func
func_809C1300_jp = 0x809C1300; // type:func
func_809C132C_jp = 0x809C132C; // type:func
func_809C1358_jp = 0x809C1358; // type:func
func_809C14D0_jp = 0x809C14D0; // type:func
func_809C1550_jp = 0x809C1550; // type:func
func_809C1580_jp = 0x809C1580; // type:func
func_809C15B0_jp = 0x809C15B0; // type:func
func_809C15F0_jp = 0x809C15F0; // type:func
func_809C165C_jp = 0x809C165C; // type:func
func_809C168C_jp = 0x809C168C; // type:func
func_809C16D8_jp = 0x809C16D8; // type:func
func_809C1704_jp = 0x809C1704; // type:func
func_809C1798_jp = 0x809C1798; // type:func
func_809C181C_jp = 0x809C181C; // type:func
func_809C18B4_jp = 0x809C18B4; // type:func
func_809C190C_jp = 0x809C190C; // type:func
func_809C19AC_jp = 0x809C19AC; // type:func
func_809C1A48_jp = 0x809C1A48; // type:func
func_809C1B4C_jp = 0x809C1B4C; // type:func
func_809C1C00_jp = 0x809C1C00; // type:func
func_809C1C6C_jp = 0x809C1C6C; // type:func
func_809C1D28_jp = 0x809C1D28; // type:func
D_809C1D2C_jp = 0x809C1D2C; //
D_809C1D44_jp = 0x809C1D44; //
func_809C1D48_jp = 0x809C1D48; // type:func
D_809C1D5C_jp = 0x809C1D5C; //
func_809C1D74_jp = 0x809C1D74; // type:func

// .data

_008A4940_Profile = 0x809C1DA0; //
D_809C1DC4_jp = 0x809C1DC4; //
D_809C1DE0_jp = 0x809C1DE0; //
D_809C1DE8_jp = 0x809C1DE8; //
D_809C1DF0_jp = 0x809C1DF0; //
D_809C1E10_jp = 0x809C1E10; //
D_809C1E18_jp = 0x809C1E18; //
D_809C1E68_jp = 0x809C1E68; //

// .text

func_809C1F70_jp = 0x809C1F70; // type:func
func_809C1FFC_jp = 0x809C1FFC; // type:func
func_809C2028_jp = 0x809C2028; // type:func
func_809C2054_jp = 0x809C2054; // type:func
func_809C2080_jp = 0x809C2080; // type:func
func_809C20BC_jp = 0x809C20BC; // type:func
func_809C20FC_jp = 0x809C20FC; // type:func
func_809C211C_jp = 0x809C211C; // type:func
func_809C2148_jp = 0x809C2148; // type:func
func_809C2174_jp = 0x809C2174; // type:func
func_809C2230_jp = 0x809C2230; // type:func
func_809C22D8_jp = 0x809C22D8; // type:func
func_809C23E4_jp = 0x809C23E4; // type:func
func_809C24FC_jp = 0x809C24FC; // type:func
func_809C2568_jp = 0x809C2568; // type:func
func_809C2690_jp = 0x809C2690; // type:func
func_809C2720_jp = 0x809C2720; // type:func
func_809C2810_jp = 0x809C2810; // type:func
func_809C288C_jp = 0x809C288C; // type:func
func_809C289C_jp = 0x809C289C; // type:func
func_809C28F8_jp = 0x809C28F8; // type:func
func_809C2940_jp = 0x809C2940; // type:func
func_809C2994_jp = 0x809C2994; // type:func
func_809C2A74_jp = 0x809C2A74; // type:func
func_809C2AD8_jp = 0x809C2AD8; // type:func
func_809C2C30_jp = 0x809C2C30; // type:func
func_809C2C94_jp = 0x809C2C94; // type:func
func_809C2CF8_jp = 0x809C2CF8; // type:func
func_809C2D5C_jp = 0x809C2D5C; // type:func
func_809C2DC0_jp = 0x809C2DC0; // type:func
func_809C2E54_jp = 0x809C2E54; // type:func
func_809C2FD4_jp = 0x809C2FD4; // type:func
func_809C3020_jp = 0x809C3020; // type:func
func_809C3050_jp = 0x809C3050; // type:func
func_809C3098_jp = 0x809C3098; // type:func
func_809C3144_jp = 0x809C3144; // type:func

// .data

_008A5760_Profile = 0x809C3170; //
D_809C3194_jp = 0x809C3194; //
D_809C31B0_jp = 0x809C31B0; //
D_FLT_809C31D4_jp = 0x809C31D4; // type:f32
D_FLT_809C31E4_jp = 0x809C31E4; // type:f32
D_809C31F8_jp = 0x809C31F8; //
D_809C3204_jp = 0x809C3204; //
D_809C3228_jp = 0x809C3228; //

// .rodata

RO_FLT_809C3250_jp = 0x809C3250; // type:f32
RO_FLT_809C3254_jp = 0x809C3254; // type:f32
RO_FLT_809C3258_jp = 0x809C3258; // type:f32
RO_FLT_809C325C_jp = 0x809C325C; // type:f32
RO_FLT_809C3260_jp = 0x809C3260; // type:f32
RO_FLT_809C3264_jp = 0x809C3264; // type:f32
RO_FLT_809C3268_jp = 0x809C3268; // type:f32

// .text

func_809C3420_jp = 0x809C3420; // type:func
func_809C34E4_jp = 0x809C34E4; // type:func
func_809C3510_jp = 0x809C3510; // type:func
func_809C3554_jp = 0x809C3554; // type:func
func_809C3580_jp = 0x809C3580; // type:func
func_809C35C0_jp = 0x809C35C0; // type:func
func_809C360C_jp = 0x809C360C; // type:func
func_809C3644_jp = 0x809C3644; // type:func
func_809C3708_jp = 0x809C3708; // type:func
func_809C3770_jp = 0x809C3770; // type:func
func_809C37F8_jp = 0x809C37F8; // type:func
func_809C3868_jp = 0x809C3868; // type:func
func_809C3938_jp = 0x809C3938; // type:func
func_809C39AC_jp = 0x809C39AC; // type:func
func_809C3A54_jp = 0x809C3A54; // type:func
func_809C3B60_jp = 0x809C3B60; // type:func
func_809C3BA0_jp = 0x809C3BA0; // type:func
func_809C3BE8_jp = 0x809C3BE8; // type:func
func_809C3CF8_jp = 0x809C3CF8; // type:func
func_809C3D58_jp = 0x809C3D58; // type:func
func_809C3DBC_jp = 0x809C3DBC; // type:func
func_809C3E00_jp = 0x809C3E00; // type:func
func_809C3E44_jp = 0x809C3E44; // type:func
func_809C3E84_jp = 0x809C3E84; // type:func
func_809C3EC0_jp = 0x809C3EC0; // type:func
func_809C3F0C_jp = 0x809C3F0C; // type:func
func_809C3F94_jp = 0x809C3F94; // type:func
func_809C3FEC_jp = 0x809C3FEC; // type:func
func_809C403C_jp = 0x809C403C; // type:func
func_809C40B4_jp = 0x809C40B4; // type:func
func_809C419C_jp = 0x809C419C; // type:func
func_809C41EC_jp = 0x809C41EC; // type:func
func_809C4284_jp = 0x809C4284; // type:func
func_809C42D4_jp = 0x809C42D4; // type:func
func_809C4338_jp = 0x809C4338; // type:func
func_809C43CC_jp = 0x809C43CC; // type:func
func_809C44A0_jp = 0x809C44A0; // type:func
func_809C4500_jp = 0x809C4500; // type:func
func_809C45C8_jp = 0x809C45C8; // type:func
func_809C4610_jp = 0x809C4610; // type:func
func_809C46C8_jp = 0x809C46C8; // type:func
func_809C471C_jp = 0x809C471C; // type:func
func_809C4884_jp = 0x809C4884; // type:func
func_809C4914_jp = 0x809C4914; // type:func
func_809C49D8_jp = 0x809C49D8; // type:func
func_809C4A08_jp = 0x809C4A08; // type:func
func_809C4A3C_jp = 0x809C4A3C; // type:func
func_809C4A74_jp = 0x809C4A74; // type:func
func_809C4AD4_jp = 0x809C4AD4; // type:func
func_809C4B04_jp = 0x809C4B04; // type:func
func_809C4B34_jp = 0x809C4B34; // type:func
func_809C4B64_jp = 0x809C4B64; // type:func
func_809C4BD4_jp = 0x809C4BD4; // type:func
func_809C4BF8_jp = 0x809C4BF8; // type:func
func_809C4C2C_jp = 0x809C4C2C; // type:func
func_809C4C5C_jp = 0x809C4C5C; // type:func
func_809C4C8C_jp = 0x809C4C8C; // type:func
func_809C4CD4_jp = 0x809C4CD4; // type:func
func_809C4D2C_jp = 0x809C4D2C; // type:func
func_809C4D5C_jp = 0x809C4D5C; // type:func
func_809C4D8C_jp = 0x809C4D8C; // type:func
func_809C4DBC_jp = 0x809C4DBC; // type:func
func_809C4E04_jp = 0x809C4E04; // type:func
func_809C4E44_jp = 0x809C4E44; // type:func
func_809C4E74_jp = 0x809C4E74; // type:func
func_809C4EA8_jp = 0x809C4EA8; // type:func
func_809C4EF4_jp = 0x809C4EF4; // type:func
func_809C4F28_jp = 0x809C4F28; // type:func
func_809C4F5C_jp = 0x809C4F5C; // type:func
func_809C4FA8_jp = 0x809C4FA8; // type:func
func_809C4FD4_jp = 0x809C4FD4; // type:func

// .data

_008A6C10_Profile = 0x809C5000; //
D_809C5024_jp = 0x809C5024; //
D_809C5040_jp = 0x809C5040; //
D_809C5048_jp = 0x809C5048; //
D_809C5050_jp = 0x809C5050; //
D_809C505C_jp = 0x809C505C; //
D_809C5064_jp = 0x809C5064; //
D_809C5078_jp = 0x809C5078; //
D_809C5088_jp = 0x809C5088; //
D_809C5098_jp = 0x809C5098; //
D_809C50A8_jp = 0x809C50A8; //
D_809C512C_jp = 0x809C512C; //
D_809C51B0_jp = 0x809C51B0; //

// .rodata

jtbl_809C51C0_jp = 0x809C51C0; // type:jtbl
jtbl_809C51DC_jp = 0x809C51DC; // type:jtbl
jtbl_809C51F8_jp = 0x809C51F8; // type:jtbl

// .text

func_809C5490_jp = 0x809C5490; // type:func
func_809C55D8_jp = 0x809C55D8; // type:func
func_809C5654_jp = 0x809C5654; // type:func
func_809C5680_jp = 0x809C5680; // type:func
func_809C56AC_jp = 0x809C56AC; // type:func
func_809C56F4_jp = 0x809C56F4; // type:func
func_809C5768_jp = 0x809C5768; // type:func
func_809C5854_jp = 0x809C5854; // type:func
func_809C58AC_jp = 0x809C58AC; // type:func
func_809C5930_jp = 0x809C5930; // type:func
func_809C5A08_jp = 0x809C5A08; // type:func
func_809C5AC8_jp = 0x809C5AC8; // type:func
func_809C5AF0_jp = 0x809C5AF0; // type:func
func_809C5B5C_jp = 0x809C5B5C; // type:func
func_809C5BA8_jp = 0x809C5BA8; // type:func
func_809C5C90_jp = 0x809C5C90; // type:func
func_809C5D54_jp = 0x809C5D54; // type:func
func_809C5D98_jp = 0x809C5D98; // type:func
func_809C5DDC_jp = 0x809C5DDC; // type:func
func_809C5E68_jp = 0x809C5E68; // type:func
func_809C5E98_jp = 0x809C5E98; // type:func
func_809C5EDC_jp = 0x809C5EDC; // type:func
func_809C5FA8_jp = 0x809C5FA8; // type:func
func_809C602C_jp = 0x809C602C; // type:func
func_809C6090_jp = 0x809C6090; // type:func
func_809C60EC_jp = 0x809C60EC; // type:func
func_809C6144_jp = 0x809C6144; // type:func
func_809C6210_jp = 0x809C6210; // type:func
func_809C633C_jp = 0x809C633C; // type:func
func_809C635C_jp = 0x809C635C; // type:func
func_809C6394_jp = 0x809C6394; // type:func
func_809C63F4_jp = 0x809C63F4; // type:func
func_809C6438_jp = 0x809C6438; // type:func
func_809C645C_jp = 0x809C645C; // type:func
func_809C6480_jp = 0x809C6480; // type:func
func_809C64A8_jp = 0x809C64A8; // type:func
func_809C6518_jp = 0x809C6518; // type:func
func_809C6548_jp = 0x809C6548; // type:func
func_809C6584_jp = 0x809C6584; // type:func
func_809C65C8_jp = 0x809C65C8; // type:func
func_809C6600_jp = 0x809C6600; // type:func
func_809C6620_jp = 0x809C6620; // type:func
func_809C6688_jp = 0x809C6688; // type:func
func_809C6720_jp = 0x809C6720; // type:func

// .data

_008A8C80_Profile = 0x809C6750; //
D_809C6774_jp = 0x809C6774; //
D_809C6790_jp = 0x809C6790; //
D_809C67F8_jp = 0x809C67F8; //
D_809C684C_jp = 0x809C684C; //
D_FLT_809C687C_jp = 0x809C687C; // type:f32
D_809C6884_jp = 0x809C6884; //
D_809C688C_jp = 0x809C688C; // type:s8
D_809C68A8_jp = 0x809C68A8; //
D_809C68B4_jp = 0x809C68B4; //
D_809C68CC_jp = 0x809C68CC; //
D_809C6900_jp = 0x809C6900; // type:u8
D_809C6910_jp = 0x809C6910; //

// .rodata

RO_FLT_809C6950_jp = 0x809C6950; // type:f32
RO_FLT_809C6954_jp = 0x809C6954; // type:f32
RO_FLT_809C6958_jp = 0x809C6958; // type:f32
RO_FLT_809C695C_jp = 0x809C695C; // type:f32
RO_FLT_809C6960_jp = 0x809C6960; // type:f32
RO_FLT_809C6964_jp = 0x809C6964; // type:f32
RO_FLT_809C6968_jp = 0x809C6968; // type:f32
RO_FLT_809C696C_jp = 0x809C696C; // type:f32
RO_FLT_809C6970_jp = 0x809C6970; // type:f32
RO_FLT_809C6974_jp = 0x809C6974; // type:f32

// .text

func_809C6B80_jp = 0x809C6B80; // type:func
func_809C6C5C_jp = 0x809C6C5C; // type:func
func_809C6C88_jp = 0x809C6C88; // type:func
func_809C6CE4_jp = 0x809C6CE4; // type:func
func_809C6D10_jp = 0x809C6D10; // type:func
func_809C6DAC_jp = 0x809C6DAC; // type:func
func_809C6E18_jp = 0x809C6E18; // type:func
func_809C6EA4_jp = 0x809C6EA4; // type:func
func_809C6ED0_jp = 0x809C6ED0; // type:func
func_809C6F2C_jp = 0x809C6F2C; // type:func
func_809C6FAC_jp = 0x809C6FAC; // type:func
func_809C7030_jp = 0x809C7030; // type:func
func_809C7084_jp = 0x809C7084; // type:func
func_809C70F4_jp = 0x809C70F4; // type:func
func_809C7110_jp = 0x809C7110; // type:func
func_809C71B4_jp = 0x809C71B4; // type:func
func_809C71E8_jp = 0x809C71E8; // type:func
func_809C7274_jp = 0x809C7274; // type:func
func_809C72A8_jp = 0x809C72A8; // type:func
func_809C72D8_jp = 0x809C72D8; // type:func
func_809C7354_jp = 0x809C7354; // type:func
func_809C7394_jp = 0x809C7394; // type:func
func_809C73D4_jp = 0x809C73D4; // type:func
func_809C746C_jp = 0x809C746C; // type:func
func_809C7520_jp = 0x809C7520; // type:func
func_809C7570_jp = 0x809C7570; // type:func
func_809C76BC_jp = 0x809C76BC; // type:func
func_809C7710_jp = 0x809C7710; // type:func
func_809C7734_jp = 0x809C7734; // type:func
func_809C777C_jp = 0x809C777C; // type:func
func_809C77C8_jp = 0x809C77C8; // type:func
func_809C7874_jp = 0x809C7874; // type:func
func_809C78AC_jp = 0x809C78AC; // type:func
func_809C7904_jp = 0x809C7904; // type:func
func_809C7970_jp = 0x809C7970; // type:func
func_809C79A4_jp = 0x809C79A4; // type:func
func_809C7A54_jp = 0x809C7A54; // type:func
func_809C7AAC_jp = 0x809C7AAC; // type:func
func_809C7ADC_jp = 0x809C7ADC; // type:func
func_809C7B1C_jp = 0x809C7B1C; // type:func
func_809C7B88_jp = 0x809C7B88; // type:func
func_809C7BB8_jp = 0x809C7BB8; // type:func

// .data

_008AA370_Profile = 0x809C7BF0; //
D_809C7C14_jp = 0x809C7C14; //
D_809C7C30_jp = 0x809C7C30; //
D_809C7C48_jp = 0x809C7C48; //
D_809C7CA8_jp = 0x809C7CA8; //
D_809C7CB4_jp = 0x809C7CB4; // type:s16
D_809C7CBC_jp = 0x809C7CBC; // type:s16
D_809C7CC4_jp = 0x809C7CC4; // type:s16
D_809C7CC8_jp = 0x809C7CC8; // type:s16
D_809C7CCC_jp = 0x809C7CCC; //
D_809C7DDC_jp = 0x809C7DDC; //
D_809C7DE4_jp = 0x809C7DE4; //

// .rodata

RO_FLT_809C7DF0_jp = 0x809C7DF0; // type:f32
RO_FLT_809C7DF4_jp = 0x809C7DF4; // type:f32
RO_FLT_809C7DF8_jp = 0x809C7DF8; // type:f32
RO_FLT_809C7DFC_jp = 0x809C7DFC; // type:f32
RO_FLT_809C7E00_jp = 0x809C7E00; // type:f32
RO_FLT_809C7E04_jp = 0x809C7E04; // type:f32
RO_FLT_809C7E08_jp = 0x809C7E08; // type:f32
D_809C7EA4_jp = 0x809C7EA4; //

// .text

func_809C7FF0_jp = 0x809C7FF0; // type:func
func_809C80AC_jp = 0x809C80AC; // type:func
func_809C80D8_jp = 0x809C80D8; // type:func
func_809C8104_jp = 0x809C8104; // type:func
func_809C8130_jp = 0x809C8130; // type:func
func_809C8190_jp = 0x809C8190; // type:func
func_809C81F0_jp = 0x809C81F0; // type:func
func_809C8248_jp = 0x809C8248; // type:func
func_809C834C_jp = 0x809C834C; // type:func
func_809C83B0_jp = 0x809C83B0; // type:func
func_809C83F4_jp = 0x809C83F4; // type:func
func_809C8564_jp = 0x809C8564; // type:func
func_809C8600_jp = 0x809C8600; // type:func
func_809C862C_jp = 0x809C862C; // type:func
func_809C8654_jp = 0x809C8654; // type:func
func_809C86E4_jp = 0x809C86E4; // type:func
func_809C8760_jp = 0x809C8760; // type:func
func_809C87EC_jp = 0x809C87EC; // type:func
func_809C8864_jp = 0x809C8864; // type:func
func_809C888C_jp = 0x809C888C; // type:func
func_809C88B4_jp = 0x809C88B4; // type:func
func_809C88DC_jp = 0x809C88DC; // type:func
func_809C8940_jp = 0x809C8940; // type:func
func_809C899C_jp = 0x809C899C; // type:func
func_809C8AA8_jp = 0x809C8AA8; // type:func
func_809C8AE4_jp = 0x809C8AE4; // type:func
func_809C8B24_jp = 0x809C8B24; // type:func
func_809C8B78_jp = 0x809C8B78; // type:func
func_809C8C18_jp = 0x809C8C18; // type:func
func_809C8C78_jp = 0x809C8C78; // type:func
func_809C8CF4_jp = 0x809C8CF4; // type:func
func_809C8D78_jp = 0x809C8D78; // type:func
func_809C8E0C_jp = 0x809C8E0C; // type:func
func_809C8EE0_jp = 0x809C8EE0; // type:func
func_809C8F30_jp = 0x809C8F30; // type:func
func_809C8F78_jp = 0x809C8F78; // type:func
func_809C8FEC_jp = 0x809C8FEC; // type:func
func_809C9090_jp = 0x809C9090; // type:func
func_809C9114_jp = 0x809C9114; // type:func
func_809C91FC_jp = 0x809C91FC; // type:func
func_809C9224_jp = 0x809C9224; // type:func
func_809C9240_jp = 0x809C9240; // type:func
func_809C9298_jp = 0x809C9298; // type:func
func_809C9374_jp = 0x809C9374; // type:func
func_809C93D8_jp = 0x809C93D8; // type:func
func_809C9430_jp = 0x809C9430; // type:func
func_809C94EC_jp = 0x809C94EC; // type:func
func_809C9524_jp = 0x809C9524; // type:func
func_809C95B8_jp = 0x809C95B8; // type:func
func_809C9654_jp = 0x809C9654; // type:func
func_809C9684_jp = 0x809C9684; // type:func
func_809C96FC_jp = 0x809C96FC; // type:func
func_809C9768_jp = 0x809C9768; // type:func
func_809C978C_jp = 0x809C978C; // type:func
func_809C97EC_jp = 0x809C97EC; // type:func
func_809C9870_jp = 0x809C9870; // type:func
func_809C98B8_jp = 0x809C98B8; // type:func
func_809C9918_jp = 0x809C9918; // type:func
func_809C993C_jp = 0x809C993C; // type:func
func_809C994C_jp = 0x809C994C; // type:func
func_809C995C_jp = 0x809C995C; // type:func
func_809C99AC_jp = 0x809C99AC; // type:func
func_809C9A20_jp = 0x809C9A20; // type:func
func_809C9A9C_jp = 0x809C9A9C; // type:func
func_809C9ADC_jp = 0x809C9ADC; // type:func
func_809C9B10_jp = 0x809C9B10; // type:func
func_809C9C38_jp = 0x809C9C38; // type:func
func_809C9C74_jp = 0x809C9C74; // type:func
func_809C9C94_jp = 0x809C9C94; // type:func
func_809C9CB4_jp = 0x809C9CB4; // type:func
func_809C9D00_jp = 0x809C9D00; // type:func
func_809C9DA8_jp = 0x809C9DA8; // type:func
func_809C9DD8_jp = 0x809C9DD8; // type:func
func_809C9E18_jp = 0x809C9E18; // type:func
func_809C9E84_jp = 0x809C9E84; // type:func
func_809C9EB4_jp = 0x809C9EB4; // type:func

// .data

_008AB7E0_Profile = 0x809C9EE0; //
D_809C9F04_jp = 0x809C9F04; //
D_809C9F20_jp = 0x809C9F20; //
D_809C9F4C_jp = 0x809C9F4C; // type:u16
D_809C9F64_jp = 0x809C9F64; //
D_809C9F68_jp = 0x809C9F68; //
D_809C9F94_jp = 0x809C9F94; //
D_809C9FC0_jp = 0x809C9FC0; //
D_809C9FEC_jp = 0x809C9FEC; //
D_809CA018_jp = 0x809CA018; //
D_809CA020_jp = 0x809CA020; // type:u16
D_809CA02C_jp = 0x809CA02C; //
D_809CA064_jp = 0x809CA064; //
D_809CA0B4_jp = 0x809CA0B4; //
D_809CA0DC_jp = 0x809CA0DC; //
D_809CA23C_jp = 0x809CA23C; //
D_809CA268_jp = 0x809CA268; //
D_809CA294_jp = 0x809CA294; //
D_809CA2C0_jp = 0x809CA2C0; //
D_809CA2EC_jp = 0x809CA2EC; //
D_809CA35C_jp = 0x809CA35C; //
D_809CA368_jp = 0x809CA368; //
D_809CA370_jp = 0x809CA370; //

// .rodata

jtbl_809CA380_jp = 0x809CA380; // type:jtbl

// .text

func_809CA750_jp = 0x809CA750; // type:func
func_809CA7E0_jp = 0x809CA7E0; // type:func
func_809CA80C_jp = 0x809CA80C; // type:func
func_809CA838_jp = 0x809CA838; // type:func
func_809CA864_jp = 0x809CA864; // type:func
func_809CA8EC_jp = 0x809CA8EC; // type:func
func_809CA918_jp = 0x809CA918; // type:func
func_809CA9B0_jp = 0x809CA9B0; // type:func
func_809CAA74_jp = 0x809CAA74; // type:func
func_809CAAB4_jp = 0x809CAAB4; // type:func
func_809CAAF8_jp = 0x809CAAF8; // type:func
func_809CAB34_jp = 0x809CAB34; // type:func
func_809CAB60_jp = 0x809CAB60; // type:func
func_809CABE4_jp = 0x809CABE4; // type:func
func_809CAC0C_jp = 0x809CAC0C; // type:func
func_809CAC8C_jp = 0x809CAC8C; // type:func
func_809CAD34_jp = 0x809CAD34; // type:func
func_809CAD90_jp = 0x809CAD90; // type:func
func_809CADB0_jp = 0x809CADB0; // type:func
func_809CADDC_jp = 0x809CADDC; // type:func
func_809CAE08_jp = 0x809CAE08; // type:func
func_809CAE30_jp = 0x809CAE30; // type:func
func_809CAEBC_jp = 0x809CAEBC; // type:func
func_809CAEF8_jp = 0x809CAEF8; // type:func
func_809CAF58_jp = 0x809CAF58; // type:func
func_809CAFAC_jp = 0x809CAFAC; // type:func
func_809CAFF4_jp = 0x809CAFF4; // type:func
func_809CB044_jp = 0x809CB044; // type:func
func_809CB118_jp = 0x809CB118; // type:func
func_809CB258_jp = 0x809CB258; // type:func
func_809CB2D4_jp = 0x809CB2D4; // type:func
func_809CB2E4_jp = 0x809CB2E4; // type:func
func_809CB3B4_jp = 0x809CB3B4; // type:func
func_809CB4AC_jp = 0x809CB4AC; // type:func
func_809CB500_jp = 0x809CB500; // type:func
func_809CB5A8_jp = 0x809CB5A8; // type:func
func_809CB6A4_jp = 0x809CB6A4; // type:func
func_809CB740_jp = 0x809CB740; // type:func
func_809CB790_jp = 0x809CB790; // type:func
func_809CB7E4_jp = 0x809CB7E4; // type:func
func_809CB814_jp = 0x809CB814; // type:func
func_809CB844_jp = 0x809CB844; // type:func
func_809CB874_jp = 0x809CB874; // type:func
func_809CB984_jp = 0x809CB984; // type:func
func_809CB9C4_jp = 0x809CB9C4; // type:func
func_809CBA04_jp = 0x809CBA04; // type:func
func_809CBA7C_jp = 0x809CBA7C; // type:func
func_809CBAA8_jp = 0x809CBAA8; // type:func
func_809CBAD4_jp = 0x809CBAD4; // type:func
func_809CBDF4_jp = 0x809CBDF4; // type:func
func_809CC048_jp = 0x809CC048; // type:func
func_809CC0C0_jp = 0x809CC0C0; // type:func
func_809CC12C_jp = 0x809CC12C; // type:func
func_809CC2CC_jp = 0x809CC2CC; // type:func
func_809CC30C_jp = 0x809CC30C; // type:func
func_809CC364_jp = 0x809CC364; // type:func
func_809CC4A8_jp = 0x809CC4A8; // type:func
func_809CC5A8_jp = 0x809CC5A8; // type:func
func_809CC5DC_jp = 0x809CC5DC; // type:func
func_809CC654_jp = 0x809CC654; // type:func
func_809CC790_jp = 0x809CC790; // type:func
func_809CC7E8_jp = 0x809CC7E8; // type:func
func_809CC854_jp = 0x809CC854; // type:func
func_809CC8A0_jp = 0x809CC8A0; // type:func
func_809CC8D0_jp = 0x809CC8D0; // type:func
func_809CC998_jp = 0x809CC998; // type:func
func_809CCA34_jp = 0x809CCA34; // type:func
func_809CCC5C_jp = 0x809CCC5C; // type:func
func_809CCCD0_jp = 0x809CCCD0; // type:func
func_809CCDB8_jp = 0x809CCDB8; // type:func
func_809CCE4C_jp = 0x809CCE4C; // type:func
func_809CCF28_jp = 0x809CCF28; // type:func
func_809CD038_jp = 0x809CD038; // type:func
func_809CD088_jp = 0x809CD088; // type:func
func_809CD14C_jp = 0x809CD14C; // type:func
func_809CD2FC_jp = 0x809CD2FC; // type:func
func_809CD3B0_jp = 0x809CD3B0; // type:func
func_809CD580_jp = 0x809CD580; // type:func
func_809CD5E8_jp = 0x809CD5E8; // type:func
func_809CD640_jp = 0x809CD640; // type:func
func_809CD6AC_jp = 0x809CD6AC; // type:func
func_809CD718_jp = 0x809CD718; // type:func
func_809CD7B4_jp = 0x809CD7B4; // type:func
func_809CD7E8_jp = 0x809CD7E8; // type:func
func_809CD880_jp = 0x809CD880; // type:func
func_809CD8D8_jp = 0x809CD8D8; // type:func
func_809CD94C_jp = 0x809CD94C; // type:func
func_809CD970_jp = 0x809CD970; // type:func
func_809CD998_jp = 0x809CD998; // type:func
func_809CD9D0_jp = 0x809CD9D0; // type:func
func_809CDA00_jp = 0x809CDA00; // type:func
func_809CDA38_jp = 0x809CDA38; // type:func
func_809CDA68_jp = 0x809CDA68; // type:func
func_809CDA98_jp = 0x809CDA98; // type:func
func_809CDAD8_jp = 0x809CDAD8; // type:func
func_809CDB08_jp = 0x809CDB08; // type:func
func_809CDB38_jp = 0x809CDB38; // type:func
func_809CDC1C_jp = 0x809CDC1C; // type:func
func_809CDC4C_jp = 0x809CDC4C; // type:func
func_809CDC8C_jp = 0x809CDC8C; // type:func
func_809CDCC4_jp = 0x809CDCC4; // type:func
func_809CDCFC_jp = 0x809CDCFC; // type:func
func_809CDDE4_jp = 0x809CDDE4; // type:func
func_809CDE0C_jp = 0x809CDE0C; // type:func
func_809CDE64_jp = 0x809CDE64; // type:func
func_809CDEA0_jp = 0x809CDEA0; // type:func
func_809CDEB0_jp = 0x809CDEB0; // type:func
func_809CDED4_jp = 0x809CDED4; // type:func
func_809CDF04_jp = 0x809CDF04; // type:func
func_809CDF28_jp = 0x809CDF28; // type:func
func_809CDF4C_jp = 0x809CDF4C; // type:func
func_809CDF70_jp = 0x809CDF70; // type:func
func_809CDF94_jp = 0x809CDF94; // type:func
func_809CDFC4_jp = 0x809CDFC4; // type:func
func_809CDFF4_jp = 0x809CDFF4; // type:func
func_809CE048_jp = 0x809CE048; // type:func
func_809CE0FC_jp = 0x809CE0FC; // type:func

// .data

_008ADF40_Profile = 0x809CE130; //
D_809CE154_jp = 0x809CE154; //
D_809CE170_jp = 0x809CE170; // type:u8
D_FLT_809CE180_jp = 0x809CE180; // type:f32
D_FLT_809CE190_jp = 0x809CE190; // type:f32
D_809CE1A0_jp = 0x809CE1A0; //
D_809CE2F8_jp = 0x809CE2F8; //
D_809CE338_jp = 0x809CE338; //
D_809CE33C_jp = 0x809CE33C; //
D_809CE360_jp = 0x809CE360; //
D_809CE380_jp = 0x809CE380; //
D_809CE480_jp = 0x809CE480; //
D_809CE4A0_jp = 0x809CE4A0; //
D_809CE4E0_jp = 0x809CE4E0; //
D_809CE520_jp = 0x809CE520; //
D_809CE528_jp = 0x809CE528; //
D_809CE534_jp = 0x809CE534; //
D_809CE56C_jp = 0x809CE56C; //
D_809CE570_jp = 0x809CE570; //
D_809CE5D0_jp = 0x809CE5D0; //
D_809CE5F0_jp = 0x809CE5F0; //
D_809CE5F4_jp = 0x809CE5F4; //
D_809CE5F8_jp = 0x809CE5F8; //
D_809CE638_jp = 0x809CE638; //
D_809CE668_jp = 0x809CE668; //
D_809CE698_jp = 0x809CE698; //
D_809CE6B8_jp = 0x809CE6B8; //
D_809CE6C8_jp = 0x809CE6C8; // type:u16
D_809CE6D0_jp = 0x809CE6D0; //
D_809CE6DC_jp = 0x809CE6DC; //
D_809CE6E8_jp = 0x809CE6E8; //
D_809CE6F0_jp = 0x809CE6F0; //
D_809CE708_jp = 0x809CE708; //
D_809CE720_jp = 0x809CE720; //
D_809CE734_jp = 0x809CE734; //
D_809CE74C_jp = 0x809CE74C; //
D_809CE758_jp = 0x809CE758; //
D_809CE764_jp = 0x809CE764; // type:u16
D_809CE768_jp = 0x809CE768; //
D_809CE770_jp = 0x809CE770; //
D_809CE77C_jp = 0x809CE77C; //
D_809CE788_jp = 0x809CE788; //
D_809CE7AC_jp = 0x809CE7AC; //
D_809CE7E0_jp = 0x809CE7E0; //
D_809CE88C_jp = 0x809CE88C; //

// .rodata

RO_FLT_809CE940_jp = 0x809CE940; // type:f32
RO_FLT_809CE944_jp = 0x809CE944; // type:f32
RO_FLT_809CE948_jp = 0x809CE948; // type:f32
RO_FLT_809CE94C_jp = 0x809CE94C; // type:f32

// .text

func_809CEEC0_jp = 0x809CEEC0; // type:func
func_809CEF60_jp = 0x809CEF60; // type:func
func_809CEF8C_jp = 0x809CEF8C; // type:func
func_809CEFB8_jp = 0x809CEFB8; // type:func
func_809CEFE4_jp = 0x809CEFE4; // type:func
func_809CF024_jp = 0x809CF024; // type:func
func_809CF058_jp = 0x809CF058; // type:func
func_809CF078_jp = 0x809CF078; // type:func
func_809CF0AC_jp = 0x809CF0AC; // type:func
func_809CF0CC_jp = 0x809CF0CC; // type:func
func_809CF138_jp = 0x809CF138; // type:func
func_809CF14C_jp = 0x809CF14C; // type:func
func_809CF170_jp = 0x809CF170; // type:func
func_809CF198_jp = 0x809CF198; // type:func
func_809CF1C8_jp = 0x809CF1C8; // type:func
func_809CF240_jp = 0x809CF240; // type:func
func_809CF270_jp = 0x809CF270; // type:func
func_809CF2A0_jp = 0x809CF2A0; // type:func
func_809CF2E4_jp = 0x809CF2E4; // type:func
func_809CF350_jp = 0x809CF350; // type:func
func_809CF380_jp = 0x809CF380; // type:func

// .data

_008B26B0_Profile = 0x809CF3B0; //
D_809CF3D4_jp = 0x809CF3D4; //
D_809CF3F0_jp = 0x809CF3F0; //
D_809CF3F8_jp = 0x809CF3F8; //
D_809CF400_jp = 0x809CF400; //
D_809CF40C_jp = 0x809CF40C; //
D_809CF414_jp = 0x809CF414; //
D_809CF41C_jp = 0x809CF41C; //

// .text

func_809CF4F0_jp = 0x809CF4F0; // type:func
func_809CF580_jp = 0x809CF580; // type:func
func_809CF5AC_jp = 0x809CF5AC; // type:func
func_809CF5D8_jp = 0x809CF5D8; // type:func
func_809CF604_jp = 0x809CF604; // type:func
func_809CF638_jp = 0x809CF638; // type:func
func_809CF808_jp = 0x809CF808; // type:func
func_809CF840_jp = 0x809CF840; // type:func
func_809CF8D8_jp = 0x809CF8D8; // type:func
func_809CF99C_jp = 0x809CF99C; // type:func
func_809CF9E4_jp = 0x809CF9E4; // type:func
func_809CFA28_jp = 0x809CFA28; // type:func
func_809CFA64_jp = 0x809CFA64; // type:func
func_809CFA90_jp = 0x809CFA90; // type:func
func_809CFB14_jp = 0x809CFB14; // type:func
func_809CFB3C_jp = 0x809CFB3C; // type:func
func_809CFBBC_jp = 0x809CFBBC; // type:func
func_809CFC64_jp = 0x809CFC64; // type:func
func_809CFCC0_jp = 0x809CFCC0; // type:func
func_809CFCE0_jp = 0x809CFCE0; // type:func
func_809CFD0C_jp = 0x809CFD0C; // type:func
func_809CFD38_jp = 0x809CFD38; // type:func
func_809CFD60_jp = 0x809CFD60; // type:func
func_809CFDEC_jp = 0x809CFDEC; // type:func
func_809CFE28_jp = 0x809CFE28; // type:func
func_809CFE88_jp = 0x809CFE88; // type:func
func_809CFEDC_jp = 0x809CFEDC; // type:func
func_809CFF24_jp = 0x809CFF24; // type:func
func_809CFF74_jp = 0x809CFF74; // type:func
func_809D0048_jp = 0x809D0048; // type:func
func_809D0188_jp = 0x809D0188; // type:func
func_809D0204_jp = 0x809D0204; // type:func
func_809D0214_jp = 0x809D0214; // type:func
func_809D02E4_jp = 0x809D02E4; // type:func
func_809D03DC_jp = 0x809D03DC; // type:func
func_809D0430_jp = 0x809D0430; // type:func
func_809D04D8_jp = 0x809D04D8; // type:func
func_809D05D4_jp = 0x809D05D4; // type:func
func_809D0670_jp = 0x809D0670; // type:func
func_809D06C0_jp = 0x809D06C0; // type:func
func_809D0714_jp = 0x809D0714; // type:func
func_809D0744_jp = 0x809D0744; // type:func
func_809D0774_jp = 0x809D0774; // type:func
func_809D07A4_jp = 0x809D07A4; // type:func
func_809D08B4_jp = 0x809D08B4; // type:func
func_809D08F4_jp = 0x809D08F4; // type:func
func_809D0934_jp = 0x809D0934; // type:func
func_809D09AC_jp = 0x809D09AC; // type:func
func_809D09D8_jp = 0x809D09D8; // type:func
func_809D0A04_jp = 0x809D0A04; // type:func
func_809D0D24_jp = 0x809D0D24; // type:func
func_809D0F78_jp = 0x809D0F78; // type:func
func_809D0FF0_jp = 0x809D0FF0; // type:func
func_809D105C_jp = 0x809D105C; // type:func
func_809D11FC_jp = 0x809D11FC; // type:func
func_809D123C_jp = 0x809D123C; // type:func
func_809D1294_jp = 0x809D1294; // type:func
func_809D13D8_jp = 0x809D13D8; // type:func
func_809D14D8_jp = 0x809D14D8; // type:func
func_809D150C_jp = 0x809D150C; // type:func
func_809D1584_jp = 0x809D1584; // type:func
func_809D16C0_jp = 0x809D16C0; // type:func
func_809D1718_jp = 0x809D1718; // type:func
func_809D1784_jp = 0x809D1784; // type:func
func_809D17D0_jp = 0x809D17D0; // type:func
func_809D1800_jp = 0x809D1800; // type:func
func_809D18C8_jp = 0x809D18C8; // type:func
func_809D1964_jp = 0x809D1964; // type:func
func_809D1B8C_jp = 0x809D1B8C; // type:func
func_809D1C00_jp = 0x809D1C00; // type:func
func_809D1CE8_jp = 0x809D1CE8; // type:func
func_809D1D7C_jp = 0x809D1D7C; // type:func
func_809D1E58_jp = 0x809D1E58; // type:func
func_809D1F68_jp = 0x809D1F68; // type:func
func_809D1FB8_jp = 0x809D1FB8; // type:func
func_809D207C_jp = 0x809D207C; // type:func
func_809D222C_jp = 0x809D222C; // type:func
func_809D22E0_jp = 0x809D22E0; // type:func
func_809D24B0_jp = 0x809D24B0; // type:func
func_809D2518_jp = 0x809D2518; // type:func
func_809D2570_jp = 0x809D2570; // type:func
func_809D25DC_jp = 0x809D25DC; // type:func
func_809D2648_jp = 0x809D2648; // type:func
func_809D26E4_jp = 0x809D26E4; // type:func
func_809D2718_jp = 0x809D2718; // type:func
func_809D27B0_jp = 0x809D27B0; // type:func
func_809D2808_jp = 0x809D2808; // type:func
func_809D287C_jp = 0x809D287C; // type:func
func_809D28A0_jp = 0x809D28A0; // type:func
func_809D28C8_jp = 0x809D28C8; // type:func
func_809D2900_jp = 0x809D2900; // type:func
func_809D2930_jp = 0x809D2930; // type:func
func_809D2968_jp = 0x809D2968; // type:func
func_809D2998_jp = 0x809D2998; // type:func
func_809D29C8_jp = 0x809D29C8; // type:func
func_809D2A08_jp = 0x809D2A08; // type:func
func_809D2A38_jp = 0x809D2A38; // type:func
func_809D2A68_jp = 0x809D2A68; // type:func
func_809D2B4C_jp = 0x809D2B4C; // type:func
func_809D2B7C_jp = 0x809D2B7C; // type:func
func_809D2BBC_jp = 0x809D2BBC; // type:func
func_809D2BF4_jp = 0x809D2BF4; // type:func
func_809D2C2C_jp = 0x809D2C2C; // type:func
func_809D2D14_jp = 0x809D2D14; // type:func
func_809D2D3C_jp = 0x809D2D3C; // type:func
func_809D2D94_jp = 0x809D2D94; // type:func
func_809D2DD0_jp = 0x809D2DD0; // type:func
func_809D2DE0_jp = 0x809D2DE0; // type:func
func_809D2E04_jp = 0x809D2E04; // type:func
func_809D2E34_jp = 0x809D2E34; // type:func
func_809D2E58_jp = 0x809D2E58; // type:func
func_809D2E7C_jp = 0x809D2E7C; // type:func
func_809D2EA0_jp = 0x809D2EA0; // type:func
func_809D2EC4_jp = 0x809D2EC4; // type:func
func_809D2EF4_jp = 0x809D2EF4; // type:func
func_809D2F24_jp = 0x809D2F24; // type:func
func_809D2F78_jp = 0x809D2F78; // type:func
func_809D302C_jp = 0x809D302C; // type:func

// .data

_008B2CE0_Profile = 0x809D3060; //
D_809D3084_jp = 0x809D3084; //
D_809D30A0_jp = 0x809D30A0; //
D_809D30B0_jp = 0x809D30B0; //
D_809D30B8_jp = 0x809D30B8; //
D_809D30C0_jp = 0x809D30C0; // type:u8
D_FLT_809D339C_jp = 0x809D339C; // type:f32
D_FLT_809D3408_jp = 0x809D3408; // type:f32
D_809D3474_jp = 0x809D3474; //
D_809D35CC_jp = 0x809D35CC; //
D_809D360C_jp = 0x809D360C; //
D_809D3610_jp = 0x809D3610; //
D_809D3634_jp = 0x809D3634; //
D_809D3654_jp = 0x809D3654; //
D_809D3754_jp = 0x809D3754; //
D_809D3774_jp = 0x809D3774; //
D_809D37B4_jp = 0x809D37B4; //
D_809D37F4_jp = 0x809D37F4; //
D_809D37FC_jp = 0x809D37FC; //
D_809D3808_jp = 0x809D3808; //
D_809D3840_jp = 0x809D3840; //
D_809D3844_jp = 0x809D3844; //
D_809D38A4_jp = 0x809D38A4; //
D_809D38C4_jp = 0x809D38C4; //
D_809D38C8_jp = 0x809D38C8; //
D_809D38CC_jp = 0x809D38CC; //
D_809D390C_jp = 0x809D390C; //
D_809D393C_jp = 0x809D393C; //
D_809D396C_jp = 0x809D396C; //
D_809D398C_jp = 0x809D398C; //
D_809D399C_jp = 0x809D399C; // type:u16
D_809D39A4_jp = 0x809D39A4; //
D_809D39B0_jp = 0x809D39B0; //
D_809D39BC_jp = 0x809D39BC; //
D_809D39C4_jp = 0x809D39C4; //
D_809D39DC_jp = 0x809D39DC; //
D_809D39F4_jp = 0x809D39F4; //
D_809D3A08_jp = 0x809D3A08; //
D_809D3A20_jp = 0x809D3A20; //
D_809D3A2C_jp = 0x809D3A2C; //
D_809D3A38_jp = 0x809D3A38; // type:u16
D_809D3A3C_jp = 0x809D3A3C; //
D_809D3A44_jp = 0x809D3A44; //
D_809D3A50_jp = 0x809D3A50; //
D_809D3A5C_jp = 0x809D3A5C; //
D_809D3A80_jp = 0x809D3A80; //
D_809D3AB4_jp = 0x809D3AB4; //
D_809D3B60_jp = 0x809D3B60; //

// .rodata

RO_FLT_809D3C10_jp = 0x809D3C10; // type:f32
RO_FLT_809D3C14_jp = 0x809D3C14; // type:f32
RO_FLT_809D3C18_jp = 0x809D3C18; // type:f32
RO_FLT_809D3C1C_jp = 0x809D3C1C; // type:f32

// .text

func_809D41C0_jp = 0x809D41C0; // type:func
func_809D424C_jp = 0x809D424C; // type:func
func_809D4270_jp = 0x809D4270; // type:func
func_809D42F4_jp = 0x809D42F4; // type:func
func_809D4320_jp = 0x809D4320; // type:func
func_809D43BC_jp = 0x809D43BC; // type:func
func_809D43E8_jp = 0x809D43E8; // type:func
func_809D4400_jp = 0x809D4400; // type:func
func_809D44BC_jp = 0x809D44BC; // type:func
func_809D44F0_jp = 0x809D44F0; // type:func
func_809D4570_jp = 0x809D4570; // type:func
func_809D45A4_jp = 0x809D45A4; // type:func
func_809D4618_jp = 0x809D4618; // type:func
func_809D46CC_jp = 0x809D46CC; // type:func
func_809D4738_jp = 0x809D4738; // type:func
func_809D47C4_jp = 0x809D47C4; // type:func
func_809D4878_jp = 0x809D4878; // type:func
func_809D48A8_jp = 0x809D48A8; // type:func
func_809D49D8_jp = 0x809D49D8; // type:func
func_809D49F8_jp = 0x809D49F8; // type:func
func_809D4A20_jp = 0x809D4A20; // type:func
func_809D4A94_jp = 0x809D4A94; // type:func
func_809D4B44_jp = 0x809D4B44; // type:func
func_809D4BC4_jp = 0x809D4BC4; // type:func
func_809D4C24_jp = 0x809D4C24; // type:func
func_809D4C44_jp = 0x809D4C44; // type:func
func_809D4CD4_jp = 0x809D4CD4; // type:func
func_809D4D84_jp = 0x809D4D84; // type:func
func_809D4DD4_jp = 0x809D4DD4; // type:func
func_809D4E40_jp = 0x809D4E40; // type:func
func_809D4E94_jp = 0x809D4E94; // type:func
func_809D4F7C_jp = 0x809D4F7C; // type:func
func_809D4FC4_jp = 0x809D4FC4; // type:func
func_809D5010_jp = 0x809D5010; // type:func
func_809D507C_jp = 0x809D507C; // type:func
func_809D50F8_jp = 0x809D50F8; // type:func
func_809D5110_jp = 0x809D5110; // type:func
func_809D5130_jp = 0x809D5130; // type:func
func_809D51C4_jp = 0x809D51C4; // type:func
func_809D522C_jp = 0x809D522C; // type:func
func_809D526C_jp = 0x809D526C; // type:func
func_809D52B0_jp = 0x809D52B0; // type:func
func_809D533C_jp = 0x809D533C; // type:func
func_809D536C_jp = 0x809D536C; // type:func
func_809D53AC_jp = 0x809D53AC; // type:func
func_809D5418_jp = 0x809D5418; // type:func
func_809D5448_jp = 0x809D5448; // type:func

// .data

_008B79B0_Profile = 0x809D5480; //
D_809D54A4_jp = 0x809D54A4; //
D_809D54C0_jp = 0x809D54C0; // type:u8
D_809D54D8_jp = 0x809D54D8; // type:u8
D_809D54F8_jp = 0x809D54F8; //
D_809D5534_jp = 0x809D5534; //
D_809D5540_jp = 0x809D5540; // type:u8
D_809D55B0_jp = 0x809D55B0; //
D_809D55E0_jp = 0x809D55E0; //
D_809D55EC_jp = 0x809D55EC; //
D_809D55F4_jp = 0x809D55F4; //

// .rodata

RO_FLT_809D5600_jp = 0x809D5600; // type:f32
RO_FLT_809D5604_jp = 0x809D5604; // type:f32

// .text

func_809D57D0_jp = 0x809D57D0; // type:func
func_809D588C_jp = 0x809D588C; // type:func
func_809D58B8_jp = 0x809D58B8; // type:func
func_809D58FC_jp = 0x809D58FC; // type:func
func_809D5928_jp = 0x809D5928; // type:func
func_809D5978_jp = 0x809D5978; // type:func
func_809D59E8_jp = 0x809D59E8; // type:func
func_809D5A58_jp = 0x809D5A58; // type:func
func_809D5B80_jp = 0x809D5B80; // type:func
func_809D5C28_jp = 0x809D5C28; // type:func
func_809D5C7C_jp = 0x809D5C7C; // type:func
func_809D5CD8_jp = 0x809D5CD8; // type:func
func_809D5CFC_jp = 0x809D5CFC; // type:func
func_809D5D38_jp = 0x809D5D38; // type:func
func_809D5D5C_jp = 0x809D5D5C; // type:func
func_809D5D84_jp = 0x809D5D84; // type:func
func_809D5DB4_jp = 0x809D5DB4; // type:func
func_809D5E14_jp = 0x809D5E14; // type:func
func_809D5E9C_jp = 0x809D5E9C; // type:func
func_809D5F1C_jp = 0x809D5F1C; // type:func
func_809D5F68_jp = 0x809D5F68; // type:func
func_809D60EC_jp = 0x809D60EC; // type:func
func_809D616C_jp = 0x809D616C; // type:func
func_809D6200_jp = 0x809D6200; // type:func
func_809D6298_jp = 0x809D6298; // type:func
func_809D6374_jp = 0x809D6374; // type:func
func_809D63C4_jp = 0x809D63C4; // type:func
func_809D63F8_jp = 0x809D63F8; // type:func
func_809D6588_jp = 0x809D6588; // type:func
func_809D65E4_jp = 0x809D65E4; // type:func
func_809D6614_jp = 0x809D6614; // type:func
func_809D6658_jp = 0x809D6658; // type:func
func_809D6694_jp = 0x809D6694; // type:func
func_809D6760_jp = 0x809D6760; // type:func
func_809D6790_jp = 0x809D6790; // type:func
func_809D67C0_jp = 0x809D67C0; // type:func
func_809D6814_jp = 0x809D6814; // type:func
func_809D6848_jp = 0x809D6848; // type:func
func_809D68C4_jp = 0x809D68C4; // type:func
func_809D69B8_jp = 0x809D69B8; // type:func
func_809D69E4_jp = 0x809D69E4; // type:func

// .data

_008B8FC0_Profile = 0x809D6A10; //
D_809D6A34_jp = 0x809D6A34; //
D_809D6A50_jp = 0x809D6A50; //
D_809D6A78_jp = 0x809D6A78; //

// .text

func_809D6BC0_jp = 0x809D6BC0; // type:func
func_809D6C38_jp = 0x809D6C38; // type:func
func_809D6C64_jp = 0x809D6C64; // type:func
func_809D6CC8_jp = 0x809D6CC8; // type:func
func_809D6CF4_jp = 0x809D6CF4; // type:func
func_809D6D90_jp = 0x809D6D90; // type:func
func_809D6DF8_jp = 0x809D6DF8; // type:func
func_809D6EA0_jp = 0x809D6EA0; // type:func
func_809D6EF0_jp = 0x809D6EF0; // type:func
func_809D6F24_jp = 0x809D6F24; // type:func
func_809D7028_jp = 0x809D7028; // type:func
func_809D70BC_jp = 0x809D70BC; // type:func
func_809D7154_jp = 0x809D7154; // type:func
func_809D7190_jp = 0x809D7190; // type:func
func_809D71C0_jp = 0x809D71C0; // type:func
func_809D71F8_jp = 0x809D71F8; // type:func
func_809D7234_jp = 0x809D7234; // type:func
func_809D7324_jp = 0x809D7324; // type:func
func_809D7354_jp = 0x809D7354; // type:func
func_809D7384_jp = 0x809D7384; // type:func
func_809D73C4_jp = 0x809D73C4; // type:func
func_809D73F8_jp = 0x809D73F8; // type:func
func_809D7454_jp = 0x809D7454; // type:func
func_809D74AC_jp = 0x809D74AC; // type:func
func_809D74D8_jp = 0x809D74D8; // type:func

// .data

_008BA3B0_Profile = 0x809D7510; //
D_809D7534_jp = 0x809D7534; //
D_809D7550_jp = 0x809D7550; //
D_809D7564_jp = 0x809D7564; //
D_809D7578_jp = 0x809D7578; //
D_809D7598_jp = 0x809D7598; //

// .text

func_809D7670_jp = 0x809D7670; // type:func
func_809D7754_jp = 0x809D7754; // type:func
func_809D7780_jp = 0x809D7780; // type:func
func_809D77D0_jp = 0x809D77D0; // type:func
func_809D77FC_jp = 0x809D77FC; // type:func
func_809D783C_jp = 0x809D783C; // type:func
func_809D785C_jp = 0x809D785C; // type:func
func_809D78C0_jp = 0x809D78C0; // type:func
func_809D7934_jp = 0x809D7934; // type:func
func_809D79DC_jp = 0x809D79DC; // type:func
func_809D7A58_jp = 0x809D7A58; // type:func
func_809D7A94_jp = 0x809D7A94; // type:func
func_809D7B20_jp = 0x809D7B20; // type:func
func_809D7B94_jp = 0x809D7B94; // type:func
func_809D7BB4_jp = 0x809D7BB4; // type:func
func_809D7BE8_jp = 0x809D7BE8; // type:func
func_809D7C30_jp = 0x809D7C30; // type:func
func_809D7C7C_jp = 0x809D7C7C; // type:func
func_809D7C90_jp = 0x809D7C90; // type:func
func_809D7CB8_jp = 0x809D7CB8; // type:func
func_809D7CE0_jp = 0x809D7CE0; // type:func
func_809D7D10_jp = 0x809D7D10; // type:func
func_809D7E00_jp = 0x809D7E00; // type:func
func_809D7E30_jp = 0x809D7E30; // type:func
func_809D7E60_jp = 0x809D7E60; // type:func
func_809D7EA0_jp = 0x809D7EA0; // type:func
func_809D7F0C_jp = 0x809D7F0C; // type:func
func_809D7F3C_jp = 0x809D7F3C; // type:func
func_809D7FE8_jp = 0x809D7FE8; // type:func
func_809D801C_jp = 0x809D801C; // type:func
func_809D804C_jp = 0x809D804C; // type:func
func_809D808C_jp = 0x809D808C; // type:func
func_809D80D4_jp = 0x809D80D4; // type:func

// .data

_008BAE60_Profile = 0x809D8100; //
D_809D8124_jp = 0x809D8124; //
D_809D8140_jp = 0x809D8140; //
D_809D8150_jp = 0x809D8150; //
D_809D8158_jp = 0x809D8158; //
D_809D8168_jp = 0x809D8168; //
D_809D8174_jp = 0x809D8174; //
D_809D817C_jp = 0x809D817C; //

// .rodata

RO_FLT_809D8190_jp = 0x809D8190; // type:f32

// .text

func_809D82B0_jp = 0x809D82B0; // type:func
func_809D836C_jp = 0x809D836C; // type:func
func_809D8398_jp = 0x809D8398; // type:func
func_809D83D8_jp = 0x809D83D8; // type:func
func_809D8404_jp = 0x809D8404; // type:func
func_809D8440_jp = 0x809D8440; // type:func
func_809D8480_jp = 0x809D8480; // type:func
func_809D84A8_jp = 0x809D84A8; // type:func
func_809D8504_jp = 0x809D8504; // type:func
func_809D8560_jp = 0x809D8560; // type:func
func_809D85A8_jp = 0x809D85A8; // type:func
func_809D85F8_jp = 0x809D85F8; // type:func
func_809D86D0_jp = 0x809D86D0; // type:func
func_809D8718_jp = 0x809D8718; // type:func
func_809D8738_jp = 0x809D8738; // type:func
func_809D8764_jp = 0x809D8764; // type:func
func_809D8790_jp = 0x809D8790; // type:func
func_809D87A8_jp = 0x809D87A8; // type:func
func_809D87BC_jp = 0x809D87BC; // type:func
func_809D88C8_jp = 0x809D88C8; // type:func
func_809D8958_jp = 0x809D8958; // type:func
func_809D8A1C_jp = 0x809D8A1C; // type:func
func_809D8A98_jp = 0x809D8A98; // type:func
func_809D8AA8_jp = 0x809D8AA8; // type:func
func_809D8B5C_jp = 0x809D8B5C; // type:func
func_809D8C28_jp = 0x809D8C28; // type:func
func_809D8DF4_jp = 0x809D8DF4; // type:func
func_809D8EC4_jp = 0x809D8EC4; // type:func
func_809D8FAC_jp = 0x809D8FAC; // type:func
func_809D8FF4_jp = 0x809D8FF4; // type:func
func_809D9060_jp = 0x809D9060; // type:func
func_809D90CC_jp = 0x809D90CC; // type:func
func_809D9138_jp = 0x809D9138; // type:func
func_809D91A4_jp = 0x809D91A4; // type:func
func_809D9210_jp = 0x809D9210; // type:func
func_809D92A4_jp = 0x809D92A4; // type:func
func_809D92F0_jp = 0x809D92F0; // type:func
func_809D9314_jp = 0x809D9314; // type:func
func_809D9394_jp = 0x809D9394; // type:func
func_809D944C_jp = 0x809D944C; // type:func
func_809D95EC_jp = 0x809D95EC; // type:func
func_809D9630_jp = 0x809D9630; // type:func
func_809D96A4_jp = 0x809D96A4; // type:func
func_809D96F8_jp = 0x809D96F8; // type:func
func_809D976C_jp = 0x809D976C; // type:func
func_809D97AC_jp = 0x809D97AC; // type:func
func_809D97E0_jp = 0x809D97E0; // type:func
func_809D9810_jp = 0x809D9810; // type:func
func_809D9858_jp = 0x809D9858; // type:func
func_809D98FC_jp = 0x809D98FC; // type:func

// .data

_008BBAA0_Profile = 0x809D9930; //
D_809D9954_jp = 0x809D9954; //
D_809D9970_jp = 0x809D9970; //
D_FLT_809D99A4_jp = 0x809D99A4; // type:f32
D_FLT_809D99A8_jp = 0x809D99A8; // type:f32
D_809D99AC_jp = 0x809D99AC; //
D_809D99BC_jp = 0x809D99BC; // type:u16
D_809D99C4_jp = 0x809D99C4; //
D_809D99D0_jp = 0x809D99D0; //
D_809D99DC_jp = 0x809D99DC; //
D_809D9A10_jp = 0x809D9A10; //

// .rodata

RO_FLT_809D9A50_jp = 0x809D9A50; // type:f32
RO_FLT_809D9A54_jp = 0x809D9A54; // type:f32
RO_FLT_809D9A58_jp = 0x809D9A58; // type:f32
RO_FLT_809D9A5C_jp = 0x809D9A5C; // type:f32

// .text

func_809D9C90_jp = 0x809D9C90; // type:func
func_809D9D08_jp = 0x809D9D08; // type:func
func_809D9D34_jp = 0x809D9D34; // type:func
func_809D9D7C_jp = 0x809D9D7C; // type:func
func_809D9DA8_jp = 0x809D9DA8; // type:func
func_809D9F10_jp = 0x809D9F10; // type:func
func_809D9FD8_jp = 0x809D9FD8; // type:func
func_809DA0C0_jp = 0x809DA0C0; // type:func
func_809DA108_jp = 0x809DA108; // type:func
func_809DA158_jp = 0x809DA158; // type:func
func_809DA1BC_jp = 0x809DA1BC; // type:func
func_809DA24C_jp = 0x809DA24C; // type:func
func_809DA340_jp = 0x809DA340; // type:func
func_809DA3B4_jp = 0x809DA3B4; // type:func
func_809DA404_jp = 0x809DA404; // type:func
func_809DA4A4_jp = 0x809DA4A4; // type:func
func_809DA59C_jp = 0x809DA59C; // type:func
func_809DA5DC_jp = 0x809DA5DC; // type:func
func_809DA65C_jp = 0x809DA65C; // type:func
func_809DA698_jp = 0x809DA698; // type:func
func_809DA704_jp = 0x809DA704; // type:func
func_809DA79C_jp = 0x809DA79C; // type:func
func_809DA800_jp = 0x809DA800; // type:func
func_809DA830_jp = 0x809DA830; // type:func
func_809DA928_jp = 0x809DA928; // type:func
func_809DA958_jp = 0x809DA958; // type:func
func_809DA988_jp = 0x809DA988; // type:func
func_809DA9D0_jp = 0x809DA9D0; // type:func
func_809DAA70_jp = 0x809DAA70; // type:func
func_809DAAA0_jp = 0x809DAAA0; // type:func
func_809DAAD0_jp = 0x809DAAD0; // type:func
func_809DAB00_jp = 0x809DAB00; // type:func
func_809DAB30_jp = 0x809DAB30; // type:func
func_809DAB54_jp = 0x809DAB54; // type:func
func_809DAB88_jp = 0x809DAB88; // type:func
func_809DABBC_jp = 0x809DABBC; // type:func
func_809DAC18_jp = 0x809DAC18; // type:func
func_809DAC44_jp = 0x809DAC44; // type:func

// .data

_008BD480_Profile = 0x809DAC70; //
D_809DAC94_jp = 0x809DAC94; //
D_809DACB0_jp = 0x809DACB0; //
D_809DACC0_jp = 0x809DACC0; // type:u16
D_809DACC8_jp = 0x809DACC8; //
D_809DACD8_jp = 0x809DACD8; //
D_809DACE8_jp = 0x809DACE8; //
D_809DACF0_jp = 0x809DACF0; //
D_809DACF8_jp = 0x809DACF8; //
D_809DAD00_jp = 0x809DAD00; //
D_809DAD3C_jp = 0x809DAD3C; //

// .text

func_809DAEA0_jp = 0x809DAEA0; // type:func
func_809DAF20_jp = 0x809DAF20; // type:func
func_809DAF4C_jp = 0x809DAF4C; // type:func
func_809DAFE8_jp = 0x809DAFE8; // type:func
func_809DB014_jp = 0x809DB014; // type:func
func_809DB0B0_jp = 0x809DB0B0; // type:func
func_809DB12C_jp = 0x809DB12C; // type:func
func_809DB174_jp = 0x809DB174; // type:func
func_809DB1D8_jp = 0x809DB1D8; // type:func
func_809DB25C_jp = 0x809DB25C; // type:func
func_809DB284_jp = 0x809DB284; // type:func
func_809DB390_jp = 0x809DB390; // type:func
func_809DB448_jp = 0x809DB448; // type:func
func_809DB5AC_jp = 0x809DB5AC; // type:func
func_809DB648_jp = 0x809DB648; // type:func
func_809DB73C_jp = 0x809DB73C; // type:func
func_809DB76C_jp = 0x809DB76C; // type:func
func_809DB788_jp = 0x809DB788; // type:func
func_809DB82C_jp = 0x809DB82C; // type:func
func_809DB860_jp = 0x809DB860; // type:func
func_809DB9F0_jp = 0x809DB9F0; // type:func
func_809DBA24_jp = 0x809DBA24; // type:func
func_809DBA54_jp = 0x809DBA54; // type:func
func_809DBAD0_jp = 0x809DBAD0; // type:func
func_809DBB84_jp = 0x809DBB84; // type:func
func_809DBC18_jp = 0x809DBC18; // type:func
func_809DBD7C_jp = 0x809DBD7C; // type:func
func_809DBDA0_jp = 0x809DBDA0; // type:func
func_809DBE24_jp = 0x809DBE24; // type:func
func_809DBE54_jp = 0x809DBE54; // type:func
func_809DBE94_jp = 0x809DBE94; // type:func
func_809DBEBC_jp = 0x809DBEBC; // type:func
func_809DBF10_jp = 0x809DBF10; // type:func
func_809DBF70_jp = 0x809DBF70; // type:func
func_809DBFA0_jp = 0x809DBFA0; // type:func
func_809DC00C_jp = 0x809DC00C; // type:func
func_809DC078_jp = 0x809DC078; // type:func
func_809DC0A8_jp = 0x809DC0A8; // type:func

// .data

_008BE690_Profile = 0x809DC0E0; //
D_809DC104_jp = 0x809DC104; //
D_809DC120_jp = 0x809DC120; //
D_809DC18C_jp = 0x809DC18C; //
D_809DC1F8_jp = 0x809DC1F8; //
D_809DC200_jp = 0x809DC200; //
D_809DC20C_jp = 0x809DC20C; //
D_809DC218_jp = 0x809DC218; //
D_809DC230_jp = 0x809DC230; //
D_809DC248_jp = 0x809DC248; //
D_809DC250_jp = 0x809DC250; //
D_809DC2A0_jp = 0x809DC2A0; //
D_809DC2A8_jp = 0x809DC2A8; //

// .rodata

RO_FLT_809DC2B0_jp = 0x809DC2B0; // type:f32
RO_FLT_809DC2B4_jp = 0x809DC2B4; // type:f32

// .text

func_809DC450_jp = 0x809DC450; // type:func
func_809DC4F0_jp = 0x809DC4F0; // type:func
func_809DC51C_jp = 0x809DC51C; // type:func
func_809DC564_jp = 0x809DC564; // type:func
func_809DC590_jp = 0x809DC590; // type:func
func_809DC608_jp = 0x809DC608; // type:func
func_809DC6E4_jp = 0x809DC6E4; // type:func
func_809DC7F4_jp = 0x809DC7F4; // type:func
func_809DC850_jp = 0x809DC850; // type:func
func_809DC880_jp = 0x809DC880; // type:func
func_809DC8B4_jp = 0x809DC8B4; // type:func
func_809DC90C_jp = 0x809DC90C; // type:func
func_809DC940_jp = 0x809DC940; // type:func
func_809DC990_jp = 0x809DC990; // type:func
func_809DC9E0_jp = 0x809DC9E0; // type:func
func_809DCA44_jp = 0x809DCA44; // type:func

// .data

_008BFC40_Profile = 0x809DCA70; //
D_809DCA94_jp = 0x809DCA94; //
D_809DCAB0_jp = 0x809DCAB0; //
D_809DCAC0_jp = 0x809DCAC0; //
D_809DCACC_jp = 0x809DCACC; //
D_809DCAD8_jp = 0x809DCAD8; //
D_809DCAF0_jp = 0x809DCAF0; //
D_809DCB04_jp = 0x809DCB04; // type:u8
D_809DCB0C_jp = 0x809DCB0C; //
D_809DCB1C_jp = 0x809DCB1C; //

// .text

func_809DCBF0_jp = 0x809DCBF0; // type:func
func_809DCC60_jp = 0x809DCC60; // type:func
func_809DCC8C_jp = 0x809DCC8C; // type:func
func_809DCCB8_jp = 0x809DCCB8; // type:func
func_809DCCE4_jp = 0x809DCCE4; // type:func
func_809DCD34_jp = 0x809DCD34; // type:func
func_809DCD60_jp = 0x809DCD60; // type:func
func_809DCD80_jp = 0x809DCD80; // type:func
func_809DCDE4_jp = 0x809DCDE4; // type:func
func_809DCE34_jp = 0x809DCE34; // type:func
func_809DCEC0_jp = 0x809DCEC0; // type:func
func_809DCFFC_jp = 0x809DCFFC; // type:func
func_809DD048_jp = 0x809DD048; // type:func
func_809DD0C0_jp = 0x809DD0C0; // type:func
func_809DD0F4_jp = 0x809DD0F4; // type:func
func_809DD13C_jp = 0x809DD13C; // type:func
func_809DD1C8_jp = 0x809DD1C8; // type:func
func_809DD1DC_jp = 0x809DD1DC; // type:func
func_809DD200_jp = 0x809DD200; // type:func
func_809DD228_jp = 0x809DD228; // type:func
func_809DD258_jp = 0x809DD258; // type:func
func_809DD3A4_jp = 0x809DD3A4; // type:func
func_809DD3DC_jp = 0x809DD3DC; // type:func
func_809DD40C_jp = 0x809DD40C; // type:func
func_809DD49C_jp = 0x809DD49C; // type:func
func_809DD514_jp = 0x809DD514; // type:func
func_809DD544_jp = 0x809DD544; // type:func
func_809DD59C_jp = 0x809DD59C; // type:func
func_809DD5D0_jp = 0x809DD5D0; // type:func
func_809DD5FC_jp = 0x809DD5FC; // type:func
func_809DD63C_jp = 0x809DD63C; // type:func

// .data

_008C03E0_Profile = 0x809DD670; //
D_809DD694_jp = 0x809DD694; //
D_809DD6B0_jp = 0x809DD6B0; //
D_FLT_809DD6C8_jp = 0x809DD6C8; // type:f32
D_809DD6D0_jp = 0x809DD6D0; //
D_809DD6D8_jp = 0x809DD6D8; //
D_809DD6DC_jp = 0x809DD6DC; //
D_FLT_809DD6E8_jp = 0x809DD6E8; // type:f32
D_809DD6F0_jp = 0x809DD6F0; //
D_809DD6F8_jp = 0x809DD6F8; //
D_809DD700_jp = 0x809DD700; //

// .rodata

RO_FLT_809DD720_jp = 0x809DD720; // type:f32
RO_FLT_809DD724_jp = 0x809DD724; // type:f32

// .text

func_809DD850_jp = 0x809DD850; // type:func
func_809DD8D0_jp = 0x809DD8D0; // type:func
func_809DD8FC_jp = 0x809DD8FC; // type:func
func_809DD928_jp = 0x809DD928; // type:func
func_809DD954_jp = 0x809DD954; // type:func
func_809DD9A4_jp = 0x809DD9A4; // type:func
func_809DD9D0_jp = 0x809DD9D0; // type:func
func_809DD9F0_jp = 0x809DD9F0; // type:func
func_809DDA54_jp = 0x809DDA54; // type:func
func_809DDA74_jp = 0x809DDA74; // type:func
func_809DDAA8_jp = 0x809DDAA8; // type:func
func_809DDB00_jp = 0x809DDB00; // type:func
func_809DDB30_jp = 0x809DDB30; // type:func
func_809DDC20_jp = 0x809DDC20; // type:func
func_809DDC34_jp = 0x809DDC34; // type:func
func_809DDC9C_jp = 0x809DDC9C; // type:func
func_809DDCC4_jp = 0x809DDCC4; // type:func
func_809DDCF4_jp = 0x809DDCF4; // type:func
func_809DDD8C_jp = 0x809DDD8C; // type:func
func_809DDDBC_jp = 0x809DDDBC; // type:func
func_809DDDEC_jp = 0x809DDDEC; // type:func
func_809DDF34_jp = 0x809DDF34; // type:func
func_809DDFAC_jp = 0x809DDFAC; // type:func
func_809DDFDC_jp = 0x809DDFDC; // type:func
func_809DE050_jp = 0x809DE050; // type:func
func_809DE084_jp = 0x809DE084; // type:func
func_809DE0B0_jp = 0x809DE0B0; // type:func
func_809DE0F0_jp = 0x809DE0F0; // type:func

// .data

_008C1040_Profile = 0x809DE120; //
D_809DE144_jp = 0x809DE144; //
D_809DE160_jp = 0x809DE160; //
D_809DE180_jp = 0x809DE180; //
D_809DE190_jp = 0x809DE190; //
D_FLT_809DE1A0_jp = 0x809DE1A0; // type:f32
D_809DE1B0_jp = 0x809DE1B0; // type:u8
D_809DE1B4_jp = 0x809DE1B4; //
D_809DE1C0_jp = 0x809DE1C0; //
D_809DE1CC_jp = 0x809DE1CC; //
D_809DE1D4_jp = 0x809DE1D4; // type:s16
D_809DE1F0_jp = 0x809DE1F0; //
D_809DE20C_jp = 0x809DE20C; //
D_809DE214_jp = 0x809DE214; //

// .text

func_809DE340_jp = 0x809DE340; // type:func
func_809DE3B0_jp = 0x809DE3B0; // type:func
func_809DE3DC_jp = 0x809DE3DC; // type:func
func_809DE408_jp = 0x809DE408; // type:func
func_809DE434_jp = 0x809DE434; // type:func
func_809DE474_jp = 0x809DE474; // type:func
func_809DE4A0_jp = 0x809DE4A0; // type:func
func_809DE4C0_jp = 0x809DE4C0; // type:func
func_809DE538_jp = 0x809DE538; // type:func
func_809DE56C_jp = 0x809DE56C; // type:func
func_809DE5BC_jp = 0x809DE5BC; // type:func
func_809DE5DC_jp = 0x809DE5DC; // type:func
func_809DE6B4_jp = 0x809DE6B4; // type:func
func_809DE6C8_jp = 0x809DE6C8; // type:func
func_809DE6EC_jp = 0x809DE6EC; // type:func
func_809DE714_jp = 0x809DE714; // type:func
func_809DE744_jp = 0x809DE744; // type:func
func_809DE7D0_jp = 0x809DE7D0; // type:func
func_809DE800_jp = 0x809DE800; // type:func
func_809DE830_jp = 0x809DE830; // type:func
func_809DE8D0_jp = 0x809DE8D0; // type:func
func_809DE948_jp = 0x809DE948; // type:func
func_809DE978_jp = 0x809DE978; // type:func
func_809DE9EC_jp = 0x809DE9EC; // type:func
func_809DEA20_jp = 0x809DEA20; // type:func
func_809DEA4C_jp = 0x809DEA4C; // type:func
func_809DEA8C_jp = 0x809DEA8C; // type:func

// .data

_008C1B30_Profile = 0x809DEAC0; //
D_809DEAE4_jp = 0x809DEAE4; //
D_809DEB00_jp = 0x809DEB00; //
D_809DEB0C_jp = 0x809DEB0C; //
D_809DEB18_jp = 0x809DEB18; //
D_809DEB1C_jp = 0x809DEB1C; //
D_FLT_809DEB24_jp = 0x809DEB24; // type:f32
D_809DEB30_jp = 0x809DEB30; // type:u8
D_809DEB34_jp = 0x809DEB34; //
D_809DEB40_jp = 0x809DEB40; //
D_809DEB4C_jp = 0x809DEB4C; //
D_809DEB54_jp = 0x809DEB54; // type:s16
D_809DEB5C_jp = 0x809DEB5C; //
D_809DEB64_jp = 0x809DEB64; //

// .text

func_809DEC90_jp = 0x809DEC90; // type:func
func_809DED00_jp = 0x809DED00; // type:func
func_809DED2C_jp = 0x809DED2C; // type:func
func_809DED58_jp = 0x809DED58; // type:func
func_809DED84_jp = 0x809DED84; // type:func
func_809DEDC4_jp = 0x809DEDC4; // type:func
func_809DEDF0_jp = 0x809DEDF0; // type:func
func_809DEE10_jp = 0x809DEE10; // type:func
func_809DEE60_jp = 0x809DEE60; // type:func
func_809DEEEC_jp = 0x809DEEEC; // type:func
func_809DF028_jp = 0x809DF028; // type:func
func_809DF074_jp = 0x809DF074; // type:func
func_809DF0EC_jp = 0x809DF0EC; // type:func
func_809DF134_jp = 0x809DF134; // type:func
func_809DF180_jp = 0x809DF180; // type:func
func_809DF194_jp = 0x809DF194; // type:func
func_809DF1B8_jp = 0x809DF1B8; // type:func
func_809DF1E0_jp = 0x809DF1E0; // type:func
func_809DF210_jp = 0x809DF210; // type:func
func_809DF30C_jp = 0x809DF30C; // type:func
func_809DF33C_jp = 0x809DF33C; // type:func
func_809DF36C_jp = 0x809DF36C; // type:func
func_809DF3FC_jp = 0x809DF3FC; // type:func
func_809DF468_jp = 0x809DF468; // type:func
func_809DF498_jp = 0x809DF498; // type:func
func_809DF4F0_jp = 0x809DF4F0; // type:func
func_809DF524_jp = 0x809DF524; // type:func
func_809DF550_jp = 0x809DF550; // type:func
func_809DF590_jp = 0x809DF590; // type:func

// .data

_008C2480_Profile = 0x809DF5C0; //
D_809DF5E4_jp = 0x809DF5E4; //
D_809DF600_jp = 0x809DF600; //
D_FLT_809DF608_jp = 0x809DF608; // type:f32
D_809DF610_jp = 0x809DF610; //
D_809DF618_jp = 0x809DF618; //
D_809DF624_jp = 0x809DF624; //
D_809DF62C_jp = 0x809DF62C; // type:s16
D_809DF63C_jp = 0x809DF63C; //
D_809DF644_jp = 0x809DF644; //

// .rodata

RO_FLT_809DF660_jp = 0x809DF660; // type:f32
RO_FLT_809DF664_jp = 0x809DF664; // type:f32

// .text

func_809DF780_jp = 0x809DF780; // type:func
func_809DF800_jp = 0x809DF800; // type:func
func_809DF82C_jp = 0x809DF82C; // type:func
func_809DF858_jp = 0x809DF858; // type:func
func_809DF884_jp = 0x809DF884; // type:func
func_809DF8B4_jp = 0x809DF8B4; // type:func
func_809DF8E4_jp = 0x809DF8E4; // type:func
func_809DF92C_jp = 0x809DF92C; // type:func
func_809DF958_jp = 0x809DF958; // type:func

// .data

_008C2F70_Profile = 0x809DF990; //
D_809DF9B4_jp = 0x809DF9B4; //

// .text

func_809DFA20_jp = 0x809DFA20; // type:func
func_809DFA90_jp = 0x809DFA90; // type:func
func_809DFABC_jp = 0x809DFABC; // type:func
func_809DFAE8_jp = 0x809DFAE8; // type:func
func_809DFB14_jp = 0x809DFB14; // type:func
func_809DFB48_jp = 0x809DFB48; // type:func
func_809DFB74_jp = 0x809DFB74; // type:func
func_809DFB94_jp = 0x809DFB94; // type:func
func_809DFBA8_jp = 0x809DFBA8; // type:func
func_809DFBCC_jp = 0x809DFBCC; // type:func
func_809DFBFC_jp = 0x809DFBFC; // type:func
func_809DFC54_jp = 0x809DFC54; // type:func
func_809DFC84_jp = 0x809DFC84; // type:func
func_809DFCB4_jp = 0x809DFCB4; // type:func
func_809DFD88_jp = 0x809DFD88; // type:func
func_809DFE80_jp = 0x809DFE80; // type:func
func_809DFEB0_jp = 0x809DFEB0; // type:func
func_809DFFB0_jp = 0x809DFFB0; // type:func
func_809DFFE4_jp = 0x809DFFE4; // type:func
func_809E0010_jp = 0x809E0010; // type:func
func_809E0050_jp = 0x809E0050; // type:func

// .data

_008C3210_Profile = 0x809E0080; //
D_809E00A4_jp = 0x809E00A4; //
D_809E00C0_jp = 0x809E00C0; //
D_809E00CC_jp = 0x809E00CC; //
D_809E00D4_jp = 0x809E00D4; // type:s16
D_FLT_809E00E4_jp = 0x809E00E4; // type:f32
D_FLT_809E0100_jp = 0x809E0100; // type:f32
D_809E011C_jp = 0x809E011C; //
D_809E0124_jp = 0x809E0124; //

// .text

func_809E0210_jp = 0x809E0210; // type:func
func_809E0280_jp = 0x809E0280; // type:func
func_809E02AC_jp = 0x809E02AC; // type:func
func_809E02D8_jp = 0x809E02D8; // type:func
func_809E0304_jp = 0x809E0304; // type:func
func_809E0344_jp = 0x809E0344; // type:func
func_809E0370_jp = 0x809E0370; // type:func
func_809E0390_jp = 0x809E0390; // type:func
func_809E03A4_jp = 0x809E03A4; // type:func
func_809E03E4_jp = 0x809E03E4; // type:func
func_809E0414_jp = 0x809E0414; // type:func
func_809E0488_jp = 0x809E0488; // type:func
func_809E04B8_jp = 0x809E04B8; // type:func
func_809E04E8_jp = 0x809E04E8; // type:func
func_809E05CC_jp = 0x809E05CC; // type:func
func_809E06D4_jp = 0x809E06D4; // type:func
func_809E0704_jp = 0x809E0704; // type:func
func_809E0820_jp = 0x809E0820; // type:func
func_809E0878_jp = 0x809E0878; // type:func
func_809E08C4_jp = 0x809E08C4; // type:func
func_809E08F0_jp = 0x809E08F0; // type:func
func_809E0930_jp = 0x809E0930; // type:func

// .data

_008C3A00_Profile = 0x809E0960; //
D_809E0984_jp = 0x809E0984; //
D_809E09A0_jp = 0x809E09A0; //
D_809E09A8_jp = 0x809E09A8; //
D_809E09B4_jp = 0x809E09B4; //
D_809E09BC_jp = 0x809E09BC; // type:s16
D_809E0A04_jp = 0x809E0A04; //
D_809E0A0C_jp = 0x809E0A0C; //
D_809E0A24_jp = 0x809E0A24; //

// .text

func_809E0B10_jp = 0x809E0B10; // type:func
func_809E0B80_jp = 0x809E0B80; // type:func
func_809E0BAC_jp = 0x809E0BAC; // type:func
func_809E0BD8_jp = 0x809E0BD8; // type:func
func_809E0C04_jp = 0x809E0C04; // type:func
func_809E0C44_jp = 0x809E0C44; // type:func
func_809E0C70_jp = 0x809E0C70; // type:func
func_809E0C8C_jp = 0x809E0C8C; // type:func
func_809E0CBC_jp = 0x809E0CBC; // type:func
func_809E0CF0_jp = 0x809E0CF0; // type:func
func_809E0D28_jp = 0x809E0D28; // type:func
func_809E0D3C_jp = 0x809E0D3C; // type:func
func_809E0D98_jp = 0x809E0D98; // type:func
func_809E0DC0_jp = 0x809E0DC0; // type:func
func_809E0DF0_jp = 0x809E0DF0; // type:func
func_809E0EA4_jp = 0x809E0EA4; // type:func
func_809E100C_jp = 0x809E100C; // type:func
func_809E104C_jp = 0x809E104C; // type:func
func_809E107C_jp = 0x809E107C; // type:func
func_809E10AC_jp = 0x809E10AC; // type:func
func_809E11C0_jp = 0x809E11C0; // type:func
func_809E122C_jp = 0x809E122C; // type:func
func_809E125C_jp = 0x809E125C; // type:func
func_809E12AC_jp = 0x809E12AC; // type:func
func_809E1310_jp = 0x809E1310; // type:func
func_809E138C_jp = 0x809E138C; // type:func
func_809E13C0_jp = 0x809E13C0; // type:func
func_809E1450_jp = 0x809E1450; // type:func
func_809E1484_jp = 0x809E1484; // type:func
func_809E14F4_jp = 0x809E14F4; // type:func
func_809E1570_jp = 0x809E1570; // type:func

// .data

_008C4300_Profile = 0x809E15A0; //
D_809E15C4_jp = 0x809E15C4; //
D_809E15E0_jp = 0x809E15E0; //
D_809E15EC_jp = 0x809E15EC; //
D_809E15F8_jp = 0x809E15F8; //
D_809E1604_jp = 0x809E1604; //
D_809E1610_jp = 0x809E1610; //
D_809E1618_jp = 0x809E1618; //
D_809E1620_jp = 0x809E1620; //
D_809E1638_jp = 0x809E1638; //

// .text

func_809E1780_jp = 0x809E1780; // type:func
func_809E17F0_jp = 0x809E17F0; // type:func
func_809E181C_jp = 0x809E181C; // type:func
func_809E1848_jp = 0x809E1848; // type:func
func_809E1874_jp = 0x809E1874; // type:func
func_809E18B4_jp = 0x809E18B4; // type:func
func_809E18E0_jp = 0x809E18E0; // type:func
func_809E18FC_jp = 0x809E18FC; // type:func
func_809E1960_jp = 0x809E1960; // type:func
func_809E19B0_jp = 0x809E19B0; // type:func
func_809E1A3C_jp = 0x809E1A3C; // type:func
func_809E1B78_jp = 0x809E1B78; // type:func
func_809E1BAC_jp = 0x809E1BAC; // type:func
func_809E1C24_jp = 0x809E1C24; // type:func
func_809E1C78_jp = 0x809E1C78; // type:func
func_809E1CCC_jp = 0x809E1CCC; // type:func
func_809E1D30_jp = 0x809E1D30; // type:func
func_809E1D6C_jp = 0x809E1D6C; // type:func
func_809E1E4C_jp = 0x809E1E4C; // type:func
func_809E1E9C_jp = 0x809E1E9C; // type:func
func_809E1F10_jp = 0x809E1F10; // type:func
func_809E1F5C_jp = 0x809E1F5C; // type:func
func_809E1F70_jp = 0x809E1F70; // type:func
func_809E1F98_jp = 0x809E1F98; // type:func
func_809E1FC8_jp = 0x809E1FC8; // type:func
func_809E2068_jp = 0x809E2068; // type:func
func_809E22A4_jp = 0x809E22A4; // type:func
func_809E2328_jp = 0x809E2328; // type:func
func_809E24C4_jp = 0x809E24C4; // type:func
func_809E2504_jp = 0x809E2504; // type:func
func_809E2534_jp = 0x809E2534; // type:func
func_809E2644_jp = 0x809E2644; // type:func
func_809E26BC_jp = 0x809E26BC; // type:func
func_809E26EC_jp = 0x809E26EC; // type:func
func_809E273C_jp = 0x809E273C; // type:func
func_809E279C_jp = 0x809E279C; // type:func
func_809E2824_jp = 0x809E2824; // type:func
func_809E2858_jp = 0x809E2858; // type:func
func_809E2898_jp = 0x809E2898; // type:func
func_809E28D8_jp = 0x809E28D8; // type:func

// .data

_008C4F70_Profile = 0x809E2910; //
D_809E2934_jp = 0x809E2934; //
D_809E2950_jp = 0x809E2950; //
D_FLT_809E297C_jp = 0x809E297C; // type:f32
D_809E2984_jp = 0x809E2984; // type:u8
D_809E2988_jp = 0x809E2988; //
D_809E29B4_jp = 0x809E29B4; //
D_809E29C0_jp = 0x809E29C0; //
D_809E29C8_jp = 0x809E29C8; // type:s16
D_809E29E4_jp = 0x809E29E4; //
D_809E29EC_jp = 0x809E29EC; //

// .rodata

RO_FLT_809E2A10_jp = 0x809E2A10; // type:f32
RO_FLT_809E2A14_jp = 0x809E2A14; // type:f32

// .text

func_809E2BA0_jp = 0x809E2BA0; // type:func
func_809E2C84_jp = 0x809E2C84; // type:func
func_809E2CB0_jp = 0x809E2CB0; // type:func
func_809E2D14_jp = 0x809E2D14; // type:func
func_809E2D40_jp = 0x809E2D40; // type:func
func_809E2D80_jp = 0x809E2D80; // type:func
func_809E2DAC_jp = 0x809E2DAC; // type:func
func_809E2DCC_jp = 0x809E2DCC; // type:func
func_809E2E30_jp = 0x809E2E30; // type:func
func_809E2E64_jp = 0x809E2E64; // type:func
func_809E2EE8_jp = 0x809E2EE8; // type:func
func_809E2EFC_jp = 0x809E2EFC; // type:func
func_809E2F20_jp = 0x809E2F20; // type:func
func_809E2F48_jp = 0x809E2F48; // type:func
func_809E2F78_jp = 0x809E2F78; // type:func
func_809E2FD0_jp = 0x809E2FD0; // type:func
func_809E3000_jp = 0x809E3000; // type:func
func_809E3030_jp = 0x809E3030; // type:func
func_809E311C_jp = 0x809E311C; // type:func
func_809E3194_jp = 0x809E3194; // type:func
func_809E31C4_jp = 0x809E31C4; // type:func
func_809E32C4_jp = 0x809E32C4; // type:func
func_809E32F8_jp = 0x809E32F8; // type:func
func_809E3324_jp = 0x809E3324; // type:func
func_809E3364_jp = 0x809E3364; // type:func

// .data

D_809E3390_jp = 0x809E3390; //
_008C6390_Profile = 0x809E3394; //
D_809E33B8_jp = 0x809E33B8; //
D_809E33D4_jp = 0x809E33D4; //
D_809E33D8_jp = 0x809E33D8; //
D_809E33DC_jp = 0x809E33DC; //
D_FLT_809E33E0_jp = 0x809E33E0; // type:f32
D_809E33E4_jp = 0x809E33E4; //
D_809E33F0_jp = 0x809E33F0; //
D_809E33F8_jp = 0x809E33F8; // type:s16
D_809E3440_jp = 0x809E3440; //
D_809E3448_jp = 0x809E3448; //

// .bss

B_809E3460_jp = 0x809E3460; //

// .text

func_809E35B0_jp = 0x809E35B0; // type:func
func_809E3648_jp = 0x809E3648; // type:func
func_809E3674_jp = 0x809E3674; // type:func
func_809E3724_jp = 0x809E3724; // type:func
func_809E3750_jp = 0x809E3750; // type:func
func_809E37C4_jp = 0x809E37C4; // type:func
func_809E3814_jp = 0x809E3814; // type:func
func_809E3848_jp = 0x809E3848; // type:func
func_809E3904_jp = 0x809E3904; // type:func
func_809E3924_jp = 0x809E3924; // type:func
func_809E3938_jp = 0x809E3938; // type:func
func_809E396C_jp = 0x809E396C; // type:func
func_809E399C_jp = 0x809E399C; // type:func
func_809E3A68_jp = 0x809E3A68; // type:func
func_809E3AF4_jp = 0x809E3AF4; // type:func
func_809E3B30_jp = 0x809E3B30; // type:func
func_809E3BB8_jp = 0x809E3BB8; // type:func
func_809E3D08_jp = 0x809E3D08; // type:func
func_809E3D70_jp = 0x809E3D70; // type:func
func_809E3DD4_jp = 0x809E3DD4; // type:func
func_809E3E04_jp = 0x809E3E04; // type:func
func_809E3F2C_jp = 0x809E3F2C; // type:func
func_809E4018_jp = 0x809E4018; // type:func
func_809E414C_jp = 0x809E414C; // type:func
func_809E41A4_jp = 0x809E41A4; // type:func
func_809E41D4_jp = 0x809E41D4; // type:func
func_809E4204_jp = 0x809E4204; // type:func
func_809E42DC_jp = 0x809E42DC; // type:func
func_809E4348_jp = 0x809E4348; // type:func
func_809E4378_jp = 0x809E4378; // type:func
func_809E44A8_jp = 0x809E44A8; // type:func
func_809E44DC_jp = 0x809E44DC; // type:func
func_809E451C_jp = 0x809E451C; // type:func
func_809E455C_jp = 0x809E455C; // type:func

// .data

D_809E4590_jp = 0x809E4590; //
D_809E4594_jp = 0x809E4594; //
D_809E4598_jp = 0x809E4598; // type:u16
D_809E459C_jp = 0x809E459C; //
D_809E45A8_jp = 0x809E45A8; //
D_809E45BC_jp = 0x809E45BC; //
D_809E45C8_jp = 0x809E45C8; //
D_809E45DC_jp = 0x809E45DC; //
D_809E45E8_jp = 0x809E45E8; //
D_809E45FC_jp = 0x809E45FC; //
D_809E4610_jp = 0x809E4610; //
D_809E4624_jp = 0x809E4624; //
D_809E4638_jp = 0x809E4638; //
D_809E4640_jp = 0x809E4640; //
D_FLT_809E4668_jp = 0x809E4668; // type:f32
D_FLT_809E4690_jp = 0x809E4690; // type:f32
D_FLT_809E46B8_jp = 0x809E46B8; // type:f32
_008C6D80_Profile = 0x809E4708; //
D_809E472C_jp = 0x809E472C; //
D_809E4748_jp = 0x809E4748; //
D_809E4750_jp = 0x809E4750; //
D_809E4780_jp = 0x809E4780; //
D_FLT_809E478C_jp = 0x809E478C; // type:f32
D_809E47A0_jp = 0x809E47A0; //
D_809E47A8_jp = 0x809E47A8; // type:s16
D_809E47AC_jp = 0x809E47AC; //
D_809E47B4_jp = 0x809E47B4; //
D_809E47E4_jp = 0x809E47E4; //

// .rodata

RO_FLT_809E47F0_jp = 0x809E47F0; // type:f32
RO_FLT_809E47F4_jp = 0x809E47F4; // type:f32

// .text

func_809E4A20_jp = 0x809E4A20; // type:func
func_809E4A98_jp = 0x809E4A98; // type:func
func_809E4AC4_jp = 0x809E4AC4; // type:func
func_809E4B04_jp = 0x809E4B04; // type:func
func_809E4B30_jp = 0x809E4B30; // type:func
func_809E4BB0_jp = 0x809E4BB0; // type:func
func_809E4C04_jp = 0x809E4C04; // type:func
func_809E4C74_jp = 0x809E4C74; // type:func
func_809E4C9C_jp = 0x809E4C9C; // type:func
func_809E4D6C_jp = 0x809E4D6C; // type:func
func_809E4E54_jp = 0x809E4E54; // type:func
func_809E4E9C_jp = 0x809E4E9C; // type:func
func_809E4EE4_jp = 0x809E4EE4; // type:func
func_809E4FD8_jp = 0x809E4FD8; // type:func
func_809E5128_jp = 0x809E5128; // type:func
func_809E518C_jp = 0x809E518C; // type:func
func_809E51E8_jp = 0x809E51E8; // type:func
func_809E5234_jp = 0x809E5234; // type:func
func_809E526C_jp = 0x809E526C; // type:func
func_809E52C4_jp = 0x809E52C4; // type:func
func_809E530C_jp = 0x809E530C; // type:func
func_809E533C_jp = 0x809E533C; // type:func
func_809E5370_jp = 0x809E5370; // type:func
func_809E53B0_jp = 0x809E53B0; // type:func
func_809E53E4_jp = 0x809E53E4; // type:func
func_809E5460_jp = 0x809E5460; // type:func
func_809E54BC_jp = 0x809E54BC; // type:func
func_809E54E8_jp = 0x809E54E8; // type:func

// .data

_008C81F0_Profile = 0x809E5520; //
D_809E5544_jp = 0x809E5544; //
D_809E5560_jp = 0x809E5560; //
D_809E5570_jp = 0x809E5570; //
D_809E5580_jp = 0x809E5580; // type:u16
D_809E5588_jp = 0x809E5588; // type:u16
D_809E5590_jp = 0x809E5590; //
D_809E55A0_jp = 0x809E55A0; //
D_809E55B0_jp = 0x809E55B0; //
D_809E55BC_jp = 0x809E55BC; //
D_809E55C8_jp = 0x809E55C8; //
D_809E55D4_jp = 0x809E55D4; //
D_809E55F4_jp = 0x809E55F4; //

// .text

func_809E5740_jp = 0x809E5740; // type:func
func_809E5848_jp = 0x809E5848; // type:func
func_809E5874_jp = 0x809E5874; // type:func
func_809E58B4_jp = 0x809E58B4; // type:func
func_809E58E0_jp = 0x809E58E0; // type:func
func_809E597C_jp = 0x809E597C; // type:func
func_809E59C4_jp = 0x809E59C4; // type:func
func_809E5A94_jp = 0x809E5A94; // type:func
func_809E5B7C_jp = 0x809E5B7C; // type:func
func_809E5BC4_jp = 0x809E5BC4; // type:func
func_809E5CF8_jp = 0x809E5CF8; // type:func
func_809E5DF0_jp = 0x809E5DF0; // type:func
func_809E5EA0_jp = 0x809E5EA0; // type:func
func_809E5FA0_jp = 0x809E5FA0; // type:func
func_809E5FE4_jp = 0x809E5FE4; // type:func
func_809E6014_jp = 0x809E6014; // type:func
func_809E6048_jp = 0x809E6048; // type:func
func_809E6084_jp = 0x809E6084; // type:func
func_809E60C4_jp = 0x809E60C4; // type:func
func_809E60F0_jp = 0x809E60F0; // type:func
func_809E61C8_jp = 0x809E61C8; // type:func
func_809E6234_jp = 0x809E6234; // type:func

// .data

_008C8F10_Profile = 0x809E6260; //
D_809E6284_jp = 0x809E6284; //
D_809E62A0_jp = 0x809E62A0; //
D_809E62B0_jp = 0x809E62B0; // type:u16
D_809E62B8_jp = 0x809E62B8; //
D_809E62C8_jp = 0x809E62C8; // type:u8
D_809E62CC_jp = 0x809E62CC; //
D_809E62DC_jp = 0x809E62DC; //

// .bss

B_809E62F0_jp = 0x809E62F0; //

// .text

func_809E63F0_jp = 0x809E63F0; // type:func
func_809E6464_jp = 0x809E6464; // type:func
func_809E6490_jp = 0x809E6490; // type:func
func_809E64D8_jp = 0x809E64D8; // type:func
func_809E6504_jp = 0x809E6504; // type:func
func_809E6530_jp = 0x809E6530; // type:func
func_809E66CC_jp = 0x809E66CC; // type:func
func_809E6718_jp = 0x809E6718; // type:func
func_809E67AC_jp = 0x809E67AC; // type:func
func_809E67EC_jp = 0x809E67EC; // type:func
func_809E6880_jp = 0x809E6880; // type:func
func_809E68E8_jp = 0x809E68E8; // type:func
func_809E69E0_jp = 0x809E69E0; // type:func
func_809E6A70_jp = 0x809E6A70; // type:func
func_809E6AF4_jp = 0x809E6AF4; // type:func
func_809E6B54_jp = 0x809E6B54; // type:func
func_809E6BE0_jp = 0x809E6BE0; // type:func
func_809E6C38_jp = 0x809E6C38; // type:func
func_809E6C98_jp = 0x809E6C98; // type:func
func_809E6CFC_jp = 0x809E6CFC; // type:func
func_809E6D4C_jp = 0x809E6D4C; // type:func
func_809E6DF8_jp = 0x809E6DF8; // type:func
func_809E6E58_jp = 0x809E6E58; // type:func
func_809E6E74_jp = 0x809E6E74; // type:func
func_809E6EFC_jp = 0x809E6EFC; // type:func
func_809E6F30_jp = 0x809E6F30; // type:func
func_809E6F5C_jp = 0x809E6F5C; // type:func
func_809E6FE8_jp = 0x809E6FE8; // type:func

// .data

_008C9BB0_Profile = 0x809E7020; //
D_809E7044_jp = 0x809E7044; //
D_809E7068_jp = 0x809E7068; //

// .text

func_809E7190_jp = 0x809E7190; // type:func
func_809E726C_jp = 0x809E726C; // type:func
func_809E7298_jp = 0x809E7298; // type:func
func_809E72D8_jp = 0x809E72D8; // type:func
func_809E7304_jp = 0x809E7304; // type:func
func_809E73A0_jp = 0x809E73A0; // type:func
func_809E7438_jp = 0x809E7438; // type:func
func_809E74F8_jp = 0x809E74F8; // type:func
func_809E7544_jp = 0x809E7544; // type:func
func_809E7574_jp = 0x809E7574; // type:func
func_809E75C4_jp = 0x809E75C4; // type:func
func_809E75F4_jp = 0x809E75F4; // type:func
func_809E7628_jp = 0x809E7628; // type:func
func_809E7674_jp = 0x809E7674; // type:func
func_809E77A0_jp = 0x809E77A0; // type:func
func_809E7800_jp = 0x809E7800; // type:func
func_809E78D0_jp = 0x809E78D0; // type:func
func_809E78F8_jp = 0x809E78F8; // type:func
func_809E79FC_jp = 0x809E79FC; // type:func
func_809E7A54_jp = 0x809E7A54; // type:func
func_809E7AC0_jp = 0x809E7AC0; // type:func
func_809E7B48_jp = 0x809E7B48; // type:func
func_809E7B88_jp = 0x809E7B88; // type:func
func_809E7BBC_jp = 0x809E7BBC; // type:func
func_809E7BF0_jp = 0x809E7BF0; // type:func
func_809E7C40_jp = 0x809E7C40; // type:func
func_809E7C6C_jp = 0x809E7C6C; // type:func

// .data

_008CA950_Profile = 0x809E7CA0; //
D_809E7CC4_jp = 0x809E7CC4; //
D_809E7CE0_jp = 0x809E7CE0; //
D_809E7CFC_jp = 0x809E7CFC; //
D_809E7D18_jp = 0x809E7D18; //
D_809E7D28_jp = 0x809E7D28; //
D_809E7D38_jp = 0x809E7D38; //

// .text

func_809E7ED0_jp = 0x809E7ED0; // type:func
func_809E7F0C_jp = 0x809E7F0C; // type:func
func_809E7F34_jp = 0x809E7F34; // type:func
func_809E7F94_jp = 0x809E7F94; // type:func
func_809E8118_jp = 0x809E8118; // type:func
func_809E823C_jp = 0x809E823C; // type:func
func_809E8350_jp = 0x809E8350; // type:func
func_809E8480_jp = 0x809E8480; // type:func
func_809E84E4_jp = 0x809E84E4; // type:func
func_809E85FC_jp = 0x809E85FC; // type:func
func_809E8674_jp = 0x809E8674; // type:func
func_809E8768_jp = 0x809E8768; // type:func
func_809E87D4_jp = 0x809E87D4; // type:func
func_809E8838_jp = 0x809E8838; // type:func
func_809E889C_jp = 0x809E889C; // type:func
func_809E89AC_jp = 0x809E89AC; // type:func
func_809E8BDC_jp = 0x809E8BDC; // type:func
func_809E8C14_jp = 0x809E8C14; // type:func
func_809E8C80_jp = 0x809E8C80; // type:func
func_809E8CD4_jp = 0x809E8CD4; // type:func
func_809E8D44_jp = 0x809E8D44; // type:func
func_809E8DB4_jp = 0x809E8DB4; // type:func
func_809E8E24_jp = 0x809E8E24; // type:func
func_809E9160_jp = 0x809E9160; // type:func
func_809E91A4_jp = 0x809E91A4; // type:func
func_809E920C_jp = 0x809E920C; // type:func
func_809E92C0_jp = 0x809E92C0; // type:func
func_809E931C_jp = 0x809E931C; // type:func
func_809E93C8_jp = 0x809E93C8; // type:func
func_809E96E8_jp = 0x809E96E8; // type:func
func_809E9764_jp = 0x809E9764; // type:func
func_809E97F8_jp = 0x809E97F8; // type:func

// .data

_008CB690_Profile = 0x809E9840; //
D_809E9864_jp = 0x809E9864; //
D_809E986C_jp = 0x809E986C; //
D_809E9874_jp = 0x809E9874; //
D_809E987C_jp = 0x809E987C; //
D_809E9A9C_jp = 0x809E9A9C; //

// .rodata

RO_STR_809E9AB0_jp = 0x809E9AB0; // type:asciz
RO_STR_809E9ACC_jp = 0x809E9ACC; // type:asciz
RO_STR_809E9AE8_jp = 0x809E9AE8; // type:asciz
RO_STR_809E9B04_jp = 0x809E9B04; // type:asciz
RO_STR_809E9B20_jp = 0x809E9B20; // type:asciz
RO_STR_809E9B3C_jp = 0x809E9B3C; // type:asciz
RO_STR_809E9B58_jp = 0x809E9B58; // type:asciz
RO_STR_809E9B74_jp = 0x809E9B74; // type:asciz

// .bss

B_809E9B90_jp = 0x809E9B90; //
B_809E9E68_jp = 0x809E9E68; //
B_809EA140_jp = 0x809EA140; //
B_809EA418_jp = 0x809EA418; //
B_809EA6F0_jp = 0x809EA6F0; //
B_809EB528_jp = 0x809EB528; //
B_809ED528_jp = 0x809ED528; //
B_809EF528_jp = 0x809EF528; //
B_809F1528_jp = 0x809F1528; //
B_809F3528_jp = 0x809F3528; //
B_809FD530_jp = 0x809FD530; //
B_809FD818_jp = 0x809FD818; //
B_809FDB00_jp = 0x809FDB00; //
B_809FE0B8_jp = 0x809FE0B8; //
B_809FE3A0_jp = 0x809FE3A0; //

// .text

func_809FE880_jp = 0x809FE880; // type:func
func_809FEA20_jp = 0x809FEA20; // type:func
func_809FEAEC_jp = 0x809FEAEC; // type:func
func_809FECD4_jp = 0x809FECD4; // type:func
func_809FEED4_jp = 0x809FEED4; // type:func
func_809FEF90_jp = 0x809FEF90; // type:func
func_809FF034_jp = 0x809FF034; // type:func
func_809FF0B4_jp = 0x809FF0B4; // type:func
func_809FF120_jp = 0x809FF120; // type:func
func_809FF1C8_jp = 0x809FF1C8; // type:func
func_809FF2C8_jp = 0x809FF2C8; // type:func
func_809FF2FC_jp = 0x809FF2FC; // type:func
func_809FF330_jp = 0x809FF330; // type:func
func_809FF3EC_jp = 0x809FF3EC; // type:func
func_809FF534_jp = 0x809FF534; // type:func
func_809FF59C_jp = 0x809FF59C; // type:func
func_809FF650_jp = 0x809FF650; // type:func
func_809FF7F8_jp = 0x809FF7F8; // type:func

// .data

_008CD550_Profile = 0x809FF930; //
D_809FF954_jp = 0x809FF954; //
D_809FF95C_jp = 0x809FF95C; //
D_809FF970_jp = 0x809FF970; //
D_809FF978_jp = 0x809FF978; //
D_809FF98C_jp = 0x809FF98C; //
D_809FF9CC_jp = 0x809FF9CC; //
D_FLT_809FF9D4_jp = 0x809FF9D4; // type:f32
D_FLT_809FF9E0_jp = 0x809FF9E0; // type:f32
D_809FF9EC_jp = 0x809FF9EC; //
D_809FF9FC_jp = 0x809FF9FC; //
D_FLT_809FFA04_jp = 0x809FFA04; // type:f32
D_FLT_809FFA14_jp = 0x809FFA14; // type:f32
D_FLT_809FFA24_jp = 0x809FFA24; // type:f32
D_809FFA34_jp = 0x809FFA34; //

// .rodata

RO_STR_809FFA40_jp = 0x809FFA40; // type:asciz
RO_STR_809FFA5C_jp = 0x809FFA5C; // type:asciz
RO_STR_809FFA78_jp = 0x809FFA78; // type:asciz

// .text

func_809FFBC0_jp = 0x809FFBC0; // type:func
func_809FFCF8_jp = 0x809FFCF8; // type:func
func_809FFDA8_jp = 0x809FFDA8; // type:func
func_809FFF90_jp = 0x809FFF90; // type:func
func_80A00190_jp = 0x80A00190; // type:func
func_80A0024C_jp = 0x80A0024C; // type:func
func_80A002A8_jp = 0x80A002A8; // type:func
func_80A00378_jp = 0x80A00378; // type:func
func_80A003A4_jp = 0x80A003A4; // type:func
func_80A00400_jp = 0x80A00400; // type:func
func_80A004A4_jp = 0x80A004A4; // type:func
func_80A005CC_jp = 0x80A005CC; // type:func
func_80A00600_jp = 0x80A00600; // type:func
func_80A00634_jp = 0x80A00634; // type:func
func_80A006F0_jp = 0x80A006F0; // type:func
func_80A0080C_jp = 0x80A0080C; // type:func
func_80A00874_jp = 0x80A00874; // type:func
func_80A00918_jp = 0x80A00918; // type:func
func_80A00AAC_jp = 0x80A00AAC; // type:func

// .data

_008CE890_Profile = 0x80A00C30; //
D_80A00C54_jp = 0x80A00C54; //
D_80A00C64_jp = 0x80A00C64; //
D_80A00C78_jp = 0x80A00C78; //
D_80A00C80_jp = 0x80A00C80; //
D_80A00C94_jp = 0x80A00C94; //
D_80A00CD4_jp = 0x80A00CD4; //
D_FLT_80A00CDC_jp = 0x80A00CDC; // type:f32
D_FLT_80A00CE8_jp = 0x80A00CE8; // type:f32
D_80A00CF4_jp = 0x80A00CF4; //
D_80A00D04_jp = 0x80A00D04; //
D_FLT_80A00D0C_jp = 0x80A00D0C; // type:f32
D_FLT_80A00D1C_jp = 0x80A00D1C; // type:f32
D_FLT_80A00D2C_jp = 0x80A00D2C; // type:f32
D_80A00D3C_jp = 0x80A00D3C; //

// .rodata

RO_STR_80A00D50_jp = 0x80A00D50; // type:asciz
RO_STR_80A00D68_jp = 0x80A00D68; // type:asciz
RO_STR_80A00D80_jp = 0x80A00D80; // type:asciz

// .text

func_80A00ED0_jp = 0x80A00ED0; // type:func
func_80A01034_jp = 0x80A01034; // type:func
func_80A010E0_jp = 0x80A010E0; // type:func
func_80A01110_jp = 0x80A01110; // type:func
func_80A01214_jp = 0x80A01214; // type:func
func_80A01270_jp = 0x80A01270; // type:func
func_80A0134C_jp = 0x80A0134C; // type:func
func_80A01460_jp = 0x80A01460; // type:func
func_80A014A0_jp = 0x80A014A0; // type:func
func_80A015AC_jp = 0x80A015AC; // type:func
func_80A01648_jp = 0x80A01648; // type:func
func_80A0178C_jp = 0x80A0178C; // type:func
func_80A017C0_jp = 0x80A017C0; // type:func
func_80A017F4_jp = 0x80A017F4; // type:func
func_80A018FC_jp = 0x80A018FC; // type:func
func_80A01984_jp = 0x80A01984; // type:func
func_80A019EC_jp = 0x80A019EC; // type:func
func_80A01A80_jp = 0x80A01A80; // type:func
func_80A01BFC_jp = 0x80A01BFC; // type:func

// .data

_008CFBA0_Profile = 0x80A01D30; //
D_80A01D54_jp = 0x80A01D54; //
D_80A01D60_jp = 0x80A01D60; //
D_80A01D74_jp = 0x80A01D74; //
D_80A01D7C_jp = 0x80A01D7C; //
D_80A01D90_jp = 0x80A01D90; //
D_80A01E08_jp = 0x80A01E08; //
D_FLT_80A01E10_jp = 0x80A01E10; // type:f32
D_FLT_80A01E54_jp = 0x80A01E54; // type:f32
D_80A01E98_jp = 0x80A01E98; //
D_FLT_80A01EA0_jp = 0x80A01EA0; // type:f32
D_FLT_80A01EB0_jp = 0x80A01EB0; // type:f32
D_FLT_80A01EC0_jp = 0x80A01EC0; // type:f32
D_80A01ED0_jp = 0x80A01ED0; //
D_80A01EE0_jp = 0x80A01EE0; //

// .rodata

RO_STR_80A01EF0_jp = 0x80A01EF0; // type:asciz
RO_FLT_80A01F0C_jp = 0x80A01F0C; // type:f32
RO_FLT_80A01F10_jp = 0x80A01F10; // type:f32
RO_FLT_80A01F14_jp = 0x80A01F14; // type:f32

// .text

func_80A02050_jp = 0x80A02050; // type:func
func_80A021C0_jp = 0x80A021C0; // type:func
func_80A0226C_jp = 0x80A0226C; // type:func
func_80A0229C_jp = 0x80A0229C; // type:func
func_80A023A0_jp = 0x80A023A0; // type:func
func_80A023FC_jp = 0x80A023FC; // type:func
func_80A024D8_jp = 0x80A024D8; // type:func
func_80A025EC_jp = 0x80A025EC; // type:func
func_80A0262C_jp = 0x80A0262C; // type:func
func_80A02738_jp = 0x80A02738; // type:func
func_80A027D4_jp = 0x80A027D4; // type:func
func_80A02918_jp = 0x80A02918; // type:func
func_80A0294C_jp = 0x80A0294C; // type:func
func_80A02980_jp = 0x80A02980; // type:func
func_80A02A88_jp = 0x80A02A88; // type:func
func_80A02B10_jp = 0x80A02B10; // type:func
func_80A02B78_jp = 0x80A02B78; // type:func
func_80A02C0C_jp = 0x80A02C0C; // type:func
func_80A02D88_jp = 0x80A02D88; // type:func

// .data

_008D0D20_Profile = 0x80A02EC0; //
D_80A02EE4_jp = 0x80A02EE4; //
D_80A02EEC_jp = 0x80A02EEC; //
D_80A02F00_jp = 0x80A02F00; //
D_80A02F08_jp = 0x80A02F08; //
D_80A02F1C_jp = 0x80A02F1C; //
D_80A02FC4_jp = 0x80A02FC4; //
D_FLT_80A02FCC_jp = 0x80A02FCC; // type:f32
D_FLT_80A0302C_jp = 0x80A0302C; // type:f32
D_80A0308C_jp = 0x80A0308C; //
D_FLT_80A03094_jp = 0x80A03094; // type:f32
D_FLT_80A030A4_jp = 0x80A030A4; // type:f32
D_FLT_80A030B4_jp = 0x80A030B4; // type:f32
D_80A030C4_jp = 0x80A030C4; //
D_80A030D4_jp = 0x80A030D4; //

// .rodata

RO_STR_80A030E0_jp = 0x80A030E0; // type:asciz
RO_FLT_80A030F8_jp = 0x80A030F8; // type:f32
RO_FLT_80A030FC_jp = 0x80A030FC; // type:f32

// .text

func_80A03230_jp = 0x80A03230; // type:func
func_80A03240_jp = 0x80A03240; // type:func
func_80A032CC_jp = 0x80A032CC; // type:func
func_80A03320_jp = 0x80A03320; // type:func

// .data

_008D1F00_Profile = 0x80A03440; //

// .text

func_80A034A0_jp = 0x80A034A0; // type:func
func_80A034B0_jp = 0x80A034B0; // type:func
D_80A03528_jp = 0x80A03528; //
func_80A0353C_jp = 0x80A0353C; // type:func
func_80A03590_jp = 0x80A03590; // type:func

// .data

_008D2170_Profile = 0x80A036D0; //
D_80A036F4_jp = 0x80A036F4; //

// .text

func_80A03770_jp = 0x80A03770; // type:func
func_80A03918_jp = 0x80A03918; // type:func
func_80A039C0_jp = 0x80A039C0; // type:func
func_80A039F0_jp = 0x80A039F0; // type:func
func_80A03BD8_jp = 0x80A03BD8; // type:func
func_80A03C64_jp = 0x80A03C64; // type:func
func_80A03E08_jp = 0x80A03E08; // type:func
func_80A03EE4_jp = 0x80A03EE4; // type:func
func_80A0401C_jp = 0x80A0401C; // type:func
func_80A040B4_jp = 0x80A040B4; // type:func
func_80A041A4_jp = 0x80A041A4; // type:func
func_80A041D8_jp = 0x80A041D8; // type:func
func_80A042A4_jp = 0x80A042A4; // type:func
func_80A044A4_jp = 0x80A044A4; // type:func
func_80A04590_jp = 0x80A04590; // type:func
func_80A04654_jp = 0x80A04654; // type:func
func_80A046C8_jp = 0x80A046C8; // type:func
func_80A0477C_jp = 0x80A0477C; // type:func
func_80A04798_jp = 0x80A04798; // type:func
func_80A0480C_jp = 0x80A0480C; // type:func
func_80A04880_jp = 0x80A04880; // type:func
func_80A04908_jp = 0x80A04908; // type:func
func_80A04AA4_jp = 0x80A04AA4; // type:func

// .data

_008D2440_Profile = 0x80A04C00; //
D_80A04C04_jp = 0x80A04C04; //
D_80A04C24_jp = 0x80A04C24; //
D_80A04C38_jp = 0x80A04C38; //
D_80A04C54_jp = 0x80A04C54; //
D_80A04C6C_jp = 0x80A04C6C; //
D_80A04C80_jp = 0x80A04C80; //
D_80A04C94_jp = 0x80A04C94; //
D_80A04CA8_jp = 0x80A04CA8; //
D_80A04CBC_jp = 0x80A04CBC; //
D_80A04CD0_jp = 0x80A04CD0; //
D_80A04CE4_jp = 0x80A04CE4; //
D_80A04CF8_jp = 0x80A04CF8; //
D_80A04D00_jp = 0x80A04D00; //
D_80A04D14_jp = 0x80A04D14; //
D_80A04D24_jp = 0x80A04D24; //
D_80A04D34_jp = 0x80A04D34; // type:u16
D_80A04D3C_jp = 0x80A04D3C; //
D_80A04D50_jp = 0x80A04D50; //
D_FLT_80A04DA0_jp = 0x80A04DA0; // type:f32
D_FLT_80A04DB0_jp = 0x80A04DB0; // type:f32
D_80A04DC0_jp = 0x80A04DC0; //
D_80A04E00_jp = 0x80A04E00; //
D_FLT_80A04E08_jp = 0x80A04E08; // type:f32
D_FLT_80A04E14_jp = 0x80A04E14; // type:f32
D_80A04E20_jp = 0x80A04E20; //
D_80A04E30_jp = 0x80A04E30; //

// .rodata

RO_STR_80A04E60_jp = 0x80A04E60; // type:asciz
RO_STR_80A04E78_jp = 0x80A04E78; // type:asciz
RO_STR_80A04E90_jp = 0x80A04E90; // type:asciz

// .text

func_80A05030_jp = 0x80A05030; // type:func
func_80A05074_jp = 0x80A05074; // type:func
func_80A0510C_jp = 0x80A0510C; // type:func
func_80A052F4_jp = 0x80A052F4; // type:func
func_80A054F4_jp = 0x80A054F4; // type:func
func_80A055EC_jp = 0x80A055EC; // type:func
func_80A05690_jp = 0x80A05690; // type:func
func_80A05760_jp = 0x80A05760; // type:func
func_80A05780_jp = 0x80A05780; // type:func
func_80A05868_jp = 0x80A05868; // type:func
func_80A058D0_jp = 0x80A058D0; // type:func

// .data

_008D3D00_Profile = 0x80A05B70; //
D_80A05B94_jp = 0x80A05B94; //
D_80A05BA8_jp = 0x80A05BA8; //
D_80A05BBC_jp = 0x80A05BBC; //
D_80A05BD0_jp = 0x80A05BD0; //
D_80A05C10_jp = 0x80A05C10; //
D_FLT_80A05C18_jp = 0x80A05C18; // type:f32
D_FLT_80A05C24_jp = 0x80A05C24; // type:f32
D_80A05C30_jp = 0x80A05C30; //

// .rodata

RO_STR_80A05C40_jp = 0x80A05C40; // type:asciz
RO_STR_80A05C5C_jp = 0x80A05C5C; // type:asciz
RO_STR_80A05C78_jp = 0x80A05C78; // type:asciz

// .text

func_80A05D50_jp = 0x80A05D50; // type:func
func_80A05F88_jp = 0x80A05F88; // type:func
func_80A06068_jp = 0x80A06068; // type:func
func_80A06098_jp = 0x80A06098; // type:func
func_80A0612C_jp = 0x80A0612C; // type:func
func_80A061BC_jp = 0x80A061BC; // type:func
func_80A06284_jp = 0x80A06284; // type:func
func_80A063B4_jp = 0x80A063B4; // type:func
func_80A064E0_jp = 0x80A064E0; // type:func
func_80A0664C_jp = 0x80A0664C; // type:func
func_80A0668C_jp = 0x80A0668C; // type:func
func_80A066B4_jp = 0x80A066B4; // type:func
func_80A067D8_jp = 0x80A067D8; // type:func
func_80A068AC_jp = 0x80A068AC; // type:func
func_80A06A58_jp = 0x80A06A58; // type:func
func_80A06AF4_jp = 0x80A06AF4; // type:func
func_80A06B74_jp = 0x80A06B74; // type:func
func_80A06BE0_jp = 0x80A06BE0; // type:func
func_80A06CD4_jp = 0x80A06CD4; // type:func
func_80A06CF0_jp = 0x80A06CF0; // type:func
func_80A06DF0_jp = 0x80A06DF0; // type:func
func_80A06E64_jp = 0x80A06E64; // type:func
func_80A07008_jp = 0x80A07008; // type:func
func_80A071A0_jp = 0x80A071A0; // type:func

// .data

_008D4A20_Profile = 0x80A07370; //
D_80A07394_jp = 0x80A07394; //
D_80A073A8_jp = 0x80A073A8; //
D_80A073BC_jp = 0x80A073BC; //
D_80A073D0_jp = 0x80A073D0; //
D_80A073E4_jp = 0x80A073E4; //
D_80A073EC_jp = 0x80A073EC; //
D_80A07400_jp = 0x80A07400; //
D_80A07414_jp = 0x80A07414; //
D_80A0741C_jp = 0x80A0741C; //
D_80A07430_jp = 0x80A07430; //
D_80A07444_jp = 0x80A07444; //
D_FLT_80A0744C_jp = 0x80A0744C; // type:f32
D_80A07454_jp = 0x80A07454; //
D_80A0746C_jp = 0x80A0746C; // type:s16
D_80A07470_jp = 0x80A07470; // type:u8
D_80A07474_jp = 0x80A07474; // type:u8
D_80A07478_jp = 0x80A07478; // type:u16
D_80A07480_jp = 0x80A07480; //
D_80A0748C_jp = 0x80A0748C; // type:s16
D_80A07494_jp = 0x80A07494; // type:s16
D_80A0749C_jp = 0x80A0749C; //
D_FLT_80A074CC_jp = 0x80A074CC; // type:f32
D_FLT_80A074DC_jp = 0x80A074DC; // type:f32
D_80A074EC_jp = 0x80A074EC; // type:u8
D_FLT_80A074F0_jp = 0x80A074F0; // type:f32
D_FLT_80A074F8_jp = 0x80A074F8; // type:f32
D_80A07500_jp = 0x80A07500; // type:u16
D_80A07504_jp = 0x80A07504; // type:u16
D_80A07508_jp = 0x80A07508; //
D_80A07510_jp = 0x80A07510; // type:s8
D_80A075D0_jp = 0x80A075D0; // type:s8
D_80A075D4_jp = 0x80A075D4; // type:s8
D_80A075D8_jp = 0x80A075D8; //
D_80A075DC_jp = 0x80A075DC; // type:s8
D_80A075E0_jp = 0x80A075E0; //
D_80A075F0_jp = 0x80A075F0; //
D_80A07604_jp = 0x80A07604; // type:u8
D_80A0760C_jp = 0x80A0760C; // type:s16
D_80A07610_jp = 0x80A07610; //
D_80A07628_jp = 0x80A07628; //

// .rodata

RO_STR_80A07640_jp = 0x80A07640; // type:asciz
RO_FLT_80A0765C_jp = 0x80A0765C; // type:f32
RO_FLT_80A07660_jp = 0x80A07660; // type:f32

// .text

func_80A07880_jp = 0x80A07880; // type:func
func_80A078A4_jp = 0x80A078A4; // type:func
func_80A07930_jp = 0x80A07930; // type:func
func_80A07B30_jp = 0x80A07B30; // type:func
func_80A07C2C_jp = 0x80A07C2C; // type:func
func_80A07CE0_jp = 0x80A07CE0; // type:func
func_80A07DBC_jp = 0x80A07DBC; // type:func
func_80A07E24_jp = 0x80A07E24; // type:func

// .data

_008D6550_Profile = 0x80A08100; //
D_80A08124_jp = 0x80A08124; //
D_80A0813C_jp = 0x80A0813C; //
D_80A08150_jp = 0x80A08150; //
D_80A08164_jp = 0x80A08164; //
D_80A081A4_jp = 0x80A081A4; //
D_FLT_80A081AC_jp = 0x80A081AC; // type:f32
D_FLT_80A081B8_jp = 0x80A081B8; // type:f32
D_80A081C4_jp = 0x80A081C4; //
D_80A081CC_jp = 0x80A081CC; //

// .rodata

RO_STR_80A081E0_jp = 0x80A081E0; // type:asciz
RO_STR_80A081FC_jp = 0x80A081FC; // type:asciz
RO_STR_80A08218_jp = 0x80A08218; // type:asciz
RO_FLT_80A08234_jp = 0x80A08234; // type:f32

// .text

func_80A082F0_jp = 0x80A082F0; // type:func
func_80A083F8_jp = 0x80A083F8; // type:func
func_80A084B8_jp = 0x80A084B8; // type:func
func_80A084E8_jp = 0x80A084E8; // type:func
func_80A08574_jp = 0x80A08574; // type:func
func_80A08670_jp = 0x80A08670; // type:func
func_80A08734_jp = 0x80A08734; // type:func
func_80A0878C_jp = 0x80A0878C; // type:func
func_80A0890C_jp = 0x80A0890C; // type:func
func_80A089D4_jp = 0x80A089D4; // type:func
func_80A08A08_jp = 0x80A08A08; // type:func
func_80A08A40_jp = 0x80A08A40; // type:func
func_80A08B0C_jp = 0x80A08B0C; // type:func
func_80A08B74_jp = 0x80A08B74; // type:func
func_80A08C08_jp = 0x80A08C08; // type:func
func_80A08C24_jp = 0x80A08C24; // type:func
func_80A08C90_jp = 0x80A08C90; // type:func
func_80A08CF8_jp = 0x80A08CF8; // type:func
func_80A08D80_jp = 0x80A08D80; // type:func
func_80A08EFC_jp = 0x80A08EFC; // type:func

// .data

_008D6FC0_Profile = 0x80A09060; //
D_80A09084_jp = 0x80A09084; //
D_80A09094_jp = 0x80A09094; //
D_80A090A8_jp = 0x80A090A8; //
D_80A090B0_jp = 0x80A090B0; //
D_80A090C4_jp = 0x80A090C4; //
D_80A090D4_jp = 0x80A090D4; //
D_80A090E4_jp = 0x80A090E4; // type:u16
D_80A090E8_jp = 0x80A090E8; //
D_80A090FC_jp = 0x80A090FC; //
D_80A0916C_jp = 0x80A0916C; //
D_FLT_80A09174_jp = 0x80A09174; // type:f32
D_80A09184_jp = 0x80A09184; //
D_80A09194_jp = 0x80A09194; //
D_FLT_80A091A4_jp = 0x80A091A4; // type:f32
D_FLT_80A091B4_jp = 0x80A091B4; // type:f32
D_80A091C4_jp = 0x80A091C4; //
D_80A091D4_jp = 0x80A091D4; //

// .rodata

RO_STR_80A091E0_jp = 0x80A091E0; // type:asciz

// .text

func_80A09330_jp = 0x80A09330; // type:func
func_80A09370_jp = 0x80A09370; // type:func
func_80A093FC_jp = 0x80A093FC; // type:func
func_80A0940C_jp = 0x80A0940C; // type:func
func_80A094EC_jp = 0x80A094EC; // type:func
func_80A09580_jp = 0x80A09580; // type:func
func_80A095A0_jp = 0x80A095A0; // type:func
func_80A095C4_jp = 0x80A095C4; // type:func
func_80A0962C_jp = 0x80A0962C; // type:func

// .data

_008D8000_Profile = 0x80A09780; //
D_80A097A4_jp = 0x80A097A4; //
D_80A097A8_jp = 0x80A097A8; //
D_80A097BC_jp = 0x80A097BC; //
D_80A097C0_jp = 0x80A097C0; //

// .text

func_80A09840_jp = 0x80A09840; // type:func
func_80A0986C_jp = 0x80A0986C; // type:func
func_80A09928_jp = 0x80A09928; // type:func
func_80A09A88_jp = 0x80A09A88; // type:func
func_80A09C34_jp = 0x80A09C34; // type:func
func_80A09C9C_jp = 0x80A09C9C; // type:func
func_80A09EF0_jp = 0x80A09EF0; // type:func

// .data

_008D8510_Profile = 0x80A0A0A0; //
D_80A0A0C4_jp = 0x80A0A0C4; //
D_80A0A0DC_jp = 0x80A0A0DC; //
D_80A0A0F0_jp = 0x80A0A0F0; //
D_80A0A130_jp = 0x80A0A130; //
D_FLT_80A0A138_jp = 0x80A0A138; // type:f32
D_80A0A144_jp = 0x80A0A144; //

// .rodata

RO_STR_80A0A150_jp = 0x80A0A150; // type:asciz

// .text

func_80A0A1F0_jp = 0x80A0A1F0; // type:func
func_80A0A240_jp = 0x80A0A240; // type:func
func_80A0A358_jp = 0x80A0A358; // type:func
func_80A0A3F8_jp = 0x80A0A3F8; // type:func
func_80A0A410_jp = 0x80A0A410; // type:func
func_80A0A448_jp = 0x80A0A448; // type:func
func_80A0A468_jp = 0x80A0A468; // type:func
func_80A0A498_jp = 0x80A0A498; // type:func
func_80A0A61C_jp = 0x80A0A61C; // type:func
func_80A0A6CC_jp = 0x80A0A6CC; // type:func
func_80A0A730_jp = 0x80A0A730; // type:func
func_80A0A7A4_jp = 0x80A0A7A4; // type:func
func_80A0A928_jp = 0x80A0A928; // type:func
func_80A0AB08_jp = 0x80A0AB08; // type:func
func_80A0AB44_jp = 0x80A0AB44; // type:func
func_80A0AB64_jp = 0x80A0AB64; // type:func
func_80A0ABE4_jp = 0x80A0ABE4; // type:func
func_80A0ACAC_jp = 0x80A0ACAC; // type:func
func_80A0AD14_jp = 0x80A0AD14; // type:func
func_80A0AED8_jp = 0x80A0AED8; // type:func
func_80A0AF98_jp = 0x80A0AF98; // type:func
func_80A0B030_jp = 0x80A0B030; // type:func

// .data

_008D8EC0_Profile = 0x80A0B1B0; //
D_80A0B1D4_jp = 0x80A0B1D4; //
D_80A0B1EC_jp = 0x80A0B1EC; //
D_80A0B200_jp = 0x80A0B200; //
D_80A0B208_jp = 0x80A0B208; //
D_80A0B240_jp = 0x80A0B240; //
D_FLT_80A0B248_jp = 0x80A0B248; // type:f32
D_FLT_80A0B250_jp = 0x80A0B250; // type:f32
D_80A0B260_jp = 0x80A0B260; //
D_80A0B270_jp = 0x80A0B270; //
D_80A0B278_jp = 0x80A0B278; // type:s16
D_80A0B280_jp = 0x80A0B280; //
D_80A0B290_jp = 0x80A0B290; //
D_80A0B294_jp = 0x80A0B294; //

// .rodata

RO_STR_80A0B2A0_jp = 0x80A0B2A0; // type:asciz
RO_STR_80A0B2B8_jp = 0x80A0B2B8; // type:asciz

// .bss

B_80A0B2D0_jp = 0x80A0B2D0; //

// .text

func_80A0B400_jp = 0x80A0B400; // type:func
func_80A0B570_jp = 0x80A0B570; // type:func
func_80A0B61C_jp = 0x80A0B61C; // type:func
func_80A0B64C_jp = 0x80A0B64C; // type:func
func_80A0B750_jp = 0x80A0B750; // type:func
func_80A0B7AC_jp = 0x80A0B7AC; // type:func
func_80A0B888_jp = 0x80A0B888; // type:func
func_80A0B99C_jp = 0x80A0B99C; // type:func
func_80A0B9DC_jp = 0x80A0B9DC; // type:func
func_80A0BAE8_jp = 0x80A0BAE8; // type:func
func_80A0BB84_jp = 0x80A0BB84; // type:func
func_80A0BCC8_jp = 0x80A0BCC8; // type:func
func_80A0BCFC_jp = 0x80A0BCFC; // type:func
func_80A0BD30_jp = 0x80A0BD30; // type:func
func_80A0BE38_jp = 0x80A0BE38; // type:func
func_80A0BEC0_jp = 0x80A0BEC0; // type:func
func_80A0BF28_jp = 0x80A0BF28; // type:func
func_80A0BFBC_jp = 0x80A0BFBC; // type:func
func_80A0C138_jp = 0x80A0C138; // type:func

// .data

_008DA0C0_Profile = 0x80A0C270; //
D_80A0C294_jp = 0x80A0C294; //
D_80A0C29C_jp = 0x80A0C29C; //
D_80A0C2B0_jp = 0x80A0C2B0; //
D_80A0C2B8_jp = 0x80A0C2B8; //
D_80A0C2CC_jp = 0x80A0C2CC; //
D_80A0C374_jp = 0x80A0C374; //
D_FLT_80A0C37C_jp = 0x80A0C37C; // type:f32
D_FLT_80A0C3DC_jp = 0x80A0C3DC; // type:f32
D_80A0C43C_jp = 0x80A0C43C; //
D_FLT_80A0C444_jp = 0x80A0C444; // type:f32
D_FLT_80A0C454_jp = 0x80A0C454; // type:f32
D_FLT_80A0C464_jp = 0x80A0C464; // type:f32
D_80A0C474_jp = 0x80A0C474; //
D_80A0C484_jp = 0x80A0C484; //

// .rodata

RO_STR_80A0C490_jp = 0x80A0C490; // type:asciz
RO_FLT_80A0C4A8_jp = 0x80A0C4A8; // type:f32
RO_FLT_80A0C4AC_jp = 0x80A0C4AC; // type:f32

// .text

func_80A0C5E0_jp = 0x80A0C5E0; // type:func
func_80A0C6C0_jp = 0x80A0C6C0; // type:func
func_80A0C7A4_jp = 0x80A0C7A4; // type:func
func_80A0C874_jp = 0x80A0C874; // type:func
func_80A0C990_jp = 0x80A0C990; // type:func
func_80A0CAA0_jp = 0x80A0CAA0; // type:func
func_80A0CB14_jp = 0x80A0CB14; // type:func
func_80A0CB84_jp = 0x80A0CB84; // type:func
func_80A0CBC0_jp = 0x80A0CBC0; // type:func
func_80A0CC90_jp = 0x80A0CC90; // type:func
func_80A0CD20_jp = 0x80A0CD20; // type:func
func_80A0CD8C_jp = 0x80A0CD8C; // type:func
func_80A0CE50_jp = 0x80A0CE50; // type:func
func_80A0CF44_jp = 0x80A0CF44; // type:func

// .data

_008DB2A0_Profile = 0x80A0D160; //
D_FLT_80A0D184_jp = 0x80A0D184; // type:f32
D_80A0D18C_jp = 0x80A0D18C; // type:s16

// .rodata

RO_FLT_80A0D190_jp = 0x80A0D190; // type:f32
RO_FLT_80A0D194_jp = 0x80A0D194; // type:f32
RO_FLT_80A0D198_jp = 0x80A0D198; // type:f32
RO_FLT_80A0D19C_jp = 0x80A0D19C; // type:f32
RO_FLT_80A0D1A0_jp = 0x80A0D1A0; // type:f32

// .text

func_80A0D240_jp = 0x80A0D240; // type:func
func_80A0D2E0_jp = 0x80A0D2E0; // type:func
func_80A0D3A4_jp = 0x80A0D3A4; // type:func
func_80A0D3D4_jp = 0x80A0D3D4; // type:func
func_80A0D444_jp = 0x80A0D444; // type:func
func_80A0D480_jp = 0x80A0D480; // type:func
func_80A0D558_jp = 0x80A0D558; // type:func
func_80A0D5F4_jp = 0x80A0D5F4; // type:func
func_80A0D708_jp = 0x80A0D708; // type:func
func_80A0D82C_jp = 0x80A0D82C; // type:func
func_80A0D8D0_jp = 0x80A0D8D0; // type:func

// .data

_008DBF00_Profile = 0x80A0D9D0; //
D_80A0D9F4_jp = 0x80A0D9F4; //
D_80A0DA00_jp = 0x80A0DA00; //
D_FLT_80A0DA08_jp = 0x80A0DA08; // type:f32
D_80A0DA10_jp = 0x80A0DA10; //
D_FLT_80A0DA34_jp = 0x80A0DA34; // type:f32

// .rodata

RO_FLT_80A0DA60_jp = 0x80A0DA60; // type:f32
RO_FLT_80A0DA64_jp = 0x80A0DA64; // type:f32
RO_FLT_80A0DA68_jp = 0x80A0DA68; // type:f32
RO_FLT_80A0DA6C_jp = 0x80A0DA6C; // type:f32

// .text

func_80A0DB10_jp = 0x80A0DB10; // type:func
func_80A0DC94_jp = 0x80A0DC94; // type:func
func_80A0DD54_jp = 0x80A0DD54; // type:func
func_80A0DED4_jp = 0x80A0DED4; // type:func
func_80A0DFD0_jp = 0x80A0DFD0; // type:func
func_80A0E02C_jp = 0x80A0E02C; // type:func
func_80A0E0DC_jp = 0x80A0E0DC; // type:func
func_80A0E1F0_jp = 0x80A0E1F0; // type:func
func_80A0E2B4_jp = 0x80A0E2B4; // type:func
func_80A0E334_jp = 0x80A0E334; // type:func
func_80A0E440_jp = 0x80A0E440; // type:func
func_80A0E474_jp = 0x80A0E474; // type:func
func_80A0E4A8_jp = 0x80A0E4A8; // type:func
func_80A0E564_jp = 0x80A0E564; // type:func
func_80A0E5EC_jp = 0x80A0E5EC; // type:func
func_80A0E654_jp = 0x80A0E654; // type:func
func_80A0E6E8_jp = 0x80A0E6E8; // type:func
func_80A0E864_jp = 0x80A0E864; // type:func

// .data

_008DC7D0_Profile = 0x80A0E9A0; //
D_80A0E9C4_jp = 0x80A0E9C4; //
D_80A0E9CC_jp = 0x80A0E9CC; //
D_80A0E9E0_jp = 0x80A0E9E0; //
D_80A0E9E8_jp = 0x80A0E9E8; //
D_80A0E9FC_jp = 0x80A0E9FC; //
D_80A0EA6C_jp = 0x80A0EA6C; //
D_FLT_80A0EA74_jp = 0x80A0EA74; // type:f32
D_80A0EA84_jp = 0x80A0EA84; //
D_80A0EA94_jp = 0x80A0EA94; //
D_FLT_80A0EA9C_jp = 0x80A0EA9C; // type:f32
D_FLT_80A0EAAC_jp = 0x80A0EAAC; // type:f32
D_FLT_80A0EABC_jp = 0x80A0EABC; // type:f32
D_80A0EACC_jp = 0x80A0EACC; //
D_80A0EADC_jp = 0x80A0EADC; //

// .rodata

RO_STR_80A0EAF0_jp = 0x80A0EAF0; // type:asciz
RO_FLT_80A0EB08_jp = 0x80A0EB08; // type:f32
RO_FLT_80A0EB0C_jp = 0x80A0EB0C; // type:f32
RO_FLT_80A0EB10_jp = 0x80A0EB10; // type:f32
RO_FLT_80A0EB14_jp = 0x80A0EB14; // type:f32

// .text

func_80A0EC50_jp = 0x80A0EC50; // type:func
func_80A0ED60_jp = 0x80A0ED60; // type:func
func_80A0EE1C_jp = 0x80A0EE1C; // type:func
func_80A0EE2C_jp = 0x80A0EE2C; // type:func
func_80A0EECC_jp = 0x80A0EECC; // type:func
func_80A0EEF0_jp = 0x80A0EEF0; // type:func
func_80A0EF58_jp = 0x80A0EF58; // type:func
func_80A0EFD0_jp = 0x80A0EFD0; // type:func
func_80A0F108_jp = 0x80A0F108; // type:func
func_80A0F12C_jp = 0x80A0F12C; // type:func
func_80A0F13C_jp = 0x80A0F13C; // type:func
func_80A0F184_jp = 0x80A0F184; // type:func
func_80A0F20C_jp = 0x80A0F20C; // type:func
func_80A0F294_jp = 0x80A0F294; // type:func
func_80A0F424_jp = 0x80A0F424; // type:func
func_80A0F484_jp = 0x80A0F484; // type:func
func_80A0F504_jp = 0x80A0F504; // type:func
func_80A0F548_jp = 0x80A0F548; // type:func
func_80A0F5B8_jp = 0x80A0F5B8; // type:func
func_80A0F634_jp = 0x80A0F634; // type:func
func_80A0F694_jp = 0x80A0F694; // type:func
func_80A0F76C_jp = 0x80A0F76C; // type:func
func_80A0F90C_jp = 0x80A0F90C; // type:func
func_80A0F98C_jp = 0x80A0F98C; // type:func
func_80A0FA20_jp = 0x80A0FA20; // type:func
func_80A0FAF0_jp = 0x80A0FAF0; // type:func
func_80A0FB3C_jp = 0x80A0FB3C; // type:func
func_80A0FBDC_jp = 0x80A0FBDC; // type:func
func_80A0FC84_jp = 0x80A0FC84; // type:func
func_80A0FD98_jp = 0x80A0FD98; // type:func
func_80A0FE04_jp = 0x80A0FE04; // type:func
func_80A0FE60_jp = 0x80A0FE60; // type:func

// .data

_008DD910_Profile = 0x80A0FE80; //
D_80A0FEA4_jp = 0x80A0FEA4; //
D_80A0FEC4_jp = 0x80A0FEC4; //
D_80A0FF04_jp = 0x80A0FF04; //
D_80A0FF44_jp = 0x80A0FF44; //
D_80A0FF58_jp = 0x80A0FF58; //
D_80A0FF6C_jp = 0x80A0FF6C; //
D_80A0FF80_jp = 0x80A0FF80; //
D_80A0FF98_jp = 0x80A0FF98; //
D_80A0FFB0_jp = 0x80A0FFB0; //
D_80A0FFC0_jp = 0x80A0FFC0; // type:u8
D_80A0FFC8_jp = 0x80A0FFC8; // type:u8
D_80A0FFD0_jp = 0x80A0FFD0; // type:u8
D_80A0FFD4_jp = 0x80A0FFD4; // type:u8
D_80A0FFD8_jp = 0x80A0FFD8; //
D_80A0FFE0_jp = 0x80A0FFE0; // type:u8
D_80A0FFE4_jp = 0x80A0FFE4; //

// .rodata

jtbl_80A10030_jp = 0x80A10030; // type:jtbl

// .bss

B_80A10050_jp = 0x80A10050; //

// .text

func_80A10210_jp = 0x80A10210; // type:func
func_80A1026C_jp = 0x80A1026C; // type:func
func_80A102B8_jp = 0x80A102B8; // type:func
func_80A10314_jp = 0x80A10314; // type:func
func_80A1035C_jp = 0x80A1035C; // type:func
func_80A103F8_jp = 0x80A103F8; // type:func
func_80A10494_jp = 0x80A10494; // type:func
func_80A104F8_jp = 0x80A104F8; // type:func
func_80A10558_jp = 0x80A10558; // type:func
func_80A108AC_jp = 0x80A108AC; // type:func
func_80A109A4_jp = 0x80A109A4; // type:func
func_80A10A10_jp = 0x80A10A10; // type:func
func_80A10A20_jp = 0x80A10A20; // type:func
func_80A10ADC_jp = 0x80A10ADC; // type:func
func_80A10B88_jp = 0x80A10B88; // type:func
func_80A10D88_jp = 0x80A10D88; // type:func
func_80A10E54_jp = 0x80A10E54; // type:func
func_80A10EF4_jp = 0x80A10EF4; // type:func
func_80A1102C_jp = 0x80A1102C; // type:func
func_80A11264_jp = 0x80A11264; // type:func
func_80A114A8_jp = 0x80A114A8; // type:func

// .data

D_80A11690_jp = 0x80A11690; //
_008DEEC0_Profile = 0x80A11694; //
D_80A116B8_jp = 0x80A116B8; //
D_80A11738_jp = 0x80A11738; //
D_80A117B8_jp = 0x80A117B8; //
D_80A117C8_jp = 0x80A117C8; //
D_80A117D8_jp = 0x80A117D8; //
D_80A117E8_jp = 0x80A117E8; //
D_80A117F8_jp = 0x80A117F8; //
D_80A11808_jp = 0x80A11808; //
D_80A11818_jp = 0x80A11818; //
D_80A11828_jp = 0x80A11828; //
D_80A11838_jp = 0x80A11838; //
D_80A11848_jp = 0x80A11848; //
D_80A11858_jp = 0x80A11858; //
D_80A11868_jp = 0x80A11868; //
D_80A11878_jp = 0x80A11878; //
D_80A11888_jp = 0x80A11888; //
D_80A11898_jp = 0x80A11898; //
D_80A118A8_jp = 0x80A118A8; //
D_80A118B8_jp = 0x80A118B8; //
D_80A118C8_jp = 0x80A118C8; //
D_80A118D8_jp = 0x80A118D8; //
D_80A118E8_jp = 0x80A118E8; //
D_80A118F8_jp = 0x80A118F8; //
D_80A11908_jp = 0x80A11908; //
D_80A11918_jp = 0x80A11918; //
D_80A11928_jp = 0x80A11928; //
D_80A11938_jp = 0x80A11938; //
D_80A11948_jp = 0x80A11948; //
D_80A11958_jp = 0x80A11958; //
D_80A11968_jp = 0x80A11968; //
D_80A11978_jp = 0x80A11978; //
D_80A11988_jp = 0x80A11988; //
D_80A11998_jp = 0x80A11998; //
D_80A119A8_jp = 0x80A119A8; //
D_80A119B8_jp = 0x80A119B8; //
D_80A11A38_jp = 0x80A11A38; //
D_80A11AD8_jp = 0x80A11AD8; //
D_80A11B58_jp = 0x80A11B58; //
D_FLT_80A11B7C_jp = 0x80A11B7C; // type:f32
D_80A11B90_jp = 0x80A11B90; //

// .rodata

RO_STR_80A11BA0_jp = 0x80A11BA0; // type:asciz
RO_FLT_80A11BB4_jp = 0x80A11BB4; // type:f32
RO_FLT_80A11BB8_jp = 0x80A11BB8; // type:f32
RO_FLT_80A11BBC_jp = 0x80A11BBC; // type:f32

// .bss

B_80A11BC0_jp = 0x80A11BC0; //
B_80A16FC0_jp = 0x80A16FC0; //

// .text

func_80A17190_jp = 0x80A17190; // type:func
func_80A171E4_jp = 0x80A171E4; // type:func
func_80A17278_jp = 0x80A17278; // type:func
func_80A173C4_jp = 0x80A173C4; // type:func
func_80A17430_jp = 0x80A17430; // type:func
func_80A174BC_jp = 0x80A174BC; // type:func
func_80A175C4_jp = 0x80A175C4; // type:func
func_80A17710_jp = 0x80A17710; // type:func
func_80A177C8_jp = 0x80A177C8; // type:func
func_80A1786C_jp = 0x80A1786C; // type:func
func_80A178AC_jp = 0x80A178AC; // type:func
func_80A178FC_jp = 0x80A178FC; // type:func
func_80A17C14_jp = 0x80A17C14; // type:func
func_80A17C84_jp = 0x80A17C84; // type:func
func_80A17DF0_jp = 0x80A17DF0; // type:func
func_80A17EAC_jp = 0x80A17EAC; // type:func
func_80A1802C_jp = 0x80A1802C; // type:func
func_80A18170_jp = 0x80A18170; // type:func
func_80A181B8_jp = 0x80A181B8; // type:func
func_80A18344_jp = 0x80A18344; // type:func
func_80A18490_jp = 0x80A18490; // type:func
func_80A18594_jp = 0x80A18594; // type:func
func_80A186AC_jp = 0x80A186AC; // type:func
func_80A18794_jp = 0x80A18794; // type:func
func_80A187F8_jp = 0x80A187F8; // type:func
func_80A188E4_jp = 0x80A188E4; // type:func
func_80A18940_jp = 0x80A18940; // type:func
func_80A1896C_jp = 0x80A1896C; // type:func
func_80A189F0_jp = 0x80A189F0; // type:func
func_80A18A58_jp = 0x80A18A58; // type:func
func_80A18A8C_jp = 0x80A18A8C; // type:func
func_80A18C10_jp = 0x80A18C10; // type:func
func_80A18D50_jp = 0x80A18D50; // type:func
func_80A18E68_jp = 0x80A18E68; // type:func
func_80A18FCC_jp = 0x80A18FCC; // type:func
func_80A1902C_jp = 0x80A1902C; // type:func
func_80A1906C_jp = 0x80A1906C; // type:func
func_80A19170_jp = 0x80A19170; // type:func
func_80A191F0_jp = 0x80A191F0; // type:func
func_80A19254_jp = 0x80A19254; // type:func
func_80A19304_jp = 0x80A19304; // type:func
func_80A1950C_jp = 0x80A1950C; // type:func
func_80A19770_jp = 0x80A19770; // type:func
func_80A198D4_jp = 0x80A198D4; // type:func
func_80A19940_jp = 0x80A19940; // type:func
func_80A19ADC_jp = 0x80A19ADC; // type:func

// .data

D_80A19B90_jp = 0x80A19B90; //
D_80A1A43C_jp = 0x80A1A43C; //
D_80A1A7B4_jp = 0x80A1A7B4; // type:u8
D_80A1A824_jp = 0x80A1A824; //
_008E0A30_Profile = 0x80A1A830; //
D_80A1A854_jp = 0x80A1A854; //
D_80A1A860_jp = 0x80A1A860; //
D_80A1A86C_jp = 0x80A1A86C; //

// .rodata

RO_80A1A880_jp = 0x80A1A880; //
RO_STR_80A1A898_jp = 0x80A1A898; // type:asciz
RO_FLT_80A1A8B0_jp = 0x80A1A8B0; // type:f32
RO_FLT_80A1A8B4_jp = 0x80A1A8B4; // type:f32
RO_FLT_80A1A8B8_jp = 0x80A1A8B8; // type:f32
RO_FLT_80A1A8BC_jp = 0x80A1A8BC; // type:f32
RO_FLT_80A1A8C0_jp = 0x80A1A8C0; // type:f32
RO_FLT_80A1A8C4_jp = 0x80A1A8C4; // type:f32
RO_FLT_80A1A8C8_jp = 0x80A1A8C8; // type:f32

// .bss

B_80A1A8D0_jp = 0x80A1A8D0; //
B_80A1A8D6_jp = 0x80A1A8D6; //
B_80A1A8E8_jp = 0x80A1A8E8; // type:u8
B_80A1A930_jp = 0x80A1A930; //
B_80A1A938_jp = 0x80A1A938; // type:s16
B_80A1A93C_jp = 0x80A1A93C; //
B_80A1A940_jp = 0x80A1A940; //
B_80A1A944_jp = 0x80A1A944; //
B_80A1A948_jp = 0x80A1A948; //
B_80A1A94C_jp = 0x80A1A94C; // type:s16
B_80A1A94E_jp = 0x80A1A94E; // type:s16
B_FLT_80A1A950_jp = 0x80A1A950; // type:f32
B_80A1AA68_jp = 0x80A1AA68; //
B_80A1AAB4_jp = 0x80A1AAB4; //
B_80A1AAB8_jp = 0x80A1AAB8; //
B_80A1AABC_jp = 0x80A1AABC; // type:s16
B_80A1AABE_jp = 0x80A1AABE; // type:s16
B_80A1AAC6_jp = 0x80A1AAC6; // type:s16
B_80A1C63C_jp = 0x80A1C63C; // type:u8
B_80A1C68C_jp = 0x80A1C68C; //
B_80A1C693_jp = 0x80A1C693; // type:s8
B_80A1C69C_jp = 0x80A1C69C; //

// .text

func_80A1CBD0_jp = 0x80A1CBD0; // type:func
func_80A1CD0C_jp = 0x80A1CD0C; // type:func
func_80A1CDB8_jp = 0x80A1CDB8; // type:func
func_80A1CDE4_jp = 0x80A1CDE4; // type:func
func_80A1D1A0_jp = 0x80A1D1A0; // type:func
func_80A1D47C_jp = 0x80A1D47C; // type:func
func_80A1D760_jp = 0x80A1D760; // type:func
func_80A1D770_jp = 0x80A1D770; // type:func
func_80A1DBD8_jp = 0x80A1DBD8; // type:func
func_80A1DC64_jp = 0x80A1DC64; // type:func
func_80A1DE88_jp = 0x80A1DE88; // type:func
func_80A1E2A4_jp = 0x80A1E2A4; // type:func
func_80A1E324_jp = 0x80A1E324; // type:func
func_80A1E604_jp = 0x80A1E604; // type:func
func_80A1E71C_jp = 0x80A1E71C; // type:func

// .data

D_80A1E990_jp = 0x80A1E990; //
D_80A1E9CC_jp = 0x80A1E9CC; //
D_80A1EA08_jp = 0x80A1EA08; //
D_80A1EA44_jp = 0x80A1EA44; //
D_80A1EA80_jp = 0x80A1EA80; //
D_80A1EABC_jp = 0x80A1EABC; //
_008E46A0_Profile = 0x80A1EAF8; //

// .rodata

RO_STR_80A1EB20_jp = 0x80A1EB20; // type:asciz
RO_STR_80A1EB34_jp = 0x80A1EB34; // type:asciz
RO_STR_80A1EB48_jp = 0x80A1EB48; // type:asciz
RO_FLT_80A1EB5C_jp = 0x80A1EB5C; // type:f32
RO_FLT_80A1EB60_jp = 0x80A1EB60; // type:f32

// .bss

B_80A1EB70_jp = 0x80A1EB70; //
B_80A1EB74_jp = 0x80A1EB74; //

// .text

func_80A1ECB0_jp = 0x80A1ECB0; // type:func
func_80A1ECD4_jp = 0x80A1ECD4; // type:func
func_80A1ED04_jp = 0x80A1ED04; // type:func
func_80A1ED4C_jp = 0x80A1ED4C; // type:func
func_80A1EE48_jp = 0x80A1EE48; // type:func
func_80A1EE84_jp = 0x80A1EE84; // type:func
func_80A1EF00_jp = 0x80A1EF00; // type:func
func_80A1EF20_jp = 0x80A1EF20; // type:func
func_80A1EF94_jp = 0x80A1EF94; // type:func
func_80A1EFE4_jp = 0x80A1EFE4; // type:func

// .data

_008E6770_Profile = 0x80A1F1B0; //
D_80A1F1D4_jp = 0x80A1F1D4; //
D_80A1F1EC_jp = 0x80A1F1EC; //
D_80A1F21C_jp = 0x80A1F21C; //
D_80A1F22C_jp = 0x80A1F22C; //
D_80A1F24C_jp = 0x80A1F24C; //
D_80A1F264_jp = 0x80A1F264; //
D_80A1F27C_jp = 0x80A1F27C; //
D_80A1F2AC_jp = 0x80A1F2AC; //
D_80A1F2BC_jp = 0x80A1F2BC; //
D_80A1F2DC_jp = 0x80A1F2DC; //
D_80A1F2F4_jp = 0x80A1F2F4; //
D_FLT_80A1F308_jp = 0x80A1F308; // type:f32
D_80A1F318_jp = 0x80A1F318; //
D_80A1F324_jp = 0x80A1F324; //
D_80A1F32C_jp = 0x80A1F32C; //
D_80A1F338_jp = 0x80A1F338; //

// .rodata

RO_FLT_80A1F440_jp = 0x80A1F440; // type:f32

// .text

func_80A1F510_jp = 0x80A1F510; // type:func
func_80A1F58C_jp = 0x80A1F58C; // type:func
func_80A1F634_jp = 0x80A1F634; // type:func
func_80A1F6C0_jp = 0x80A1F6C0; // type:func
func_80A1F6E0_jp = 0x80A1F6E0; // type:func
func_80A1F700_jp = 0x80A1F700; // type:func
func_80A1F720_jp = 0x80A1F720; // type:func
func_80A1F7C8_jp = 0x80A1F7C8; // type:func
func_80A1F824_jp = 0x80A1F824; // type:func

// .data

D_80A1F960_jp = 0x80A1F960; //
_008E6FD0_Profile = 0x80A1F99C; //
D_FLT_80A1F9C0_jp = 0x80A1F9C0; // type:f32
D_FLT_80A1F9C8_jp = 0x80A1F9C8; // type:f32
D_FLT_80A1F9D0_jp = 0x80A1F9D0; // type:f32
D_FLT_80A1F9D8_jp = 0x80A1F9D8; // type:f32
D_80A1F9E0_jp = 0x80A1F9E0; //
D_80A1F9F4_jp = 0x80A1F9F4; //

// .rodata

RO_FLT_80A1FA00_jp = 0x80A1FA00; // type:f32

// .text

func_80A1FAA0_jp = 0x80A1FAA0; // type:func
func_80A1FAC4_jp = 0x80A1FAC4; // type:func
func_80A1FB2C_jp = 0x80A1FB2C; // type:func
func_80A1FB4C_jp = 0x80A1FB4C; // type:func
func_80A1FB6C_jp = 0x80A1FB6C; // type:func
func_80A1FB8C_jp = 0x80A1FB8C; // type:func
func_80A1FBC4_jp = 0x80A1FBC4; // type:func
func_80A1FC08_jp = 0x80A1FC08; // type:func

// .data

_008E7560_Profile = 0x80A1FD00; //
D_80A1FD24_jp = 0x80A1FD24; //
D_80A1FD2C_jp = 0x80A1FD2C; //
D_FLT_80A1FD40_jp = 0x80A1FD40; // type:f32
D_80A1FD54_jp = 0x80A1FD54; //

// .rodata

RO_FLT_80A1FD60_jp = 0x80A1FD60; // type:f32

// .text

func_80A1FDE0_jp = 0x80A1FDE0; // type:func
func_80A1FE04_jp = 0x80A1FE04; // type:func
func_80A1FE14_jp = 0x80A1FE14; // type:func
func_80A1FE7C_jp = 0x80A1FE7C; // type:func
func_80A1FE9C_jp = 0x80A1FE9C; // type:func
func_80A1FEBC_jp = 0x80A1FEBC; // type:func
func_80A1FEDC_jp = 0x80A1FEDC; // type:func
func_80A1FF14_jp = 0x80A1FF14; // type:func
func_80A1FF58_jp = 0x80A1FF58; // type:func

// .data

_008E78A0_Profile = 0x80A20050; //
D_80A20074_jp = 0x80A20074; //
D_80A2007C_jp = 0x80A2007C; //
D_FLT_80A20090_jp = 0x80A20090; // type:f32
D_80A200A4_jp = 0x80A200A4; //

// .rodata

RO_FLT_80A200B0_jp = 0x80A200B0; // type:f32

// .text

func_80A20130_jp = 0x80A20130; // type:func
func_80A20154_jp = 0x80A20154; // type:func
func_80A201BC_jp = 0x80A201BC; // type:func
func_80A201DC_jp = 0x80A201DC; // type:func
func_80A201FC_jp = 0x80A201FC; // type:func
func_80A2021C_jp = 0x80A2021C; // type:func
func_80A20254_jp = 0x80A20254; // type:func
func_80A20298_jp = 0x80A20298; // type:func

// .data

_008E7BF0_Profile = 0x80A20390; //
D_80A203B4_jp = 0x80A203B4; //
D_80A203BC_jp = 0x80A203BC; //
D_FLT_80A203D0_jp = 0x80A203D0; // type:f32
D_80A203E4_jp = 0x80A203E4; //

// .rodata

RO_FLT_80A203F0_jp = 0x80A203F0; // type:f32

// .text

func_80A20470_jp = 0x80A20470; // type:func
func_80A20494_jp = 0x80A20494; // type:func
func_80A204FC_jp = 0x80A204FC; // type:func
func_80A2051C_jp = 0x80A2051C; // type:func
func_80A2053C_jp = 0x80A2053C; // type:func
func_80A2055C_jp = 0x80A2055C; // type:func
func_80A20594_jp = 0x80A20594; // type:func
func_80A205D8_jp = 0x80A205D8; // type:func

// .data

_008E7F30_Profile = 0x80A206D0; //
D_80A206F4_jp = 0x80A206F4; //
D_80A206FC_jp = 0x80A206FC; //
D_FLT_80A20710_jp = 0x80A20710; // type:f32
D_80A20724_jp = 0x80A20724; //

// .rodata

RO_FLT_80A20730_jp = 0x80A20730; // type:f32

// .text

func_80A207B0_jp = 0x80A207B0; // type:func
func_80A2083C_jp = 0x80A2083C; // type:func
func_80A20A1C_jp = 0x80A20A1C; // type:func

// .data

_008E8270_Profile = 0x80A20BE0; //
D_80A20C04_jp = 0x80A20C04; //

// .rodata

RO_FLT_80A20C10_jp = 0x80A20C10; // type:f32

// .text

func_80A20C60_jp = 0x80A20C60; // type:func
func_80A20C84_jp = 0x80A20C84; // type:func
func_80A20CEC_jp = 0x80A20CEC; // type:func
func_80A20D0C_jp = 0x80A20D0C; // type:func
func_80A20D2C_jp = 0x80A20D2C; // type:func
func_80A20D4C_jp = 0x80A20D4C; // type:func
func_80A20D84_jp = 0x80A20D84; // type:func
func_80A20DC8_jp = 0x80A20DC8; // type:func

// .data

_008E8720_Profile = 0x80A20EC0; //
D_80A20EE4_jp = 0x80A20EE4; //
D_80A20EEC_jp = 0x80A20EEC; //
D_FLT_80A20F00_jp = 0x80A20F00; // type:f32
D_80A20F14_jp = 0x80A20F14; //

// .rodata

RO_FLT_80A20F20_jp = 0x80A20F20; // type:f32

// .text

func_80A20FA0_jp = 0x80A20FA0; // type:func
func_80A20FC4_jp = 0x80A20FC4; // type:func
func_80A20FE4_jp = 0x80A20FE4; // type:func
func_80A2100C_jp = 0x80A2100C; // type:func
func_80A21138_jp = 0x80A21138; // type:func

// .data

_008E8A60_Profile = 0x80A212B0; //
D_80A212D4_jp = 0x80A212D4; //
D_80A212E8_jp = 0x80A212E8; //

// .rodata

RO_FLT_80A21300_jp = 0x80A21300; // type:f32
RO_FLT_80A21304_jp = 0x80A21304; // type:f32

// .text

func_80A21360_jp = 0x80A21360; // type:func

// .data

_008E8E20_Profile = 0x80A215A0; //
D_80A215C4_jp = 0x80A215C4; //
D_80A215D4_jp = 0x80A215D4; //
D_80A21604_jp = 0x80A21604; //

// .rodata

RO_FLT_80A21610_jp = 0x80A21610; // type:f32

// .text

func_80A21670_jp = 0x80A21670; // type:func
func_80A216C4_jp = 0x80A216C4; // type:func
func_80A216E4_jp = 0x80A216E4; // type:func
func_80A21724_jp = 0x80A21724; // type:func
func_80A21760_jp = 0x80A21760; // type:func
func_80A217A8_jp = 0x80A217A8; // type:func
func_80A21828_jp = 0x80A21828; // type:func
func_80A21858_jp = 0x80A21858; // type:func
func_80A21914_jp = 0x80A21914; // type:func
func_80A219A0_jp = 0x80A219A0; // type:func
func_80A21A64_jp = 0x80A21A64; // type:func
func_80A21B04_jp = 0x80A21B04; // type:func
func_80A21CD8_jp = 0x80A21CD8; // type:func
func_80A21D90_jp = 0x80A21D90; // type:func
func_80A21DFC_jp = 0x80A21DFC; // type:func
func_80A21E78_jp = 0x80A21E78; // type:func
func_80A21F14_jp = 0x80A21F14; // type:func
func_80A21F3C_jp = 0x80A21F3C; // type:func
func_80A21FA0_jp = 0x80A21FA0; // type:func
func_80A22028_jp = 0x80A22028; // type:func
func_80A220CC_jp = 0x80A220CC; // type:func
func_80A2212C_jp = 0x80A2212C; // type:func
func_80A22310_jp = 0x80A22310; // type:func
func_80A2236C_jp = 0x80A2236C; // type:func
func_80A22464_jp = 0x80A22464; // type:func
func_80A22484_jp = 0x80A22484; // type:func
func_80A224C8_jp = 0x80A224C8; // type:func
func_80A225D0_jp = 0x80A225D0; // type:func
func_80A22644_jp = 0x80A22644; // type:func
func_80A22740_jp = 0x80A22740; // type:func
func_80A2276C_jp = 0x80A2276C; // type:func
func_80A227E4_jp = 0x80A227E4; // type:func
func_80A22950_jp = 0x80A22950; // type:func
func_80A22ACC_jp = 0x80A22ACC; // type:func
func_80A22BF0_jp = 0x80A22BF0; // type:func

// .data

D_80A22C40_jp = 0x80A22C40; //
D_80A22CA4_jp = 0x80A22CA4; //
D_80A22CAC_jp = 0x80A22CAC; //
D_80A22CB4_jp = 0x80A22CB4; //
D_80A22CBC_jp = 0x80A22CBC; //
D_80A22CC4_jp = 0x80A22CC4; //
_008E9130_Profile = 0x80A22CD8; //
D_80A22CFC_jp = 0x80A22CFC; // type:s16
D_80A22D10_jp = 0x80A22D10; //

// .rodata

RO_STR_80A22D20_jp = 0x80A22D20; // type:asciz
RO_FLT_80A22D30_jp = 0x80A22D30; // type:f32

// .text

func_80A22EB0_jp = 0x80A22EB0; // type:func
func_80A22ED0_jp = 0x80A22ED0; // type:func
func_80A22F64_jp = 0x80A22F64; // type:func
func_80A22FB8_jp = 0x80A22FB8; // type:func
func_80A23010_jp = 0x80A23010; // type:func
func_80A23044_jp = 0x80A23044; // type:func
func_80A230D0_jp = 0x80A230D0; // type:func
func_80A23130_jp = 0x80A23130; // type:func
func_80A2316C_jp = 0x80A2316C; // type:func
func_80A231D0_jp = 0x80A231D0; // type:func
func_80A23248_jp = 0x80A23248; // type:func
func_80A23330_jp = 0x80A23330; // type:func
func_80A23364_jp = 0x80A23364; // type:func
func_80A233F0_jp = 0x80A233F0; // type:func
func_80A23488_jp = 0x80A23488; // type:func
func_80A2356C_jp = 0x80A2356C; // type:func
func_80A23608_jp = 0x80A23608; // type:func
func_80A23688_jp = 0x80A23688; // type:func
func_80A2375C_jp = 0x80A2375C; // type:func
func_80A238BC_jp = 0x80A238BC; // type:func
func_80A23A84_jp = 0x80A23A84; // type:func
func_80A23BDC_jp = 0x80A23BDC; // type:func
func_80A23CD8_jp = 0x80A23CD8; // type:func
func_80A23D10_jp = 0x80A23D10; // type:func
func_80A23D88_jp = 0x80A23D88; // type:func
func_80A23F30_jp = 0x80A23F30; // type:func
func_80A23FC0_jp = 0x80A23FC0; // type:func
func_80A2408C_jp = 0x80A2408C; // type:func
func_80A240C4_jp = 0x80A240C4; // type:func
func_80A24114_jp = 0x80A24114; // type:func
func_80A241C4_jp = 0x80A241C4; // type:func
func_80A242E0_jp = 0x80A242E0; // type:func
func_80A24418_jp = 0x80A24418; // type:func
func_80A24588_jp = 0x80A24588; // type:func
func_80A2460C_jp = 0x80A2460C; // type:func
func_80A246B4_jp = 0x80A246B4; // type:func
func_80A24734_jp = 0x80A24734; // type:func
func_80A247B4_jp = 0x80A247B4; // type:func
func_80A2487C_jp = 0x80A2487C; // type:func
func_80A24A8C_jp = 0x80A24A8C; // type:func
func_80A24D08_jp = 0x80A24D08; // type:func
func_80A24F24_jp = 0x80A24F24; // type:func
func_80A2513C_jp = 0x80A2513C; // type:func
func_80A2522C_jp = 0x80A2522C; // type:func
func_80A253B4_jp = 0x80A253B4; // type:func
func_80A25528_jp = 0x80A25528; // type:func

// .data

D_80A25560_jp = 0x80A25560; //
D_FLT_80A25568_jp = 0x80A25568; // type:f32
D_FLT_80A25570_jp = 0x80A25570; // type:f32
D_FLT_80A25578_jp = 0x80A25578; // type:f32
D_80A25580_jp = 0x80A25580; // type:u16
D_80A25588_jp = 0x80A25588; //
D_80A255AC_jp = 0x80A255AC; //
D_80A255D0_jp = 0x80A255D0; // type:u8
D_80A255D4_jp = 0x80A255D4; //
_008EA970_Profile = 0x80A255DC; //

// .rodata

jtbl_80A25600_jp = 0x80A25600; // type:jtbl

// .bss

B_80A25620_jp = 0x80A25620; //

// .text

func_80A257F0_jp = 0x80A257F0; // type:func
func_80A258D4_jp = 0x80A258D4; // type:func
func_80A25930_jp = 0x80A25930; // type:func
func_80A25978_jp = 0x80A25978; // type:func

// .data

D_80A25A80_jp = 0x80A25A80; //
D_80A25A98_jp = 0x80A25A98; // type:u8
D_FLT_80A25AB4_jp = 0x80A25AB4; // type:f32

// .rodata

RO_FLT_80A25AD0_jp = 0x80A25AD0; // type:f32

// .text

func_80A25B20_jp = 0x80A25B20; // type:func
func_80A25BB0_jp = 0x80A25BB0; // type:func
func_80A25BE0_jp = 0x80A25BE0; // type:func
func_80A25C6C_jp = 0x80A25C6C; // type:func
func_80A25D78_jp = 0x80A25D78; // type:func

// .data

D_80A25F90_jp = 0x80A25F90; //
D_80A26050_jp = 0x80A26050; //

// .rodata

RO_FLT_80A26070_jp = 0x80A26070; // type:f32
RO_FLT_80A26074_jp = 0x80A26074; // type:f32

// .text

func_80A260D0_jp = 0x80A260D0; // type:func
func_80A26160_jp = 0x80A26160; // type:func
func_80A26178_jp = 0x80A26178; // type:func
func_80A2621C_jp = 0x80A2621C; // type:func

// .data

D_80A262B0_jp = 0x80A262B0; //

// .rodata

RO_FLT_80A262D0_jp = 0x80A262D0; // type:f32

// .text

func_80A26310_jp = 0x80A26310; // type:func
func_80A26490_jp = 0x80A26490; // type:func
func_80A26588_jp = 0x80A26588; // type:func
func_80A2665C_jp = 0x80A2665C; // type:func
func_80A267CC_jp = 0x80A267CC; // type:func

// .data

D_80A267E0_jp = 0x80A267E0; //
D_80A267F8_jp = 0x80A267F8; // type:s16
D_80A267FE_jp = 0x80A267FE; //

// .rodata

RO_FLT_80A26800_jp = 0x80A26800; // type:f32
RO_FLT_80A26804_jp = 0x80A26804; // type:f32
RO_FLT_80A26808_jp = 0x80A26808; // type:f32

// .text

func_80A26870_jp = 0x80A26870; // type:func
func_80A26988_jp = 0x80A26988; // type:func
func_80A26D5C_jp = 0x80A26D5C; // type:func
func_80A26F1C_jp = 0x80A26F1C; // type:func

// .data

D_80A27130_jp = 0x80A27130; //
D_80A27148_jp = 0x80A27148; //
D_80A2716C_jp = 0x80A2716C; // type:s16

// .rodata

RO_FLT_80A271A0_jp = 0x80A271A0; // type:f32
RO_FLT_80A271A4_jp = 0x80A271A4; // type:f32
RO_FLT_80A271A8_jp = 0x80A271A8; // type:f32
RO_FLT_80A271AC_jp = 0x80A271AC; // type:f32
RO_FLT_80A271B0_jp = 0x80A271B0; // type:f32
RO_FLT_80A271B4_jp = 0x80A271B4; // type:f32
jtbl_80A271B8_jp = 0x80A271B8; // type:jtbl

// .text

func_80A272F0_jp = 0x80A272F0; // type:func
func_80A27384_jp = 0x80A27384; // type:func
func_80A27670_jp = 0x80A27670; // type:func
func_80A276FC_jp = 0x80A276FC; // type:func

// .data

D_80A278F0_jp = 0x80A278F0; //
D_80A27900_jp = 0x80A27900; //
D_80A27910_jp = 0x80A27910; //
D_80A27920_jp = 0x80A27920; //

// .rodata

RO_FLT_80A27940_jp = 0x80A27940; // type:f32
RO_FLT_80A27944_jp = 0x80A27944; // type:f32
RO_FLT_80A27948_jp = 0x80A27948; // type:f32
RO_FLT_80A2794C_jp = 0x80A2794C; // type:f32
RO_FLT_80A27950_jp = 0x80A27950; // type:f32
RO_FLT_80A27954_jp = 0x80A27954; // type:f32
RO_FLT_80A27958_jp = 0x80A27958; // type:f32
RO_FLT_80A2795C_jp = 0x80A2795C; // type:f32

// .text

func_80A279E0_jp = 0x80A279E0; // type:func
func_80A283CC_jp = 0x80A283CC; // type:func
func_80A283E0_jp = 0x80A283E0; // type:func
func_80A283F0_jp = 0x80A283F0; // type:func

// .data

D_80A28400_jp = 0x80A28400; //

// .rodata

jtbl_80A28420_jp = 0x80A28420; // type:jtbl

// .text

func_80A284B0_jp = 0x80A284B0; // type:func
func_80A287C0_jp = 0x80A287C0; // type:func
func_80A2881C_jp = 0x80A2881C; // type:func
func_80A2890C_jp = 0x80A2890C; // type:func

// .data

D_80A28B30_jp = 0x80A28B30; //
D_80A28B40_jp = 0x80A28B40; //
D_80A28B58_jp = 0x80A28B58; // type:u8
D_80A28B80_jp = 0x80A28B80; // type:u8
D_80A28B94_jp = 0x80A28B94; // type:u8
D_80A28BA0_jp = 0x80A28BA0; // type:u8

// .rodata

RO_FLT_80A28BB0_jp = 0x80A28BB0; // type:f32
RO_FLT_80A28BB4_jp = 0x80A28BB4; // type:f32
RO_FLT_80A28BB8_jp = 0x80A28BB8; // type:f32
RO_FLT_80A28BBC_jp = 0x80A28BBC; // type:f32
RO_FLT_80A28BC0_jp = 0x80A28BC0; // type:f32
RO_FLT_80A28BC4_jp = 0x80A28BC4; // type:f32
RO_FLT_80A28BC8_jp = 0x80A28BC8; // type:f32
RO_FLT_80A28BCC_jp = 0x80A28BCC; // type:f32
RO_FLT_80A28BD0_jp = 0x80A28BD0; // type:f32

// .text

func_80A28C90_jp = 0x80A28C90; // type:func
func_80A28D20_jp = 0x80A28D20; // type:func
func_80A28D90_jp = 0x80A28D90; // type:func
func_80A28E2C_jp = 0x80A28E2C; // type:func

// .data

D_80A28F60_jp = 0x80A28F60; //

// .rodata

RO_FLT_80A28F80_jp = 0x80A28F80; // type:f32
RO_FLT_80A28F84_jp = 0x80A28F84; // type:f32
RO_FLT_80A28F88_jp = 0x80A28F88; // type:f32
RO_FLT_80A28F8C_jp = 0x80A28F8C; // type:f32

// .text

func_80A28FE0_jp = 0x80A28FE0; // type:func
func_80A29074_jp = 0x80A29074; // type:func
func_80A2918C_jp = 0x80A2918C; // type:func
func_80A29354_jp = 0x80A29354; // type:func

// .data

D_80A294B0_jp = 0x80A294B0; //

// .rodata

RO_FLT_80A294D0_jp = 0x80A294D0; // type:f32
RO_FLT_80A294D4_jp = 0x80A294D4; // type:f32
RO_FLT_80A294D8_jp = 0x80A294D8; // type:f32
RO_FLT_80A294DC_jp = 0x80A294DC; // type:f32
RO_FLT_80A294E0_jp = 0x80A294E0; // type:f32
RO_FLT_80A294E4_jp = 0x80A294E4; // type:f32
RO_FLT_80A294E8_jp = 0x80A294E8; // type:f32
RO_FLT_80A294EC_jp = 0x80A294EC; // type:f32
RO_FLT_80A294F0_jp = 0x80A294F0; // type:f32

// .text

func_80A29570_jp = 0x80A29570; // type:func
func_80A29600_jp = 0x80A29600; // type:func
func_80A29670_jp = 0x80A29670; // type:func
func_80A297AC_jp = 0x80A297AC; // type:func

// .data

D_80A29920_jp = 0x80A29920; //
D_80A2992C_jp = 0x80A2992C; //

// .rodata

RO_FLT_80A29950_jp = 0x80A29950; // type:f32
RO_FLT_80A29954_jp = 0x80A29954; // type:f32
RO_FLT_80A29958_jp = 0x80A29958; // type:f32
RO_FLT_80A2995C_jp = 0x80A2995C; // type:f32
RO_FLT_80A29960_jp = 0x80A29960; // type:f32
RO_FLT_80A29964_jp = 0x80A29964; // type:f32

// .text

func_80A299D0_jp = 0x80A299D0; // type:func
func_80A29A5C_jp = 0x80A29A5C; // type:func
func_80A29B10_jp = 0x80A29B10; // type:func
func_80A29B20_jp = 0x80A29B20; // type:func

// .data

D_80A29CC0_jp = 0x80A29CC0; //

// .rodata

RO_FLT_80A29CE0_jp = 0x80A29CE0; // type:f32

// .text

func_80A29D20_jp = 0x80A29D20; // type:func
func_80A29E28_jp = 0x80A29E28; // type:func
func_80A29E3C_jp = 0x80A29E3C; // type:func
func_80A29E4C_jp = 0x80A29E4C; // type:func

// .data

D_80A29E60_jp = 0x80A29E60; //

// .text

func_80A29EB0_jp = 0x80A29EB0; // type:func
func_80A29F38_jp = 0x80A29F38; // type:func
func_80A29F74_jp = 0x80A29F74; // type:func
func_80A29FC0_jp = 0x80A29FC0; // type:func

// .data

D_80A2A0B0_jp = 0x80A2A0B0; //
D_80A2A0C8_jp = 0x80A2A0C8; //

// .rodata

RO_FLT_80A2A100_jp = 0x80A2A100; // type:f32

// .text

func_80A2A150_jp = 0x80A2A150; // type:func
func_80A2A1E0_jp = 0x80A2A1E0; // type:func
func_80A2A254_jp = 0x80A2A254; // type:func
func_80A2A354_jp = 0x80A2A354; // type:func

// .data

D_80A2A4F0_jp = 0x80A2A4F0; //
D_80A2A508_jp = 0x80A2A508; // type:s16

// .rodata

RO_FLT_80A2A510_jp = 0x80A2A510; // type:f32
RO_FLT_80A2A514_jp = 0x80A2A514; // type:f32
RO_FLT_80A2A518_jp = 0x80A2A518; // type:f32
RO_FLT_80A2A51C_jp = 0x80A2A51C; // type:f32

// .text

func_80A2A580_jp = 0x80A2A580; // type:func
func_80A2A614_jp = 0x80A2A614; // type:func
func_80A2A6CC_jp = 0x80A2A6CC; // type:func
func_80A2A708_jp = 0x80A2A708; // type:func

// .data

D_80A2A920_jp = 0x80A2A920; //
D_80A2A938_jp = 0x80A2A938; // type:s16

// .rodata

RO_FLT_80A2A940_jp = 0x80A2A940; // type:f32
RO_FLT_80A2A944_jp = 0x80A2A944; // type:f32

// .text

func_80A2A990_jp = 0x80A2A990; // type:func
func_80A2AA24_jp = 0x80A2AA24; // type:func
func_80A2AA64_jp = 0x80A2AA64; // type:func
func_80A2ABAC_jp = 0x80A2ABAC; // type:func

// .data

D_80A2ABC0_jp = 0x80A2ABC0; //

// .text

func_80A2AC10_jp = 0x80A2AC10; // type:func
func_80A2ACA4_jp = 0x80A2ACA4; // type:func
func_80A2AD30_jp = 0x80A2AD30; // type:func
func_80A2AD80_jp = 0x80A2AD80; // type:func

// .data

D_80A2AEF0_jp = 0x80A2AEF0; //
D_80A2AF00_jp = 0x80A2AF00; // type:u8
D_80A2AF14_jp = 0x80A2AF14; // type:u8
D_80A2AF20_jp = 0x80A2AF20; //

// .rodata

RO_FLT_80A2AF40_jp = 0x80A2AF40; // type:f32
RO_FLT_80A2AF44_jp = 0x80A2AF44; // type:f32

// .text

func_80A2AFB0_jp = 0x80A2AFB0; // type:func
func_80A2B068_jp = 0x80A2B068; // type:func
func_80A2B0BC_jp = 0x80A2B0BC; // type:func
func_80A2B0CC_jp = 0x80A2B0CC; // type:func

// .data

D_80A2B310_jp = 0x80A2B310; //
D_80A2B328_jp = 0x80A2B328; //

// .rodata

RO_FLT_80A2B340_jp = 0x80A2B340; // type:f32
RO_FLT_80A2B344_jp = 0x80A2B344; // type:f32
RO_FLT_80A2B348_jp = 0x80A2B348; // type:f32

// .text

func_80A2B3A0_jp = 0x80A2B3A0; // type:func
func_80A2B494_jp = 0x80A2B494; // type:func
func_80A2B4BC_jp = 0x80A2B4BC; // type:func
func_80A2B504_jp = 0x80A2B504; // type:func

// .data

D_80A2B680_jp = 0x80A2B680; //
D_80A2B698_jp = 0x80A2B698; //
D_FLT_80A2B6A4_jp = 0x80A2B6A4; // type:f32

// .rodata

RO_FLT_80A2B780_jp = 0x80A2B780; // type:f32
RO_FLT_80A2B784_jp = 0x80A2B784; // type:f32
RO_FLT_80A2B788_jp = 0x80A2B788; // type:f32

// .text

func_80A2B7E0_jp = 0x80A2B7E0; // type:func
func_80A2B870_jp = 0x80A2B870; // type:func
func_80A2B90C_jp = 0x80A2B90C; // type:func
func_80A2BAA8_jp = 0x80A2BAA8; // type:func

// .data

D_80A2BC50_jp = 0x80A2BC50; //

// .rodata

RO_FLT_80A2BC70_jp = 0x80A2BC70; // type:f32
RO_FLT_80A2BC74_jp = 0x80A2BC74; // type:f32
RO_FLT_80A2BC78_jp = 0x80A2BC78; // type:f32
RO_FLT_80A2BC7C_jp = 0x80A2BC7C; // type:f32
RO_FLT_80A2BC80_jp = 0x80A2BC80; // type:f32

// .text

func_80A2BCE0_jp = 0x80A2BCE0; // type:func
func_80A2BD74_jp = 0x80A2BD74; // type:func
func_80A2BFAC_jp = 0x80A2BFAC; // type:func
func_80A2C0E0_jp = 0x80A2C0E0; // type:func
func_80A2C1D0_jp = 0x80A2C1D0; // type:func

// .data

D_80A2C320_jp = 0x80A2C320; //
D_80A2C338_jp = 0x80A2C338; //
D_80A2C344_jp = 0x80A2C344; // type:u8

// .rodata

RO_FLT_80A2C360_jp = 0x80A2C360; // type:f32
RO_FLT_80A2C364_jp = 0x80A2C364; // type:f32
RO_FLT_80A2C368_jp = 0x80A2C368; // type:f32
RO_FLT_80A2C36C_jp = 0x80A2C36C; // type:f32
RO_FLT_80A2C370_jp = 0x80A2C370; // type:f32
RO_FLT_80A2C374_jp = 0x80A2C374; // type:f32
RO_FLT_80A2C378_jp = 0x80A2C378; // type:f32
RO_FLT_80A2C37C_jp = 0x80A2C37C; // type:f32
RO_FLT_80A2C380_jp = 0x80A2C380; // type:f32

// .text

func_80A2C420_jp = 0x80A2C420; // type:func
func_80A2C524_jp = 0x80A2C524; // type:func
func_80A2C560_jp = 0x80A2C560; // type:func
func_80A2C570_jp = 0x80A2C570; // type:func

// .data

D_80A2C6E0_jp = 0x80A2C6E0; //
D_80A2C6F8_jp = 0x80A2C6F8; //
D_FLT_80A2C704_jp = 0x80A2C704; // type:f32

// .rodata

RO_FLT_80A2C7E0_jp = 0x80A2C7E0; // type:f32
RO_FLT_80A2C7E4_jp = 0x80A2C7E4; // type:f32
RO_FLT_80A2C7E8_jp = 0x80A2C7E8; // type:f32

// .text

func_80A2C840_jp = 0x80A2C840; // type:func
func_80A2C8D4_jp = 0x80A2C8D4; // type:func
func_80A2C93C_jp = 0x80A2C93C; // type:func
func_80A2C9DC_jp = 0x80A2C9DC; // type:func

// .data

D_80A2C9F0_jp = 0x80A2C9F0; //
D_80A2CA08_jp = 0x80A2CA08; //

// .text

func_80A2CA50_jp = 0x80A2CA50; // type:func
func_80A2CAE4_jp = 0x80A2CAE4; // type:func
func_80A2CC00_jp = 0x80A2CC00; // type:func
func_80A2CC50_jp = 0x80A2CC50; // type:func

// .data

D_FLT_80A2CD50_jp = 0x80A2CD50; // type:f32
D_80A2CD78_jp = 0x80A2CD78; //

// .rodata

RO_FLT_80A2CD90_jp = 0x80A2CD90; // type:f32
RO_FLT_80A2CD94_jp = 0x80A2CD94; // type:f32
RO_FLT_80A2CD98_jp = 0x80A2CD98; // type:f32

// .text

func_80A2CDF0_jp = 0x80A2CDF0; // type:func
func_80A2CE80_jp = 0x80A2CE80; // type:func
func_80A2CF88_jp = 0x80A2CF88; // type:func
func_80A2D158_jp = 0x80A2D158; // type:func

// .data

D_80A2D2B0_jp = 0x80A2D2B0; //

// .rodata

RO_FLT_80A2D2D0_jp = 0x80A2D2D0; // type:f32
RO_FLT_80A2D2D4_jp = 0x80A2D2D4; // type:f32
RO_FLT_80A2D2D8_jp = 0x80A2D2D8; // type:f32

// .text

func_80A2D320_jp = 0x80A2D320; // type:func
func_80A2D3C4_jp = 0x80A2D3C4; // type:func
func_80A2D3DC_jp = 0x80A2D3DC; // type:func
func_80A2D48C_jp = 0x80A2D48C; // type:func

// .data

D_80A2D4A0_jp = 0x80A2D4A0; //

// .text

func_80A2D4F0_jp = 0x80A2D4F0; // type:func
func_80A2D52C_jp = 0x80A2D52C; // type:func
func_80A2D54C_jp = 0x80A2D54C; // type:func
func_80A2D5D4_jp = 0x80A2D5D4; // type:func
func_80A2D630_jp = 0x80A2D630; // type:func
func_80A2D680_jp = 0x80A2D680; // type:func

// .data

D_80A2D730_jp = 0x80A2D730; //
D_FLT_80A2D748_jp = 0x80A2D748; // type:f32

// .rodata

RO_FLT_80A2D770_jp = 0x80A2D770; // type:f32
RO_FLT_80A2D774_jp = 0x80A2D774; // type:f32

// .text

func_80A2D7D0_jp = 0x80A2D7D0; // type:func
func_80A2D8E4_jp = 0x80A2D8E4; // type:func
func_80A2D934_jp = 0x80A2D934; // type:func
func_80A2D96C_jp = 0x80A2D96C; // type:func

// .data

D_80A2DB10_jp = 0x80A2DB10; //
D_80A2DB28_jp = 0x80A2DB28; //
D_80A2DB34_jp = 0x80A2DB34; // type:u8
D_80A2DB48_jp = 0x80A2DB48; // type:u8
D_80A2DB54_jp = 0x80A2DB54; //

// .rodata

RO_FLT_80A2DB60_jp = 0x80A2DB60; // type:f32
RO_FLT_80A2DB64_jp = 0x80A2DB64; // type:f32
RO_FLT_80A2DB68_jp = 0x80A2DB68; // type:f32
RO_FLT_80A2DB6C_jp = 0x80A2DB6C; // type:f32
RO_FLT_80A2DB70_jp = 0x80A2DB70; // type:f32
RO_FLT_80A2DB74_jp = 0x80A2DB74; // type:f32

// .text

func_80A2DC00_jp = 0x80A2DC00; // type:func
func_80A2DD24_jp = 0x80A2DD24; // type:func
func_80A2DD50_jp = 0x80A2DD50; // type:func
func_80A2DDC0_jp = 0x80A2DDC0; // type:func

// .data

D_80A2DF30_jp = 0x80A2DF30; //
D_80A2DF48_jp = 0x80A2DF48; //

// .rodata

RO_FLT_80A2DF60_jp = 0x80A2DF60; // type:f32
RO_FLT_80A2DF64_jp = 0x80A2DF64; // type:f32
RO_FLT_80A2DF68_jp = 0x80A2DF68; // type:f32
RO_FLT_80A2DF6C_jp = 0x80A2DF6C; // type:f32
RO_FLT_80A2DF70_jp = 0x80A2DF70; // type:f32

// .text

func_80A2DFE0_jp = 0x80A2DFE0; // type:func
func_80A2E070_jp = 0x80A2E070; // type:func
func_80A2E088_jp = 0x80A2E088; // type:func
func_80A2E1B8_jp = 0x80A2E1B8; // type:func

// .data

D_80A2E1D0_jp = 0x80A2E1D0; //
D_80A2E1E8_jp = 0x80A2E1E8; // type:s16
D_80A2E1EE_jp = 0x80A2E1EE; //

// .text

func_80A2E230_jp = 0x80A2E230; // type:func
func_80A2E2D4_jp = 0x80A2E2D4; // type:func
func_80A2E300_jp = 0x80A2E300; // type:func
func_80A2E34C_jp = 0x80A2E34C; // type:func

// .data

D_80A2E440_jp = 0x80A2E440; //
D_FLT_80A2E458_jp = 0x80A2E458; // type:f32
D_FLT_80A2E460_jp = 0x80A2E460; // type:f32
D_80A2E468_jp = 0x80A2E468; //

// .rodata

RO_FLT_80A2E470_jp = 0x80A2E470; // type:f32

// .text

func_80A2E4D0_jp = 0x80A2E4D0; // type:func
func_80A2E5E8_jp = 0x80A2E5E8; // type:func
func_80A2E618_jp = 0x80A2E618; // type:func
func_80A2E750_jp = 0x80A2E750; // type:func

// .data

D_80A2E810_jp = 0x80A2E810; //

// .rodata

RO_FLT_80A2E830_jp = 0x80A2E830; // type:f32
RO_FLT_80A2E834_jp = 0x80A2E834; // type:f32

// .text

func_80A2E880_jp = 0x80A2E880; // type:func
func_80A2E91C_jp = 0x80A2E91C; // type:func
func_80A2EA1C_jp = 0x80A2EA1C; // type:func
func_80A2EB00_jp = 0x80A2EB00; // type:func

// .data

D_80A2EB10_jp = 0x80A2EB10; //

// .text

func_80A2EB60_jp = 0x80A2EB60; // type:func
func_80A2EBF0_jp = 0x80A2EBF0; // type:func
func_80A2ED34_jp = 0x80A2ED34; // type:func
func_80A2EE2C_jp = 0x80A2EE2C; // type:func

// .data

D_80A2F070_jp = 0x80A2F070; //
D_80A2F088_jp = 0x80A2F088; //
D_80A2F08C_jp = 0x80A2F08C; //
D_80A2F090_jp = 0x80A2F090; //
D_80A2F094_jp = 0x80A2F094; //
D_80A2F098_jp = 0x80A2F098; //

// .rodata

RO_FLT_80A2F0B0_jp = 0x80A2F0B0; // type:f32
RO_FLT_80A2F0B4_jp = 0x80A2F0B4; // type:f32
RO_FLT_80A2F0B8_jp = 0x80A2F0B8; // type:f32
RO_FLT_80A2F0BC_jp = 0x80A2F0BC; // type:f32
RO_FLT_80A2F0C0_jp = 0x80A2F0C0; // type:f32

// .text

func_80A2F140_jp = 0x80A2F140; // type:func
func_80A2F1E0_jp = 0x80A2F1E0; // type:func
func_80A2F304_jp = 0x80A2F304; // type:func
func_80A2F31C_jp = 0x80A2F31C; // type:func

// .data

D_80A2F3B0_jp = 0x80A2F3B0; //
D_80A2F3C0_jp = 0x80A2F3C0; //

// .rodata

RO_FLT_80A2F3E0_jp = 0x80A2F3E0; // type:f32

// .text

func_80A2F430_jp = 0x80A2F430; // type:func
func_80A2F55C_jp = 0x80A2F55C; // type:func
func_80A2F668_jp = 0x80A2F668; // type:func
func_80A2F740_jp = 0x80A2F740; // type:func

// .data

D_80A2F870_jp = 0x80A2F870; //
D_80A2F888_jp = 0x80A2F888; //
D_80A2F894_jp = 0x80A2F894; //

// .rodata

RO_FLT_80A2F8A0_jp = 0x80A2F8A0; // type:f32
RO_FLT_80A2F8A4_jp = 0x80A2F8A4; // type:f32
RO_FLT_80A2F8A8_jp = 0x80A2F8A8; // type:f32
RO_FLT_80A2F8AC_jp = 0x80A2F8AC; // type:f32

// .text

func_80A2F910_jp = 0x80A2F910; // type:func
func_80A2FAD8_jp = 0x80A2FAD8; // type:func
func_80A2FB00_jp = 0x80A2FB00; // type:func
func_80A2FBC0_jp = 0x80A2FBC0; // type:func

// .data

D_80A2FC70_jp = 0x80A2FC70; //

// .rodata

RO_FLT_80A2FC90_jp = 0x80A2FC90; // type:f32

// .text

func_80A2FCD0_jp = 0x80A2FCD0; // type:func
func_80A2FD64_jp = 0x80A2FD64; // type:func
func_80A2FF00_jp = 0x80A2FF00; // type:func
func_80A302C8_jp = 0x80A302C8; // type:func

// .data

D_80A305D0_jp = 0x80A305D0; //
D_80A305D8_jp = 0x80A305D8; //

// .rodata

RO_FLT_80A305F0_jp = 0x80A305F0; // type:f32
RO_FLT_80A305F4_jp = 0x80A305F4; // type:f32
RO_FLT_80A305F8_jp = 0x80A305F8; // type:f32
RO_FLT_80A305FC_jp = 0x80A305FC; // type:f32
RO_FLT_80A30600_jp = 0x80A30600; // type:f32
RO_FLT_80A30604_jp = 0x80A30604; // type:f32
RO_FLT_80A30608_jp = 0x80A30608; // type:f32
RO_FLT_80A3060C_jp = 0x80A3060C; // type:f32
RO_FLT_80A30610_jp = 0x80A30610; // type:f32

// .text

func_80A306A0_jp = 0x80A306A0; // type:func
func_80A30734_jp = 0x80A30734; // type:func
func_80A3081C_jp = 0x80A3081C; // type:func
func_80A308AC_jp = 0x80A308AC; // type:func

// .data

D_80A30B50_jp = 0x80A30B50; //

// .rodata

RO_FLT_80A30B70_jp = 0x80A30B70; // type:f32
RO_FLT_80A30B74_jp = 0x80A30B74; // type:f32
RO_FLT_80A30B78_jp = 0x80A30B78; // type:f32
RO_FLT_80A30B7C_jp = 0x80A30B7C; // type:f32
RO_FLT_80A30B80_jp = 0x80A30B80; // type:f32
RO_FLT_80A30B84_jp = 0x80A30B84; // type:f32
RO_FLT_80A30B88_jp = 0x80A30B88; // type:f32

// .text

func_80A30BF0_jp = 0x80A30BF0; // type:func
func_80A30C80_jp = 0x80A30C80; // type:func
func_80A30CF0_jp = 0x80A30CF0; // type:func
func_80A30DB4_jp = 0x80A30DB4; // type:func

// .data

D_80A30F50_jp = 0x80A30F50; //

// .rodata

RO_FLT_80A30F70_jp = 0x80A30F70; // type:f32
RO_FLT_80A30F74_jp = 0x80A30F74; // type:f32
RO_FLT_80A30F78_jp = 0x80A30F78; // type:f32
RO_FLT_80A30F7C_jp = 0x80A30F7C; // type:f32
RO_FLT_80A30F80_jp = 0x80A30F80; // type:f32

// .text

func_80A30FE0_jp = 0x80A30FE0; // type:func
func_80A31074_jp = 0x80A31074; // type:func
func_80A31134_jp = 0x80A31134; // type:func
func_80A31218_jp = 0x80A31218; // type:func

// .data

D_80A314D0_jp = 0x80A314D0; //

// .rodata

RO_FLT_80A314F0_jp = 0x80A314F0; // type:f32
RO_FLT_80A314F4_jp = 0x80A314F4; // type:f32
RO_FLT_80A314F8_jp = 0x80A314F8; // type:f32

// .text

func_80A31540_jp = 0x80A31540; // type:func
func_80A315D8_jp = 0x80A315D8; // type:func
func_80A316B0_jp = 0x80A316B0; // type:func
func_80A31880_jp = 0x80A31880; // type:func

// .data

D_80A31AD0_jp = 0x80A31AD0; //

// .rodata

RO_FLT_80A31AF0_jp = 0x80A31AF0; // type:f32
RO_FLT_80A31AF4_jp = 0x80A31AF4; // type:f32
RO_FLT_80A31AF8_jp = 0x80A31AF8; // type:f32
RO_FLT_80A31AFC_jp = 0x80A31AFC; // type:f32
RO_FLT_80A31B00_jp = 0x80A31B00; // type:f32
RO_FLT_80A31B04_jp = 0x80A31B04; // type:f32
RO_FLT_80A31B08_jp = 0x80A31B08; // type:f32
RO_FLT_80A31B0C_jp = 0x80A31B0C; // type:f32
RO_FLT_80A31B10_jp = 0x80A31B10; // type:f32
RO_FLT_80A31B14_jp = 0x80A31B14; // type:f32
RO_FLT_80A31B18_jp = 0x80A31B18; // type:f32
RO_FLT_80A31B1C_jp = 0x80A31B1C; // type:f32

// .text

func_80A31BB0_jp = 0x80A31BB0; // type:func
func_80A31C44_jp = 0x80A31C44; // type:func
func_80A31C64_jp = 0x80A31C64; // type:func
func_80A31DD4_jp = 0x80A31DD4; // type:func

// .data

D_80A31DF0_jp = 0x80A31DF0; //

// .text

func_80A31E40_jp = 0x80A31E40; // type:func
func_80A32010_jp = 0x80A32010; // type:func
func_80A3208C_jp = 0x80A3208C; // type:func
func_80A32160_jp = 0x80A32160; // type:func

// .data

D_80A32210_jp = 0x80A32210; //

// .rodata

RO_FLT_80A32230_jp = 0x80A32230; // type:f32
RO_FLT_80A32234_jp = 0x80A32234; // type:f32

// .text

func_80A32280_jp = 0x80A32280; // type:func
func_80A3231C_jp = 0x80A3231C; // type:func
func_80A32334_jp = 0x80A32334; // type:func
func_80A323F8_jp = 0x80A323F8; // type:func

// .data

D_80A32410_jp = 0x80A32410; //

// .text

func_80A32460_jp = 0x80A32460; // type:func
func_80A324E8_jp = 0x80A324E8; // type:func
func_80A32564_jp = 0x80A32564; // type:func
func_80A32600_jp = 0x80A32600; // type:func

// .data

D_80A32820_jp = 0x80A32820; //

// .rodata

RO_FLT_80A32840_jp = 0x80A32840; // type:f32
RO_FLT_80A32844_jp = 0x80A32844; // type:f32
RO_FLT_80A32848_jp = 0x80A32848; // type:f32
RO_FLT_80A3284C_jp = 0x80A3284C; // type:f32

// .text

func_80A328A0_jp = 0x80A328A0; // type:func
func_80A32934_jp = 0x80A32934; // type:func
func_80A32950_jp = 0x80A32950; // type:func
func_80A32AD8_jp = 0x80A32AD8; // type:func

// .data

D_80A32AF0_jp = 0x80A32AF0; //

// .text

func_80A32B40_jp = 0x80A32B40; // type:func
func_80A32BE8_jp = 0x80A32BE8; // type:func
func_80A32C68_jp = 0x80A32C68; // type:func
func_80A32CA4_jp = 0x80A32CA4; // type:func

// .data

D_80A330A0_jp = 0x80A330A0; //
D_80A330B4_jp = 0x80A330B4; //
D_80A330CC_jp = 0x80A330CC; // type:u8
D_80A33100_jp = 0x80A33100; // type:u8

// .rodata

RO_FLT_80A33110_jp = 0x80A33110; // type:f32
RO_FLT_80A33114_jp = 0x80A33114; // type:f32
RO_FLT_80A33118_jp = 0x80A33118; // type:f32
RO_FLT_80A3311C_jp = 0x80A3311C; // type:f32
RO_FLT_80A33120_jp = 0x80A33120; // type:f32
RO_FLT_80A33124_jp = 0x80A33124; // type:f32

// .text

func_80A331B0_jp = 0x80A331B0; // type:func
func_80A3325C_jp = 0x80A3325C; // type:func
func_80A33288_jp = 0x80A33288; // type:func
func_80A33298_jp = 0x80A33298; // type:func

// .data

D_80A333C0_jp = 0x80A333C0; //

// .rodata

RO_FLT_80A333E0_jp = 0x80A333E0; // type:f32
RO_FLT_80A333E4_jp = 0x80A333E4; // type:f32

// .text

func_80A33430_jp = 0x80A33430; // type:func
func_80A334C4_jp = 0x80A334C4; // type:func
func_80A33524_jp = 0x80A33524; // type:func
func_80A337FC_jp = 0x80A337FC; // type:func

// .data

D_80A33900_jp = 0x80A33900; //
D_80A33918_jp = 0x80A33918; // type:s16
D_80A3391E_jp = 0x80A3391E; //
D_80A33920_jp = 0x80A33920; // type:s16
D_80A33926_jp = 0x80A33926; //

// .rodata

RO_FLT_80A33930_jp = 0x80A33930; // type:f32
RO_FLT_80A33934_jp = 0x80A33934; // type:f32
RO_FLT_80A33938_jp = 0x80A33938; // type:f32
RO_FLT_80A3393C_jp = 0x80A3393C; // type:f32
RO_FLT_80A33940_jp = 0x80A33940; // type:f32

// .text

func_80A339C0_jp = 0x80A339C0; // type:func
func_80A33AC8_jp = 0x80A33AC8; // type:func
func_80A33AE8_jp = 0x80A33AE8; // type:func
func_80A33BD8_jp = 0x80A33BD8; // type:func

// .data

D_80A33BF0_jp = 0x80A33BF0; //
D_80A33C08_jp = 0x80A33C08; //

// .rodata

RO_FLT_80A33C20_jp = 0x80A33C20; // type:f32

// .text

func_80A33C70_jp = 0x80A33C70; // type:func
func_80A33D58_jp = 0x80A33D58; // type:func
func_80A33E2C_jp = 0x80A33E2C; // type:func
func_80A33F00_jp = 0x80A33F00; // type:func

// .data

D_80A34070_jp = 0x80A34070; //

// .rodata

RO_FLT_80A34090_jp = 0x80A34090; // type:f32
RO_FLT_80A34094_jp = 0x80A34094; // type:f32
RO_FLT_80A34098_jp = 0x80A34098; // type:f32
RO_FLT_80A3409C_jp = 0x80A3409C; // type:f32

// .text

func_80A340F0_jp = 0x80A340F0; // type:func
func_80A341FC_jp = 0x80A341FC; // type:func
func_80A34238_jp = 0x80A34238; // type:func
func_80A34280_jp = 0x80A34280; // type:func

// .data

D_80A34460_jp = 0x80A34460; //
D_80A34478_jp = 0x80A34478; // type:u8
D_80A3447C_jp = 0x80A3447C; // type:u8

// .rodata

RO_FLT_80A34480_jp = 0x80A34480; // type:f32

// .text

func_80A344D0_jp = 0x80A344D0; // type:func
func_80A3456C_jp = 0x80A3456C; // type:func
func_80A34594_jp = 0x80A34594; // type:func
func_80A345A4_jp = 0x80A345A4; // type:func

// .data

D_80A34710_jp = 0x80A34710; //

// .rodata

RO_FLT_80A34730_jp = 0x80A34730; // type:f32

// .text

func_80A34770_jp = 0x80A34770; // type:func
func_80A34874_jp = 0x80A34874; // type:func
func_80A348EC_jp = 0x80A348EC; // type:func
func_80A34940_jp = 0x80A34940; // type:func

// .data

D_80A34C90_jp = 0x80A34C90; //
D_80A34CA8_jp = 0x80A34CA8; //

// .rodata

RO_FLT_80A34CC0_jp = 0x80A34CC0; // type:f32
RO_FLT_80A34CC4_jp = 0x80A34CC4; // type:f32
RO_FLT_80A34CC8_jp = 0x80A34CC8; // type:f32
RO_FLT_80A34CCC_jp = 0x80A34CCC; // type:f32
RO_FLT_80A34CD0_jp = 0x80A34CD0; // type:f32

// .text

func_80A34D40_jp = 0x80A34D40; // type:func
func_80A34DE4_jp = 0x80A34DE4; // type:func
func_80A34E14_jp = 0x80A34E14; // type:func
func_80A34E6C_jp = 0x80A34E6C; // type:func

// .data

D_80A34F00_jp = 0x80A34F00; //
D_80A34F10_jp = 0x80A34F10; //

// .rodata

RO_FLT_80A34F30_jp = 0x80A34F30; // type:f32

// .text

func_80A34F80_jp = 0x80A34F80; // type:func
func_80A35020_jp = 0x80A35020; // type:func
func_80A3512C_jp = 0x80A3512C; // type:func
func_80A35318_jp = 0x80A35318; // type:func
func_80A357F8_jp = 0x80A357F8; // type:func
func_80A3588C_jp = 0x80A3588C; // type:func
func_80A358FC_jp = 0x80A358FC; // type:func
func_80A3590C_jp = 0x80A3590C; // type:func

// .data

D_80A35920_jp = 0x80A35920; //
D_80A35938_jp = 0x80A35938; //
D_80A35944_jp = 0x80A35944; //

// .rodata

RO_FLT_80A35960_jp = 0x80A35960; // type:f32
jtbl_80A35964_jp = 0x80A35964; // type:jtbl

// .text

func_80A35A80_jp = 0x80A35A80; // type:func
func_80A35B1C_jp = 0x80A35B1C; // type:func
func_80A35E64_jp = 0x80A35E64; // type:func
func_80A35EE4_jp = 0x80A35EE4; // type:func

// .data

D_80A36230_jp = 0x80A36230; //
D_80A3623C_jp = 0x80A3623C; //
D_80A36254_jp = 0x80A36254; //
D_80A36260_jp = 0x80A36260; // type:u8
D_80A36274_jp = 0x80A36274; // type:u8

// .rodata

RO_FLT_80A36290_jp = 0x80A36290; // type:f32
RO_FLT_80A36294_jp = 0x80A36294; // type:f32
RO_FLT_80A36298_jp = 0x80A36298; // type:f32
RO_FLT_80A3629C_jp = 0x80A3629C; // type:f32
RO_FLT_80A362A0_jp = 0x80A362A0; // type:f32
RO_FLT_80A362A4_jp = 0x80A362A4; // type:f32
RO_FLT_80A362A8_jp = 0x80A362A8; // type:f32
RO_FLT_80A362AC_jp = 0x80A362AC; // type:f32
RO_FLT_80A362B0_jp = 0x80A362B0; // type:f32
RO_FLT_80A362B4_jp = 0x80A362B4; // type:f32
RO_FLT_80A362B8_jp = 0x80A362B8; // type:f32
RO_FLT_80A362BC_jp = 0x80A362BC; // type:f32

// .text

func_80A36370_jp = 0x80A36370; // type:func
func_80A3646C_jp = 0x80A3646C; // type:func
func_80A36480_jp = 0x80A36480; // type:func
func_80A36490_jp = 0x80A36490; // type:func

// .data

D_80A364A0_jp = 0x80A364A0; //

// .text

func_80A364F0_jp = 0x80A364F0; // type:func
func_80A36598_jp = 0x80A36598; // type:func
func_80A36628_jp = 0x80A36628; // type:func
func_80A366A4_jp = 0x80A366A4; // type:func

// .data

D_80A368C0_jp = 0x80A368C0; //

// .rodata

RO_FLT_80A368E0_jp = 0x80A368E0; // type:f32
RO_FLT_80A368E4_jp = 0x80A368E4; // type:f32
RO_FLT_80A368E8_jp = 0x80A368E8; // type:f32
RO_FLT_80A368EC_jp = 0x80A368EC; // type:f32

// .text

func_80A36940_jp = 0x80A36940; // type:func
func_80A36AA8_jp = 0x80A36AA8; // type:func
func_80A36B18_jp = 0x80A36B18; // type:func
func_80A36B54_jp = 0x80A36B54; // type:func

// .data

D_80A36F20_jp = 0x80A36F20; //
D_80A36F34_jp = 0x80A36F34; //
D_80A36F4C_jp = 0x80A36F4C; //
D_FLT_80A36F58_jp = 0x80A36F58; // type:f32
D_80A36FD0_jp = 0x80A36FD0; // type:u8
D_80A37004_jp = 0x80A37004; // type:u8
D_FLT_80A37014_jp = 0x80A37014; // type:f32

// .rodata

RO_FLT_80A37030_jp = 0x80A37030; // type:f32
RO_FLT_80A37034_jp = 0x80A37034; // type:f32
RO_FLT_80A37038_jp = 0x80A37038; // type:f32
RO_FLT_80A3703C_jp = 0x80A3703C; // type:f32

// .text

func_80A370C0_jp = 0x80A370C0; // type:func
func_80A37148_jp = 0x80A37148; // type:func
func_80A371DC_jp = 0x80A371DC; // type:func
func_80A3724C_jp = 0x80A3724C; // type:func

// .data

D_80A37380_jp = 0x80A37380; //

// .rodata

RO_FLT_80A373A0_jp = 0x80A373A0; // type:f32

// .text

func_80A373E0_jp = 0x80A373E0; // type:func
func_80A37474_jp = 0x80A37474; // type:func
func_80A37490_jp = 0x80A37490; // type:func
func_80A3766C_jp = 0x80A3766C; // type:func

// .data

D_80A37680_jp = 0x80A37680; //

// .text

func_80A376D0_jp = 0x80A376D0; // type:func
func_80A37764_jp = 0x80A37764; // type:func
func_80A37A48_jp = 0x80A37A48; // type:func
func_80A37A98_jp = 0x80A37A98; // type:func

// .data

D_80A37C10_jp = 0x80A37C10; //
D_FLT_80A37C28_jp = 0x80A37C28; // type:f32
D_80A37C3C_jp = 0x80A37C3C; //
D_80A37C48_jp = 0x80A37C48; //
D_80A37C54_jp = 0x80A37C54; //
D_FLT_80A37C60_jp = 0x80A37C60; // type:f32

// .rodata

RO_FLT_80A37C70_jp = 0x80A37C70; // type:f32
RO_FLT_80A37C74_jp = 0x80A37C74; // type:f32
RO_FLT_80A37C78_jp = 0x80A37C78; // type:f32
RO_FLT_80A37C7C_jp = 0x80A37C7C; // type:f32
RO_FLT_80A37C80_jp = 0x80A37C80; // type:f32
RO_FLT_80A37C84_jp = 0x80A37C84; // type:f32
RO_FLT_80A37C88_jp = 0x80A37C88; // type:f32
RO_FLT_80A37C8C_jp = 0x80A37C8C; // type:f32

// .text

func_80A37D20_jp = 0x80A37D20; // type:func
func_80A37DB4_jp = 0x80A37DB4; // type:func
func_80A37F4C_jp = 0x80A37F4C; // type:func
func_80A37FA4_jp = 0x80A37FA4; // type:func

// .data

D_80A38130_jp = 0x80A38130; //
D_80A38148_jp = 0x80A38148; //
D_FLT_80A38154_jp = 0x80A38154; // type:f32

// .rodata

RO_FLT_80A38160_jp = 0x80A38160; // type:f32
RO_FLT_80A38164_jp = 0x80A38164; // type:f32
RO_FLT_80A38168_jp = 0x80A38168; // type:f32
RO_FLT_80A3816C_jp = 0x80A3816C; // type:f32
RO_FLT_80A38170_jp = 0x80A38170; // type:f32
RO_FLT_80A38174_jp = 0x80A38174; // type:f32

// .text

func_80A381F0_jp = 0x80A381F0; // type:func
func_80A38280_jp = 0x80A38280; // type:func
func_80A382C8_jp = 0x80A382C8; // type:func
func_80A3850C_jp = 0x80A3850C; // type:func

// .data

D_80A388F0_jp = 0x80A388F0; //
D_80A38908_jp = 0x80A38908; //
D_80A3890C_jp = 0x80A3890C; //
D_80A38978_jp = 0x80A38978; //

// .rodata

RO_FLT_80A389F0_jp = 0x80A389F0; // type:f32
RO_FLT_80A389F4_jp = 0x80A389F4; // type:f32
RO_FLT_80A389F8_jp = 0x80A389F8; // type:f32
RO_FLT_80A389FC_jp = 0x80A389FC; // type:f32
RO_FLT_80A38A00_jp = 0x80A38A00; // type:f32
RO_FLT_80A38A04_jp = 0x80A38A04; // type:f32
RO_FLT_80A38A08_jp = 0x80A38A08; // type:f32

// .text

func_80A38A90_jp = 0x80A38A90; // type:func
func_80A38B20_jp = 0x80A38B20; // type:func
func_80A38BA0_jp = 0x80A38BA0; // type:func
func_80A38E00_jp = 0x80A38E00; // type:func

// .data

D_80A390A0_jp = 0x80A390A0; //
D_80A390B8_jp = 0x80A390B8; //
D_80A390C0_jp = 0x80A390C0; //
D_80A3912C_jp = 0x80A3912C; //
D_80A39198_jp = 0x80A39198; //

// .rodata

RO_FLT_80A391A0_jp = 0x80A391A0; // type:f32
RO_FLT_80A391A4_jp = 0x80A391A4; // type:f32
RO_FLT_80A391A8_jp = 0x80A391A8; // type:f32
RO_FLT_80A391AC_jp = 0x80A391AC; // type:f32
RO_FLT_80A391B0_jp = 0x80A391B0; // type:f32
RO_FLT_80A391B4_jp = 0x80A391B4; // type:f32

// .text

func_80A39230_jp = 0x80A39230; // type:func
func_80A392C0_jp = 0x80A392C0; // type:func
func_80A39340_jp = 0x80A39340; // type:func
func_80A39590_jp = 0x80A39590; // type:func

// .data

D_80A39980_jp = 0x80A39980; //
D_80A39998_jp = 0x80A39998; //
D_80A3999C_jp = 0x80A3999C; //
D_80A39A08_jp = 0x80A39A08; //

// .rodata

RO_FLT_80A39A80_jp = 0x80A39A80; // type:f32
RO_FLT_80A39A84_jp = 0x80A39A84; // type:f32
RO_FLT_80A39A88_jp = 0x80A39A88; // type:f32
RO_FLT_80A39A8C_jp = 0x80A39A8C; // type:f32
RO_FLT_80A39A90_jp = 0x80A39A90; // type:f32
RO_FLT_80A39A94_jp = 0x80A39A94; // type:f32
RO_FLT_80A39A98_jp = 0x80A39A98; // type:f32

// .text

func_80A39B20_jp = 0x80A39B20; // type:func
func_80A39BB0_jp = 0x80A39BB0; // type:func
func_80A39C30_jp = 0x80A39C30; // type:func
func_80A39E90_jp = 0x80A39E90; // type:func

// .data

D_80A3A130_jp = 0x80A3A130; //
D_80A3A148_jp = 0x80A3A148; //
D_80A3A150_jp = 0x80A3A150; //
D_80A3A1BC_jp = 0x80A3A1BC; //
D_80A3A228_jp = 0x80A3A228; //

// .rodata

RO_FLT_80A3A230_jp = 0x80A3A230; // type:f32
RO_FLT_80A3A234_jp = 0x80A3A234; // type:f32
RO_FLT_80A3A238_jp = 0x80A3A238; // type:f32
RO_FLT_80A3A23C_jp = 0x80A3A23C; // type:f32
RO_FLT_80A3A240_jp = 0x80A3A240; // type:f32
RO_FLT_80A3A244_jp = 0x80A3A244; // type:f32

// .text

func_80A3A2C0_jp = 0x80A3A2C0; // type:func
func_80A3A350_jp = 0x80A3A350; // type:func
func_80A3A3A0_jp = 0x80A3A3A0; // type:func
func_80A3A5C8_jp = 0x80A3A5C8; // type:func

// .data

D_80A3A5E0_jp = 0x80A3A5E0; //
D_80A3A5F8_jp = 0x80A3A5F8; //

// .rodata

jtbl_80A3A610_jp = 0x80A3A610; // type:jtbl

// .text

func_80A3A680_jp = 0x80A3A680; // type:func
func_80A3A7E8_jp = 0x80A3A7E8; // type:func
func_80A3A87C_jp = 0x80A3A87C; // type:func
func_80A3A94C_jp = 0x80A3A94C; // type:func
func_80A3AB6C_jp = 0x80A3AB6C; // type:func

// .data

D_80A3AB80_jp = 0x80A3AB80; //
D_80A3AB98_jp = 0x80A3AB98; //
D_80A3ABA4_jp = 0x80A3ABA4; //
D_80A3ABB0_jp = 0x80A3ABB0; //
D_80A3ABC4_jp = 0x80A3ABC4; //
D_80A3ABCC_jp = 0x80A3ABCC; //
D_80A3ABE0_jp = 0x80A3ABE0; //
D_80A3ABE8_jp = 0x80A3ABE8; //
D_80A3ABFC_jp = 0x80A3ABFC; //
D_80A3AC04_jp = 0x80A3AC04; //
D_80A3AC18_jp = 0x80A3AC18; //
D_80A3AC20_jp = 0x80A3AC20; //
D_80A3AC40_jp = 0x80A3AC40; //
D_80A3AC48_jp = 0x80A3AC48; //
D_80A3AC68_jp = 0x80A3AC68; //
D_80A3AC70_jp = 0x80A3AC70; //
D_80A3AC90_jp = 0x80A3AC90; //
D_80A3AC98_jp = 0x80A3AC98; //
D_80A3ACB8_jp = 0x80A3ACB8; //
D_80A3ACC0_jp = 0x80A3ACC0; //

// .text

func_80A3AD70_jp = 0x80A3AD70; // type:func
func_80A3AE58_jp = 0x80A3AE58; // type:func
func_80A3AEE0_jp = 0x80A3AEE0; // type:func
func_80A3AF38_jp = 0x80A3AF38; // type:func
func_80A3B134_jp = 0x80A3B134; // type:func

// .data

D_80A3B150_jp = 0x80A3B150; //

// .text

func_80A3B1A0_jp = 0x80A3B1A0; // type:func
func_80A3B230_jp = 0x80A3B230; // type:func
func_80A3B388_jp = 0x80A3B388; // type:func
func_80A3B474_jp = 0x80A3B474; // type:func

// .data

D_80A3B6C0_jp = 0x80A3B6C0; //
D_80A3B6D0_jp = 0x80A3B6D0; //

// .rodata

RO_FLT_80A3B6F0_jp = 0x80A3B6F0; // type:f32
RO_FLT_80A3B6F4_jp = 0x80A3B6F4; // type:f32
RO_FLT_80A3B6F8_jp = 0x80A3B6F8; // type:f32
RO_FLT_80A3B6FC_jp = 0x80A3B6FC; // type:f32

// .text

func_80A3B750_jp = 0x80A3B750; // type:func
func_80A3B7E0_jp = 0x80A3B7E0; // type:func
func_80A3B944_jp = 0x80A3B944; // type:func
func_80A3B954_jp = 0x80A3B954; // type:func

// .data

D_80A3B970_jp = 0x80A3B970; //

// .text

func_80A3B9C0_jp = 0x80A3B9C0; // type:func
func_80A3BA60_jp = 0x80A3BA60; // type:func
func_80A3BAC0_jp = 0x80A3BAC0; // type:func
func_80A3BDB8_jp = 0x80A3BDB8; // type:func
func_80A3BE60_jp = 0x80A3BE60; // type:func

// .data

D_80A3C040_jp = 0x80A3C040; //
D_FLT_80A3C058_jp = 0x80A3C058; // type:f32
D_80A3C07C_jp = 0x80A3C07C; //

// .rodata

RO_FLT_80A3C090_jp = 0x80A3C090; // type:f32
RO_FLT_80A3C094_jp = 0x80A3C094; // type:f32

// .data

D_80A3C0F0_jp = 0x80A3C0F0; //

// .text

func_80A3C130_jp = 0x80A3C130; // type:func
func_80A3C168_jp = 0x80A3C168; // type:func
func_80A3C3D8_jp = 0x80A3C3D8; // type:func
func_80A3C3E8_jp = 0x80A3C3E8; // type:func
func_80A3C420_jp = 0x80A3C420; // type:func
func_80A3C510_jp = 0x80A3C510; // type:func
func_80A3C53C_jp = 0x80A3C53C; // type:func
func_80A3C5F0_jp = 0x80A3C5F0; // type:func

// .data

D_80A3C7C0_jp = 0x80A3C7C0; //
D_80A3C7D0_jp = 0x80A3C7D0; //
D_80A3C7E4_jp = 0x80A3C7E4; //
D_80A3C7F0_jp = 0x80A3C7F0; //
D_80A3C7F4_jp = 0x80A3C7F4; //
D_80A3C7F8_jp = 0x80A3C7F8; //
D_FLT_80A3C7FC_jp = 0x80A3C7FC; // type:f32
D_FLT_80A3C800_jp = 0x80A3C800; // type:f32
D_80A3C804_jp = 0x80A3C804; //

// .text

func_80A3C890_jp = 0x80A3C890; // type:func
func_80A3C8F8_jp = 0x80A3C8F8; // type:func
func_80A3CACC_jp = 0x80A3CACC; // type:func
func_80A3CADC_jp = 0x80A3CADC; // type:func
func_80A3CB8C_jp = 0x80A3CB8C; // type:func
func_80A3CCB4_jp = 0x80A3CCB4; // type:func
func_80A3CD08_jp = 0x80A3CD08; // type:func
func_80A3CD58_jp = 0x80A3CD58; // type:func
func_80A3CD84_jp = 0x80A3CD84; // type:func

// .data

D_80A3CF80_jp = 0x80A3CF80; //
D_80A3CF94_jp = 0x80A3CF94; //

// .rodata

RO_FLT_80A3CFA0_jp = 0x80A3CFA0; // type:f32
RO_FLT_80A3CFA4_jp = 0x80A3CFA4; // type:f32
RO_FLT_80A3CFA8_jp = 0x80A3CFA8; // type:f32

// .text

func_80A3D010_jp = 0x80A3D010; // type:func
func_80A3D064_jp = 0x80A3D064; // type:func
func_80A3D238_jp = 0x80A3D238; // type:func
func_80A3D2BC_jp = 0x80A3D2BC; // type:func
func_80A3D38C_jp = 0x80A3D38C; // type:func
func_80A3D484_jp = 0x80A3D484; // type:func
func_80A3D4A0_jp = 0x80A3D4A0; // type:func
func_80A3D530_jp = 0x80A3D530; // type:func
func_80A3D55C_jp = 0x80A3D55C; // type:func

// .data

D_80A3D700_jp = 0x80A3D700; //
D_80A3D714_jp = 0x80A3D714; //
D_80A3D720_jp = 0x80A3D720; //

// .rodata

RO_FLT_80A3D730_jp = 0x80A3D730; // type:f32
RO_FLT_80A3D734_jp = 0x80A3D734; // type:f32
RO_FLT_80A3D738_jp = 0x80A3D738; // type:f32
RO_FLT_80A3D73C_jp = 0x80A3D73C; // type:f32
RO_FLT_80A3D740_jp = 0x80A3D740; // type:f32
RO_FLT_80A3D744_jp = 0x80A3D744; // type:f32
RO_FLT_80A3D748_jp = 0x80A3D748; // type:f32
RO_FLT_80A3D74C_jp = 0x80A3D74C; // type:f32

// .text

func_80A3D7E0_jp = 0x80A3D7E0; // type:func
func_80A3D834_jp = 0x80A3D834; // type:func
func_80A3DA08_jp = 0x80A3DA08; // type:func
func_80A3DA8C_jp = 0x80A3DA8C; // type:func
func_80A3DB5C_jp = 0x80A3DB5C; // type:func
func_80A3DC54_jp = 0x80A3DC54; // type:func
func_80A3DC70_jp = 0x80A3DC70; // type:func
func_80A3DCF4_jp = 0x80A3DCF4; // type:func
func_80A3DD20_jp = 0x80A3DD20; // type:func

// .data

D_80A3DEB0_jp = 0x80A3DEB0; //
D_80A3DEBC_jp = 0x80A3DEBC; //
D_80A3DED0_jp = 0x80A3DED0; //

// .rodata

RO_FLT_80A3DEE0_jp = 0x80A3DEE0; // type:f32
RO_FLT_80A3DEE4_jp = 0x80A3DEE4; // type:f32
RO_FLT_80A3DEE8_jp = 0x80A3DEE8; // type:f32
RO_FLT_80A3DEEC_jp = 0x80A3DEEC; // type:f32
RO_FLT_80A3DEF0_jp = 0x80A3DEF0; // type:f32
RO_FLT_80A3DEF4_jp = 0x80A3DEF4; // type:f32
RO_FLT_80A3DEF8_jp = 0x80A3DEF8; // type:f32
RO_FLT_80A3DEFC_jp = 0x80A3DEFC; // type:f32

// .text

func_80A3DF90_jp = 0x80A3DF90; // type:func
func_80A3E02C_jp = 0x80A3E02C; // type:func
func_80A3E08C_jp = 0x80A3E08C; // type:func
func_80A3E308_jp = 0x80A3E308; // type:func
func_80A3E318_jp = 0x80A3E318; // type:func

// .data

D_80A3E510_jp = 0x80A3E510; //
D_FLT_80A3E528_jp = 0x80A3E528; // type:f32
D_80A3E54C_jp = 0x80A3E54C; //

// .rodata

RO_FLT_80A3E560_jp = 0x80A3E560; // type:f32
RO_FLT_80A3E564_jp = 0x80A3E564; // type:f32

// .text

func_80A3E5C0_jp = 0x80A3E5C0; // type:func
func_80A3E65C_jp = 0x80A3E65C; // type:func
func_80A3E6A0_jp = 0x80A3E6A0; // type:func
func_80A3E6B0_jp = 0x80A3E6B0; // type:func

// .data

D_80A3E720_jp = 0x80A3E720; //

// .rodata

RO_FLT_80A3E740_jp = 0x80A3E740; // type:f32

// .data

D_80A3E780_jp = 0x80A3E780; //
D_80A3E7F0_jp = 0x80A3E7F0; //
D_80A3E860_jp = 0x80A3E860; //
D_80A3E8D0_jp = 0x80A3E8D0; //
D_80A3E940_jp = 0x80A3E940; //
D_80A3E9B0_jp = 0x80A3E9B0; //
D_80A3EA20_jp = 0x80A3EA20; //
D_80A3EA90_jp = 0x80A3EA90; //
D_80A3EB00_jp = 0x80A3EB00; //
D_80A3EB70_jp = 0x80A3EB70; //
D_80A3EBE0_jp = 0x80A3EBE0; //

// .text

func_80A3EC50_jp = 0x80A3EC50; // type:func
func_80A3EC98_jp = 0x80A3EC98; // type:func
func_80A3ECC4_jp = 0x80A3ECC4; // type:func
func_80A3ED84_jp = 0x80A3ED84; // type:func
func_80A3EEE0_jp = 0x80A3EEE0; // type:func
func_80A3EFC8_jp = 0x80A3EFC8; // type:func

// .data

D_80A3EFE0_jp = 0x80A3EFE0; //
D_80A3EFEC_jp = 0x80A3EFEC; //
D_80A3F014_jp = 0x80A3F014; //
D_80A3F028_jp = 0x80A3F028; //

// .rodata

RO_FLT_80A3F070_jp = 0x80A3F070; // type:f32
RO_FLT_80A3F074_jp = 0x80A3F074; // type:f32

// .text

func_80A3F0E0_jp = 0x80A3F0E0; // type:func
func_80A3F174_jp = 0x80A3F174; // type:func
func_80A3F1BC_jp = 0x80A3F1BC; // type:func
func_80A3F3D0_jp = 0x80A3F3D0; // type:func

// .data

D_80A3F3E0_jp = 0x80A3F3E0; //
D_80A3F3F4_jp = 0x80A3F3F4; //
D_80A3F470_jp = 0x80A3F470; //
D_80A3F4E0_jp = 0x80A3F4E0; //
D_80A3F550_jp = 0x80A3F550; //
D_80A3F5C0_jp = 0x80A3F5C0; //
D_80A3F630_jp = 0x80A3F630; //
D_80A3F6A0_jp = 0x80A3F6A0; //

// .text

func_80A3F710_jp = 0x80A3F710; // type:func
func_80A3F758_jp = 0x80A3F758; // type:func
func_80A3F784_jp = 0x80A3F784; // type:func
func_80A3F844_jp = 0x80A3F844; // type:func
func_80A3F9A0_jp = 0x80A3F9A0; // type:func
func_80A3FA88_jp = 0x80A3FA88; // type:func

// .data

D_80A3FAA0_jp = 0x80A3FAA0; //
D_80A3FAAC_jp = 0x80A3FAAC; //
D_80A3FAD4_jp = 0x80A3FAD4; //

// .rodata

RO_FLT_80A3FB30_jp = 0x80A3FB30; // type:f32
RO_FLT_80A3FB34_jp = 0x80A3FB34; // type:f32

// .data

D_80A3FBA0_jp = 0x80A3FBA0; //
D_80A3FC10_jp = 0x80A3FC10; //
D_80A3FC80_jp = 0x80A3FC80; //

// .text

func_80A3FCF0_jp = 0x80A3FCF0; // type:func
func_80A3FD84_jp = 0x80A3FD84; // type:func
func_80A3FDCC_jp = 0x80A3FDCC; // type:func
func_80A3FFE0_jp = 0x80A3FFE0; // type:func

// .data

D_80A3FFF0_jp = 0x80A3FFF0; //
D_80A40004_jp = 0x80A40004; //
D_80A40080_jp = 0x80A40080; //
D_80A400F0_jp = 0x80A400F0; //
D_80A40160_jp = 0x80A40160; //
D_80A401D0_jp = 0x80A401D0; //
D_80A40240_jp = 0x80A40240; //
D_80A402B0_jp = 0x80A402B0; //
D_80A40320_jp = 0x80A40320; //
D_80A40390_jp = 0x80A40390; //
D_80A40400_jp = 0x80A40400; //

// .text

func_80A40470_jp = 0x80A40470; // type:func
func_80A40480_jp = 0x80A40480; // type:func
func_80A404C0_jp = 0x80A404C0; // type:func
func_80A404D8_jp = 0x80A404D8; // type:func

// .data

D_80A404F0_jp = 0x80A404F0; //
D_80A40504_jp = 0x80A40504; //

// .text

func_80A40580_jp = 0x80A40580; // type:func
func_80A40590_jp = 0x80A40590; // type:func
func_80A405D0_jp = 0x80A405D0; // type:func
func_80A405E8_jp = 0x80A405E8; // type:func

// .data

D_80A40600_jp = 0x80A40600; //
D_80A40614_jp = 0x80A40614; //

// .text

func_80A40690_jp = 0x80A40690; // type:func
func_80A406A0_jp = 0x80A406A0; // type:func
func_80A406E0_jp = 0x80A406E0; // type:func
func_80A406F8_jp = 0x80A406F8; // type:func

// .data

D_80A40710_jp = 0x80A40710; //
D_80A40724_jp = 0x80A40724; //

// .text

func_80A407A0_jp = 0x80A407A0; // type:func

// .data

D_80A40830_jp = 0x80A40830; //
D_80A40844_jp = 0x80A40844; //
D_80A408B0_jp = 0x80A408B0; //
D_80A40920_jp = 0x80A40920; //
D_80A40990_jp = 0x80A40990; //
D_80A40A00_jp = 0x80A40A00; //
D_80A40A70_jp = 0x80A40A70; //

// .text

func_80A40AE0_jp = 0x80A40AE0; // type:func
func_80A40B74_jp = 0x80A40B74; // type:func
func_80A40BBC_jp = 0x80A40BBC; // type:func
func_80A40DD0_jp = 0x80A40DD0; // type:func

// .data

D_80A40DE0_jp = 0x80A40DE0; //
D_80A40DF4_jp = 0x80A40DF4; //
D_80A40E70_jp = 0x80A40E70; //
D_80A40EE0_jp = 0x80A40EE0; //
D_80A40F50_jp = 0x80A40F50; //
D_80A40FC0_jp = 0x80A40FC0; //
D_80A41030_jp = 0x80A41030; //
D_80A410A0_jp = 0x80A410A0; //
D_80A41110_jp = 0x80A41110; //
D_80A41180_jp = 0x80A41180; //
D_80A411F0_jp = 0x80A411F0; //
D_80A41260_jp = 0x80A41260; //
D_80A412D0_jp = 0x80A412D0; //
D_80A41340_jp = 0x80A41340; //
D_80A413B0_jp = 0x80A413B0; //
D_80A41420_jp = 0x80A41420; //

// .text

func_80A41490_jp = 0x80A41490; // type:func
func_80A414A0_jp = 0x80A414A0; // type:func
func_80A41568_jp = 0x80A41568; // type:func
func_80A41844_jp = 0x80A41844; // type:func

// .data

D_80A41860_jp = 0x80A41860; //
D_80A418CC_jp = 0x80A418CC; //
D_80A418E0_jp = 0x80A418E0; //
D_80A41970_jp = 0x80A41970; //
D_80A419E0_jp = 0x80A419E0; //
D_80A41A50_jp = 0x80A41A50; //
D_80A41AC0_jp = 0x80A41AC0; //

// .text

func_80A41B30_jp = 0x80A41B30; // type:func
func_80A41B40_jp = 0x80A41B40; // type:func
func_80A41B80_jp = 0x80A41B80; // type:func
func_80A41B98_jp = 0x80A41B98; // type:func

// .data

D_80A41BB0_jp = 0x80A41BB0; //
D_80A41BC4_jp = 0x80A41BC4; //

// .text

func_80A41C40_jp = 0x80A41C40; // type:func

// .data

D_80A41CD0_jp = 0x80A41CD0; //
D_80A41CE4_jp = 0x80A41CE4; //

// .text

func_80A41D50_jp = 0x80A41D50; // type:func
func_80A41D60_jp = 0x80A41D60; // type:func
func_80A41DA8_jp = 0x80A41DA8; // type:func
func_80A41DC0_jp = 0x80A41DC0; // type:func

// .data

D_80A41DD0_jp = 0x80A41DD0; //
D_80A41DE4_jp = 0x80A41DE4; //
D_80A41E60_jp = 0x80A41E60; //
D_80A41ED0_jp = 0x80A41ED0; //
D_80A41F40_jp = 0x80A41F40; //

// .text

func_80A41FB0_jp = 0x80A41FB0; // type:func
func_80A41FC0_jp = 0x80A41FC0; // type:func
func_80A42000_jp = 0x80A42000; // type:func
func_80A42018_jp = 0x80A42018; // type:func

// .data

D_80A42030_jp = 0x80A42030; //
D_80A42044_jp = 0x80A42044; //

// .text

func_80A420C0_jp = 0x80A420C0; // type:func
func_80A42154_jp = 0x80A42154; // type:func
func_80A4219C_jp = 0x80A4219C; // type:func
func_80A423B0_jp = 0x80A423B0; // type:func

// .data

D_80A423C0_jp = 0x80A423C0; //
D_80A423D4_jp = 0x80A423D4; //
D_80A42450_jp = 0x80A42450; //
D_80A424C0_jp = 0x80A424C0; //
D_80A42530_jp = 0x80A42530; //

// .text

func_80A425A0_jp = 0x80A425A0; // type:func
func_80A42634_jp = 0x80A42634; // type:func
func_80A4267C_jp = 0x80A4267C; // type:func
func_80A42890_jp = 0x80A42890; // type:func

// .data

D_80A428A0_jp = 0x80A428A0; //
D_80A428B4_jp = 0x80A428B4; //
D_80A42930_jp = 0x80A42930; //
D_80A429A0_jp = 0x80A429A0; //
D_80A42A10_jp = 0x80A42A10; //

// .text

func_80A42A80_jp = 0x80A42A80; // type:func
func_80A42B18_jp = 0x80A42B18; // type:func
func_80A42DB4_jp = 0x80A42DB4; // type:func
func_80A42DE8_jp = 0x80A42DE8; // type:func
func_80A4311C_jp = 0x80A4311C; // type:func
func_80A43218_jp = 0x80A43218; // type:func

// .data

D_80A43230_jp = 0x80A43230; //
D_80A4323C_jp = 0x80A4323C; //
D_80A43250_jp = 0x80A43250; //

// .rodata

RO_FLT_80A432A0_jp = 0x80A432A0; // type:f32
RO_FLT_80A432A4_jp = 0x80A432A4; // type:f32
RO_FLT_80A432A8_jp = 0x80A432A8; // type:f32

// .data

D_80A43310_jp = 0x80A43310; //

// .text

func_80A43380_jp = 0x80A43380; // type:func
func_80A43414_jp = 0x80A43414; // type:func
func_80A4345C_jp = 0x80A4345C; // type:func
func_80A43670_jp = 0x80A43670; // type:func

// .data

D_80A43680_jp = 0x80A43680; //
D_80A43694_jp = 0x80A43694; //
D_80A43710_jp = 0x80A43710; //
D_80A43780_jp = 0x80A43780; //
D_80A437F0_jp = 0x80A437F0; //
D_80A43860_jp = 0x80A43860; //
D_80A438D0_jp = 0x80A438D0; //
D_80A43940_jp = 0x80A43940; //
D_80A439B0_jp = 0x80A439B0; //
D_80A43A20_jp = 0x80A43A20; //
D_80A43A90_jp = 0x80A43A90; //
D_80A43B00_jp = 0x80A43B00; //

// .text

func_80A43B70_jp = 0x80A43B70; // type:func
func_80A43C04_jp = 0x80A43C04; // type:func
func_80A43C4C_jp = 0x80A43C4C; // type:func
func_80A43E60_jp = 0x80A43E60; // type:func

// .data

D_80A43E70_jp = 0x80A43E70; //
D_80A43E84_jp = 0x80A43E84; //
D_80A43F00_jp = 0x80A43F00; //
D_80A43F70_jp = 0x80A43F70; //
D_80A43FE0_jp = 0x80A43FE0; //
D_80A44050_jp = 0x80A44050; //

// .text

func_80A440C0_jp = 0x80A440C0; // type:func
func_80A440D0_jp = 0x80A440D0; // type:func
func_80A4410C_jp = 0x80A4410C; // type:func
func_80A44124_jp = 0x80A44124; // type:func

// .data

D_80A44140_jp = 0x80A44140; //
D_80A44154_jp = 0x80A44154; //
D_80A441D0_jp = 0x80A441D0; //

// .text

func_80A44240_jp = 0x80A44240; // type:func
func_80A442D4_jp = 0x80A442D4; // type:func
func_80A4431C_jp = 0x80A4431C; // type:func
func_80A44530_jp = 0x80A44530; // type:func

// .data

D_80A44540_jp = 0x80A44540; //
D_80A44554_jp = 0x80A44554; //
D_80A445D0_jp = 0x80A445D0; //

// .text

func_80A44640_jp = 0x80A44640; // type:func
func_80A44658_jp = 0x80A44658; // type:func

// .data

D_80A44750_jp = 0x80A44750; //
D_80A44764_jp = 0x80A44764; //

// .text

func_80A447E0_jp = 0x80A447E0; // type:func
func_80A447F0_jp = 0x80A447F0; // type:func
func_80A44808_jp = 0x80A44808; // type:func
func_80A44820_jp = 0x80A44820; // type:func

// .data

D_80A44830_jp = 0x80A44830; //
D_80A44844_jp = 0x80A44844; //

// .text

func_80A448C0_jp = 0x80A448C0; // type:func
func_80A448D0_jp = 0x80A448D0; // type:func
func_80A44910_jp = 0x80A44910; // type:func
func_80A44928_jp = 0x80A44928; // type:func

// .data

D_80A44940_jp = 0x80A44940; //
D_80A44954_jp = 0x80A44954; //

// .text

func_80A449D0_jp = 0x80A449D0; // type:func
func_80A449E0_jp = 0x80A449E0; // type:func
func_80A44A20_jp = 0x80A44A20; // type:func
func_80A44A38_jp = 0x80A44A38; // type:func

// .data

D_80A44A50_jp = 0x80A44A50; //
D_80A44A64_jp = 0x80A44A64; //

// .text

func_80A44AE0_jp = 0x80A44AE0; // type:func
func_80A44AF0_jp = 0x80A44AF0; // type:func
func_80A44B30_jp = 0x80A44B30; // type:func
func_80A44B48_jp = 0x80A44B48; // type:func

// .data

D_80A44B60_jp = 0x80A44B60; //
D_80A44B74_jp = 0x80A44B74; //
D_80A44BF0_jp = 0x80A44BF0; //
D_80A44C60_jp = 0x80A44C60; //
D_80A44CD0_jp = 0x80A44CD0; //
D_80A44D40_jp = 0x80A44D40; //

// .text

func_80A44DB0_jp = 0x80A44DB0; // type:func
func_80A44DC0_jp = 0x80A44DC0; // type:func
func_80A44E08_jp = 0x80A44E08; // type:func
func_80A44E20_jp = 0x80A44E20; // type:func

// .data

D_80A44E30_jp = 0x80A44E30; //
D_80A44E44_jp = 0x80A44E44; //
D_80A44EC0_jp = 0x80A44EC0; //

// .text

func_80A44F30_jp = 0x80A44F30; // type:func

// .data

D_80A44FC0_jp = 0x80A44FC0; //
D_80A44FD4_jp = 0x80A44FD4; //

// .text

func_80A45040_jp = 0x80A45040; // type:func
func_80A450D4_jp = 0x80A450D4; // type:func
func_80A45178_jp = 0x80A45178; // type:func

// .data

D_80A45360_jp = 0x80A45360; //
D_80A4536C_jp = 0x80A4536C; //
D_80A45380_jp = 0x80A45380; //

// .text

func_80A45400_jp = 0x80A45400; // type:func
func_80A45410_jp = 0x80A45410; // type:func
func_80A45450_jp = 0x80A45450; // type:func
func_80A45468_jp = 0x80A45468; // type:func

// .data

D_80A45480_jp = 0x80A45480; //
D_80A45494_jp = 0x80A45494; //

// .text

func_80A45510_jp = 0x80A45510; // type:func
func_80A458F8_jp = 0x80A458F8; // type:func
func_80A45918_jp = 0x80A45918; // type:func

// .data

D_80A45930_jp = 0x80A45930; //
D_80A45944_jp = 0x80A45944; //

// .rodata

RO_FLT_80A45990_jp = 0x80A45990; // type:f32
RO_FLT_80A45994_jp = 0x80A45994; // type:f32
RO_FLT_80A45998_jp = 0x80A45998; // type:f32

// .data

D_80A459E0_jp = 0x80A459E0; //
D_80A45A50_jp = 0x80A45A50; //
D_80A45AC0_jp = 0x80A45AC0; //
D_80A45B30_jp = 0x80A45B30; //
D_80A45BA0_jp = 0x80A45BA0; //
D_80A45C10_jp = 0x80A45C10; //

// .text

func_80A45C80_jp = 0x80A45C80; // type:func
func_80A45C90_jp = 0x80A45C90; // type:func
func_80A45D58_jp = 0x80A45D58; // type:func
func_80A46034_jp = 0x80A46034; // type:func

// .data

D_80A46050_jp = 0x80A46050; //
D_80A46064_jp = 0x80A46064; //
D_80A46078_jp = 0x80A46078; //
D_80A46100_jp = 0x80A46100; //
D_80A46170_jp = 0x80A46170; //
D_80A461E0_jp = 0x80A461E0; //
D_80A46250_jp = 0x80A46250; //
D_80A462C0_jp = 0x80A462C0; //
D_80A46330_jp = 0x80A46330; //
D_80A463A0_jp = 0x80A463A0; //
D_80A46410_jp = 0x80A46410; //
D_80A46480_jp = 0x80A46480; //
D_80A464F0_jp = 0x80A464F0; //
D_80A46560_jp = 0x80A46560; //
D_80A465D0_jp = 0x80A465D0; //
D_80A46640_jp = 0x80A46640; //
D_80A466B0_jp = 0x80A466B0; //
D_80A46720_jp = 0x80A46720; //
D_80A46790_jp = 0x80A46790; //
D_80A46800_jp = 0x80A46800; //
D_80A46870_jp = 0x80A46870; //
D_80A468E0_jp = 0x80A468E0; //
D_80A46950_jp = 0x80A46950; //

// .text

func_80A469C0_jp = 0x80A469C0; // type:func
func_80A46C5C_jp = 0x80A46C5C; // type:func
func_80A46C90_jp = 0x80A46C90; // type:func

// .data

D_80A46D00_jp = 0x80A46D00; //
D_80A46D0C_jp = 0x80A46D0C; //
D_80A46D18_jp = 0x80A46D18; //
D_80A46D2C_jp = 0x80A46D2C; //

// .rodata

RO_FLT_80A46D70_jp = 0x80A46D70; // type:f32
RO_FLT_80A46D74_jp = 0x80A46D74; // type:f32
RO_FLT_80A46D78_jp = 0x80A46D78; // type:f32

// .data

D_80A46DE0_jp = 0x80A46DE0; //
D_80A46E50_jp = 0x80A46E50; //
D_80A46EC0_jp = 0x80A46EC0; //
D_80A46F30_jp = 0x80A46F30; //
D_80A46FA0_jp = 0x80A46FA0; //
D_80A47010_jp = 0x80A47010; //
D_80A47080_jp = 0x80A47080; //
D_80A470F0_jp = 0x80A470F0; //
D_80A47160_jp = 0x80A47160; //
D_80A471D0_jp = 0x80A471D0; //
D_80A47240_jp = 0x80A47240; //
D_80A472B0_jp = 0x80A472B0; //
D_80A47320_jp = 0x80A47320; //
D_80A47390_jp = 0x80A47390; //
D_80A47400_jp = 0x80A47400; //
D_80A47470_jp = 0x80A47470; //
D_80A474E0_jp = 0x80A474E0; //
D_80A47550_jp = 0x80A47550; //
D_80A475C0_jp = 0x80A475C0; //
D_80A47630_jp = 0x80A47630; //
D_80A476A0_jp = 0x80A476A0; //
D_80A47710_jp = 0x80A47710; //

// .text

func_80A47780_jp = 0x80A47780; // type:func
func_80A47790_jp = 0x80A47790; // type:func
func_80A477A8_jp = 0x80A477A8; // type:func
func_80A477C0_jp = 0x80A477C0; // type:func

// .data

D_80A477D0_jp = 0x80A477D0; //
D_80A477E4_jp = 0x80A477E4; //
D_80A47860_jp = 0x80A47860; //
D_80A478D0_jp = 0x80A478D0; //
D_80A47940_jp = 0x80A47940; //
D_80A479B0_jp = 0x80A479B0; //
D_80A47A20_jp = 0x80A47A20; //
D_80A47A90_jp = 0x80A47A90; //
D_80A47B00_jp = 0x80A47B00; //
D_80A47B70_jp = 0x80A47B70; //
D_80A47BE0_jp = 0x80A47BE0; //
D_80A47C50_jp = 0x80A47C50; //
D_80A47CC0_jp = 0x80A47CC0; //
D_80A47D30_jp = 0x80A47D30; //
D_80A47DA0_jp = 0x80A47DA0; //
D_80A47E10_jp = 0x80A47E10; //
D_80A47E80_jp = 0x80A47E80; //
D_80A47EF0_jp = 0x80A47EF0; //
D_80A47F60_jp = 0x80A47F60; //
D_80A47FD0_jp = 0x80A47FD0; //
D_80A48040_jp = 0x80A48040; //
D_80A480B0_jp = 0x80A480B0; //
D_80A48120_jp = 0x80A48120; //
D_80A48190_jp = 0x80A48190; //
D_80A48200_jp = 0x80A48200; //
D_80A48270_jp = 0x80A48270; //
D_80A482E0_jp = 0x80A482E0; //
D_80A48350_jp = 0x80A48350; //

// .text

func_80A483C0_jp = 0x80A483C0; // type:func
func_80A483D0_jp = 0x80A483D0; // type:func
func_80A48498_jp = 0x80A48498; // type:func
func_80A4873C_jp = 0x80A4873C; // type:func

// .data

D_80A48750_jp = 0x80A48750; //
D_80A48784_jp = 0x80A48784; //
D_80A48798_jp = 0x80A48798; //

// .text

func_80A48820_jp = 0x80A48820; // type:func
func_80A48830_jp = 0x80A48830; // type:func
func_80A48870_jp = 0x80A48870; // type:func
func_80A48888_jp = 0x80A48888; // type:func

// .data

D_80A488A0_jp = 0x80A488A0; //
D_80A488B4_jp = 0x80A488B4; //
D_80A48930_jp = 0x80A48930; //

// .text

func_80A489A0_jp = 0x80A489A0; // type:func
func_80A489E8_jp = 0x80A489E8; // type:func
func_80A48A60_jp = 0x80A48A60; // type:func
func_80A48CFC_jp = 0x80A48CFC; // type:func
func_80A48D28_jp = 0x80A48D28; // type:func
func_80A4905C_jp = 0x80A4905C; // type:func
func_80A49280_jp = 0x80A49280; // type:func

// .data

D_80A49290_jp = 0x80A49290; //
D_80A4929C_jp = 0x80A4929C; // type:u8
D_80A492B4_jp = 0x80A492B4; //
D_80A492D4_jp = 0x80A492D4; //

// .rodata

RO_FLT_80A49320_jp = 0x80A49320; // type:f32
RO_FLT_80A49324_jp = 0x80A49324; // type:f32
RO_FLT_80A49328_jp = 0x80A49328; // type:f32

// .text

func_80A493B0_jp = 0x80A493B0; // type:func
func_80A493F8_jp = 0x80A493F8; // type:func
func_80A49424_jp = 0x80A49424; // type:func
func_80A494E0_jp = 0x80A494E0; // type:func
func_80A495B4_jp = 0x80A495B4; // type:func
func_80A497C8_jp = 0x80A497C8; // type:func

// .data

D_80A497E0_jp = 0x80A497E0; //
D_80A497F4_jp = 0x80A497F4; //

// .rodata

RO_FLT_80A49840_jp = 0x80A49840; // type:f32
RO_FLT_80A49844_jp = 0x80A49844; // type:f32

// .text

func_80A498A0_jp = 0x80A498A0; // type:func
func_80A498B0_jp = 0x80A498B0; // type:func
func_80A49928_jp = 0x80A49928; // type:func
func_80A49940_jp = 0x80A49940; // type:func

// .data

D_80A49950_jp = 0x80A49950; //
D_80A4995C_jp = 0x80A4995C; //
D_80A49970_jp = 0x80A49970; //

// .text

func_80A499F0_jp = 0x80A499F0; // type:func
func_80A49A88_jp = 0x80A49A88; // type:func
func_80A49B50_jp = 0x80A49B50; // type:func

// .data

D_80A49D70_jp = 0x80A49D70; //
D_80A49D84_jp = 0x80A49D84; //
D_80A49E00_jp = 0x80A49E00; //
D_80A49E0C_jp = 0x80A49E0C; //

// .text

func_80A49E70_jp = 0x80A49E70; // type:func
func_80A49F0C_jp = 0x80A49F0C; // type:func
func_80A4A020_jp = 0x80A4A020; // type:func
func_80A4A288_jp = 0x80A4A288; // type:func

// .data

D_80A4A2A0_jp = 0x80A4A2A0; //
D_80A4A2A8_jp = 0x80A4A2A8; // type:u8
D_80A4A324_jp = 0x80A4A324; //
D_80A4A338_jp = 0x80A4A338; //

// .text

func_80A4A3C0_jp = 0x80A4A3C0; // type:func
func_80A4A454_jp = 0x80A4A454; // type:func
func_80A4A470_jp = 0x80A4A470; // type:func
func_80A4A480_jp = 0x80A4A480; // type:func

// .data

D_80A4A580_jp = 0x80A4A580; //
D_80A4A598_jp = 0x80A4A598; //
D_80A4A5A4_jp = 0x80A4A5A4; //
D_80A4A5B0_jp = 0x80A4A5B0; //
D_80A4A5BC_jp = 0x80A4A5BC; //
D_80A4A5C8_jp = 0x80A4A5C8; //

// .text

func_80A4A610_jp = 0x80A4A610; // type:func
func_80A4A780_jp = 0x80A4A780; // type:func
func_80A4AF48_jp = 0x80A4AF48; // type:func
func_80A4AF74_jp = 0x80A4AF74; // type:func
func_80A4AF84_jp = 0x80A4AF84; // type:func

// .data

D_80A4AFA0_jp = 0x80A4AFA0; //
D_80A4AFF0_jp = 0x80A4AFF0; //
D_80A4B060_jp = 0x80A4B060; //
D_80A4B0D0_jp = 0x80A4B0D0; //
D_80A4B140_jp = 0x80A4B140; //
D_80A4B1B0_jp = 0x80A4B1B0; //
D_80A4B220_jp = 0x80A4B220; //
D_80A4B290_jp = 0x80A4B290; //
D_80A4B300_jp = 0x80A4B300; //

// .text

func_80A4B370_jp = 0x80A4B370; // type:func
func_80A4B380_jp = 0x80A4B380; // type:func
func_80A4B3C0_jp = 0x80A4B3C0; // type:func
func_80A4B3D8_jp = 0x80A4B3D8; // type:func

// .data

D_80A4B3F0_jp = 0x80A4B3F0; //
D_80A4B404_jp = 0x80A4B404; //
D_80A4B480_jp = 0x80A4B480; //
D_80A4B4F0_jp = 0x80A4B4F0; //

// .text

func_80A4B560_jp = 0x80A4B560; // type:func
func_80A4B5F4_jp = 0x80A4B5F4; // type:func
func_80A4B63C_jp = 0x80A4B63C; // type:func
func_80A4B850_jp = 0x80A4B850; // type:func

// .data

D_80A4B860_jp = 0x80A4B860; //
D_80A4B874_jp = 0x80A4B874; //
D_80A4B8F0_jp = 0x80A4B8F0; //
D_80A4B960_jp = 0x80A4B960; //
D_80A4B9D0_jp = 0x80A4B9D0; //
D_80A4BA40_jp = 0x80A4BA40; //
D_80A4BAB0_jp = 0x80A4BAB0; //
D_80A4BB20_jp = 0x80A4BB20; //
D_80A4BB90_jp = 0x80A4BB90; //

// .text

func_80A4BC00_jp = 0x80A4BC00; // type:func
func_80A4BC94_jp = 0x80A4BC94; // type:func
func_80A4BCDC_jp = 0x80A4BCDC; // type:func
func_80A4BEF0_jp = 0x80A4BEF0; // type:func

// .data

D_80A4BF00_jp = 0x80A4BF00; //
D_80A4BF14_jp = 0x80A4BF14; //
D_80A4BF90_jp = 0x80A4BF90; //
D_80A4C000_jp = 0x80A4C000; //
D_80A4C070_jp = 0x80A4C070; //

// .text

func_80A4C0E0_jp = 0x80A4C0E0; // type:func
func_80A4C174_jp = 0x80A4C174; // type:func
func_80A4C1BC_jp = 0x80A4C1BC; // type:func
func_80A4C3D0_jp = 0x80A4C3D0; // type:func

// .data

D_80A4C3E0_jp = 0x80A4C3E0; //
D_80A4C3F4_jp = 0x80A4C3F4; //
D_80A4C470_jp = 0x80A4C470; //
D_80A4C4E0_jp = 0x80A4C4E0; //
D_80A4C550_jp = 0x80A4C550; //
D_80A4C5C0_jp = 0x80A4C5C0; //
D_80A4C630_jp = 0x80A4C630; //

// .text

func_80A4C6A0_jp = 0x80A4C6A0; // type:func
func_80A4C734_jp = 0x80A4C734; // type:func
func_80A4C77C_jp = 0x80A4C77C; // type:func
func_80A4C990_jp = 0x80A4C990; // type:func

// .data

D_80A4C9A0_jp = 0x80A4C9A0; //
D_80A4C9B4_jp = 0x80A4C9B4; //
D_80A4CA30_jp = 0x80A4CA30; //

// .text

func_80A4CAA0_jp = 0x80A4CAA0; // type:func

// .data

D_80A4CB30_jp = 0x80A4CB30; //
D_80A4CB44_jp = 0x80A4CB44; //
D_80A4CBB0_jp = 0x80A4CBB0; //
D_80A4CC20_jp = 0x80A4CC20; //
D_80A4CC90_jp = 0x80A4CC90; //
D_80A4CD00_jp = 0x80A4CD00; //
D_80A4CD70_jp = 0x80A4CD70; //
D_80A4CDE0_jp = 0x80A4CDE0; //
D_80A4CE50_jp = 0x80A4CE50; //
D_80A4CEC0_jp = 0x80A4CEC0; //
D_80A4CF30_jp = 0x80A4CF30; //
D_80A4CFA0_jp = 0x80A4CFA0; //
D_80A4D010_jp = 0x80A4D010; //
D_80A4D080_jp = 0x80A4D080; //
D_80A4D0F0_jp = 0x80A4D0F0; //
D_80A4D160_jp = 0x80A4D160; //
D_80A4D1D0_jp = 0x80A4D1D0; //

// .text

func_80A4D240_jp = 0x80A4D240; // type:func
func_80A4D2D4_jp = 0x80A4D2D4; // type:func
func_80A4D31C_jp = 0x80A4D31C; // type:func
func_80A4D530_jp = 0x80A4D530; // type:func

// .data

D_80A4D540_jp = 0x80A4D540; //
D_80A4D554_jp = 0x80A4D554; //
D_80A4D5D0_jp = 0x80A4D5D0; //
D_80A4D640_jp = 0x80A4D640; //
D_80A4D6B0_jp = 0x80A4D6B0; //
D_80A4D720_jp = 0x80A4D720; //
D_80A4D790_jp = 0x80A4D790; //
D_80A4D800_jp = 0x80A4D800; //

// .text

func_80A4D870_jp = 0x80A4D870; // type:func
func_80A4D934_jp = 0x80A4D934; // type:func
func_80A4DB24_jp = 0x80A4DB24; // type:func
func_80A4DD38_jp = 0x80A4DD38; // type:func

// .data

D_80A4DD50_jp = 0x80A4DD50; //
D_80A4DD5C_jp = 0x80A4DD5C; //
D_80A4DD70_jp = 0x80A4DD70; //

// .text

func_80A4DDF0_jp = 0x80A4DDF0; // type:func
func_80A4DE4C_jp = 0x80A4DE4C; // type:func

// .data

D_80A4DED0_jp = 0x80A4DED0; //
D_80A4DEDC_jp = 0x80A4DEDC; //
D_80A4DEF0_jp = 0x80A4DEF0; //
D_80A4DF70_jp = 0x80A4DF70; //
D_80A4DFE0_jp = 0x80A4DFE0; //
D_80A4E050_jp = 0x80A4E050; //
D_80A4E05C_jp = 0x80A4E05C; //
D_80A4E0C0_jp = 0x80A4E0C0; //
D_80A4E130_jp = 0x80A4E130; //

// .text

func_80A4E1A0_jp = 0x80A4E1A0; // type:func
func_80A4E1B0_jp = 0x80A4E1B0; // type:func
func_80A4E1C8_jp = 0x80A4E1C8; // type:func
func_80A4E440_jp = 0x80A4E440; // type:func

// .data

D_80A4E450_jp = 0x80A4E450; //
D_80A4E464_jp = 0x80A4E464; //
D_80A4E4E0_jp = 0x80A4E4E0; //

// .text

func_80A4E550_jp = 0x80A4E550; // type:func
func_80A4E560_jp = 0x80A4E560; // type:func
func_80A4E578_jp = 0x80A4E578; // type:func
func_80A4E7F0_jp = 0x80A4E7F0; // type:func

// .data

D_80A4E800_jp = 0x80A4E800; //
D_80A4E814_jp = 0x80A4E814; //
D_80A4E890_jp = 0x80A4E890; //

// .text

func_80A4E900_jp = 0x80A4E900; // type:func
func_80A4E910_jp = 0x80A4E910; // type:func
func_80A4E928_jp = 0x80A4E928; // type:func
func_80A4EBA0_jp = 0x80A4EBA0; // type:func

// .data

D_80A4EBB0_jp = 0x80A4EBB0; //
D_80A4EBC4_jp = 0x80A4EBC4; //
D_80A4EC40_jp = 0x80A4EC40; //
D_80A4ECB0_jp = 0x80A4ECB0; //
D_80A4ED20_jp = 0x80A4ED20; //
D_80A4ED90_jp = 0x80A4ED90; //

// .text

func_80A4EE00_jp = 0x80A4EE00; // type:func
func_80A4EE10_jp = 0x80A4EE10; // type:func
func_80A4EEA4_jp = 0x80A4EEA4; // type:func
func_80A4EEBC_jp = 0x80A4EEBC; // type:func

// .data

D_80A4EED0_jp = 0x80A4EED0; //
D_80A4EEDC_jp = 0x80A4EEDC; //
D_80A4EEF0_jp = 0x80A4EEF0; //
D_80A4EF70_jp = 0x80A4EF70; //
D_80A4EFE0_jp = 0x80A4EFE0; //
D_80A4F050_jp = 0x80A4F050; //

// .text

func_80A4F0C0_jp = 0x80A4F0C0; // type:func
func_80A4F0D0_jp = 0x80A4F0D0; // type:func
func_80A4F0E8_jp = 0x80A4F0E8; // type:func
func_80A4F32C_jp = 0x80A4F32C; // type:func

// .data

D_80A4F340_jp = 0x80A4F340; //
D_80A4F354_jp = 0x80A4F354; //
D_80A4F3D0_jp = 0x80A4F3D0; //
D_80A4F440_jp = 0x80A4F440; //
D_80A4F4B0_jp = 0x80A4F4B0; //
D_80A4F520_jp = 0x80A4F520; //
D_80A4F590_jp = 0x80A4F590; //
D_80A4F600_jp = 0x80A4F600; //
D_80A4F670_jp = 0x80A4F670; //

// .text

func_80A4F6E0_jp = 0x80A4F6E0; // type:func
func_80A4F774_jp = 0x80A4F774; // type:func
func_80A4F7BC_jp = 0x80A4F7BC; // type:func
func_80A4F9D0_jp = 0x80A4F9D0; // type:func

// .data

D_80A4F9E0_jp = 0x80A4F9E0; //
D_80A4F9F4_jp = 0x80A4F9F4; //

// .text

func_80A4FA70_jp = 0x80A4FA70; // type:func
func_80A4FB04_jp = 0x80A4FB04; // type:func
func_80A4FB4C_jp = 0x80A4FB4C; // type:func
func_80A4FD60_jp = 0x80A4FD60; // type:func

// .data

D_80A4FD70_jp = 0x80A4FD70; //
D_80A4FD84_jp = 0x80A4FD84; //

// .text

func_80A4FE00_jp = 0x80A4FE00; // type:func
func_80A4FE94_jp = 0x80A4FE94; // type:func
func_80A4FEDC_jp = 0x80A4FEDC; // type:func
func_80A500F0_jp = 0x80A500F0; // type:func

// .data

D_80A50100_jp = 0x80A50100; //
D_80A50114_jp = 0x80A50114; //

// .text

func_80A50190_jp = 0x80A50190; // type:func
func_80A501A0_jp = 0x80A501A0; // type:func
func_80A501B8_jp = 0x80A501B8; // type:func
func_80A503FC_jp = 0x80A503FC; // type:func

// .data

D_80A50410_jp = 0x80A50410; //
D_80A50424_jp = 0x80A50424; //
D_80A504A0_jp = 0x80A504A0; //
D_80A50510_jp = 0x80A50510; //
D_80A50580_jp = 0x80A50580; //
D_80A505F0_jp = 0x80A505F0; //
D_80A50660_jp = 0x80A50660; //

// .text

func_80A506D0_jp = 0x80A506D0; // type:func
func_80A50758_jp = 0x80A50758; // type:func
func_80A507C4_jp = 0x80A507C4; // type:func
func_80A50814_jp = 0x80A50814; // type:func

// .data

D_80A509A0_jp = 0x80A509A0; //
D_80A509B8_jp = 0x80A509B8; //

// .rodata

RO_FLT_80A509E0_jp = 0x80A509E0; // type:f32
RO_FLT_80A509E4_jp = 0x80A509E4; // type:f32
RO_FLT_80A509E8_jp = 0x80A509E8; // type:f32

// .text

func_80A50A40_jp = 0x80A50A40; // type:func
func_80A50A50_jp = 0x80A50A50; // type:func
func_80A50A68_jp = 0x80A50A68; // type:func
func_80A50CAC_jp = 0x80A50CAC; // type:func

// .data

D_80A50CC0_jp = 0x80A50CC0; //
D_80A50CD4_jp = 0x80A50CD4; //
D_80A50D50_jp = 0x80A50D50; //

// .text

func_80A50DC0_jp = 0x80A50DC0; // type:func
func_80A50E64_jp = 0x80A50E64; // type:func
func_80A50EB0_jp = 0x80A50EB0; // type:func
func_80A50EE8_jp = 0x80A50EE8; // type:func

// .data

D_80A510F0_jp = 0x80A510F0; //
D_80A510F8_jp = 0x80A510F8; //
D_80A51100_jp = 0x80A51100; //

// .rodata

RO_FLT_80A51120_jp = 0x80A51120; // type:f32
RO_FLT_80A51124_jp = 0x80A51124; // type:f32
RO_FLT_80A51128_jp = 0x80A51128; // type:f32

// .text

func_80A51180_jp = 0x80A51180; // type:func
func_80A51238_jp = 0x80A51238; // type:func
func_80A51534_jp = 0x80A51534; // type:func
func_80A51638_jp = 0x80A51638; // type:func

// .data

D_80A518A0_jp = 0x80A518A0; //

// .rodata

RO_FLT_80A518C0_jp = 0x80A518C0; // type:f32
RO_FLT_80A518C4_jp = 0x80A518C4; // type:f32
RO_FLT_80A518C8_jp = 0x80A518C8; // type:f32
RO_FLT_80A518CC_jp = 0x80A518CC; // type:f32
RO_FLT_80A518D0_jp = 0x80A518D0; // type:f32
RO_FLT_80A518D4_jp = 0x80A518D4; // type:f32
RO_FLT_80A518D8_jp = 0x80A518D8; // type:f32
RO_FLT_80A518DC_jp = 0x80A518DC; // type:f32
RO_FLT_80A518E0_jp = 0x80A518E0; // type:f32

// .text

func_80A51960_jp = 0x80A51960; // type:func
func_80A519F4_jp = 0x80A519F4; // type:func
func_80A51B18_jp = 0x80A51B18; // type:func
func_80A51B68_jp = 0x80A51B68; // type:func

// .data

D_80A51C60_jp = 0x80A51C60; //

// .rodata

RO_FLT_80A51C80_jp = 0x80A51C80; // type:f32

// .text

func_80A51CC0_jp = 0x80A51CC0; // type:func
func_80A51DD4_jp = 0x80A51DD4; // type:func
func_80A525D0_jp = 0x80A525D0; // type:func
func_80A526C0_jp = 0x80A526C0; // type:func
func_80A526EC_jp = 0x80A526EC; // type:func
func_80A526FC_jp = 0x80A526FC; // type:func

// .data

D_80A52710_jp = 0x80A52710; //

// .rodata

jtbl_80A52730_jp = 0x80A52730; // type:jtbl

// .text

func_80A52830_jp = 0x80A52830; // type:func
func_80A528C4_jp = 0x80A528C4; // type:func
func_80A52AD4_jp = 0x80A52AD4; // type:func
func_80A52BAC_jp = 0x80A52BAC; // type:func

// .data

D_80A52D80_jp = 0x80A52D80; //

// .rodata

RO_FLT_80A52DA0_jp = 0x80A52DA0; // type:f32
RO_FLT_80A52DA4_jp = 0x80A52DA4; // type:f32
RO_FLT_80A52DA8_jp = 0x80A52DA8; // type:f32
RO_FLT_80A52DAC_jp = 0x80A52DAC; // type:f32
RO_FLT_80A52DB0_jp = 0x80A52DB0; // type:f32

// .text

func_80A52E10_jp = 0x80A52E10; // type:func
func_80A53490_jp = 0x80A53490; // type:func
func_80A534A4_jp = 0x80A534A4; // type:func
func_80A534B4_jp = 0x80A534B4; // type:func

// .data

D_80A534D0_jp = 0x80A534D0; //

// .rodata

jtbl_80A534F0_jp = 0x80A534F0; // type:jtbl

// .text

func_80A535E0_jp = 0x80A535E0; // type:func
func_80A53790_jp = 0x80A53790; // type:func
func_80A53898_jp = 0x80A53898; // type:func
func_80A53950_jp = 0x80A53950; // type:func

// .data

D_80A53B30_jp = 0x80A53B30; //
D_80A53B40_jp = 0x80A53B40; //
D_80A53B58_jp = 0x80A53B58; // type:u8
D_80A53B78_jp = 0x80A53B78; // type:u8

// .rodata

RO_FLT_80A53B90_jp = 0x80A53B90; // type:f32
RO_FLT_80A53B94_jp = 0x80A53B94; // type:f32
RO_FLT_80A53B98_jp = 0x80A53B98; // type:f32
RO_FLT_80A53B9C_jp = 0x80A53B9C; // type:f32
RO_FLT_80A53BA0_jp = 0x80A53BA0; // type:f32
RO_FLT_80A53BA4_jp = 0x80A53BA4; // type:f32
RO_FLT_80A53BA8_jp = 0x80A53BA8; // type:f32
RO_FLT_80A53BAC_jp = 0x80A53BAC; // type:f32
RO_FLT_80A53BB0_jp = 0x80A53BB0; // type:f32
RO_FLT_80A53BB4_jp = 0x80A53BB4; // type:f32

// .text

func_80A53C60_jp = 0x80A53C60; // type:func
func_80A53D70_jp = 0x80A53D70; // type:func
func_80A53F2C_jp = 0x80A53F2C; // type:func
func_80A54094_jp = 0x80A54094; // type:func
func_80A543C8_jp = 0x80A543C8; // type:func
func_80A543FC_jp = 0x80A543FC; // type:func
func_80A5440C_jp = 0x80A5440C; // type:func

// .data

D_80A54420_jp = 0x80A54420; //

// .rodata

RO_FLT_80A54440_jp = 0x80A54440; // type:f32

// .text

func_80A54490_jp = 0x80A54490; // type:func
func_80A5466C_jp = 0x80A5466C; // type:func
func_80A54680_jp = 0x80A54680; // type:func
func_80A54690_jp = 0x80A54690; // type:func

// .data

D_80A546A0_jp = 0x80A546A0; //

// .text

func_80A546F0_jp = 0x80A546F0; // type:func
func_80A5483C_jp = 0x80A5483C; // type:func
func_80A548A0_jp = 0x80A548A0; // type:func
func_80A54980_jp = 0x80A54980; // type:func

// .data

D_80A54AC0_jp = 0x80A54AC0; //

// .rodata

RO_FLT_80A54AE0_jp = 0x80A54AE0; // type:f32
RO_FLT_80A54AE4_jp = 0x80A54AE4; // type:f32
RO_FLT_80A54AE8_jp = 0x80A54AE8; // type:f32
RO_FLT_80A54AEC_jp = 0x80A54AEC; // type:f32
RO_FLT_80A54AF0_jp = 0x80A54AF0; // type:f32
RO_FLT_80A54AF4_jp = 0x80A54AF4; // type:f32

// .text

func_80A54B60_jp = 0x80A54B60; // type:func
func_80A54BF4_jp = 0x80A54BF4; // type:func
func_80A54DD8_jp = 0x80A54DD8; // type:func
func_80A55040_jp = 0x80A55040; // type:func

// .data

D_80A55140_jp = 0x80A55140; //
D_FLT_80A55158_jp = 0x80A55158; // type:f32
D_FLT_80A55164_jp = 0x80A55164; // type:f32
D_80A551B8_jp = 0x80A551B8; // type:s16
D_80A551D0_jp = 0x80A551D0; //

// .rodata

RO_STR_80A551E0_jp = 0x80A551E0; // type:asciz
RO_FLT_80A551F4_jp = 0x80A551F4; // type:f32
RO_FLT_80A551F8_jp = 0x80A551F8; // type:f32
RO_FLT_80A551FC_jp = 0x80A551FC; // type:f32

// .text

func_80A55270_jp = 0x80A55270; // type:func
func_80A55304_jp = 0x80A55304; // type:func
func_80A55508_jp = 0x80A55508; // type:func
func_80A55770_jp = 0x80A55770; // type:func

// .data

D_80A55870_jp = 0x80A55870; //
D_FLT_80A55888_jp = 0x80A55888; // type:f32
D_FLT_80A55894_jp = 0x80A55894; // type:f32
D_80A558D8_jp = 0x80A558D8; // type:s16
D_80A558EC_jp = 0x80A558EC; //

// .rodata

RO_STR_80A55900_jp = 0x80A55900; // type:asciz
RO_FLT_80A55914_jp = 0x80A55914; // type:f32
RO_FLT_80A55918_jp = 0x80A55918; // type:f32
RO_FLT_80A5591C_jp = 0x80A5591C; // type:f32
RO_FLT_80A55920_jp = 0x80A55920; // type:f32
RO_FLT_80A55924_jp = 0x80A55924; // type:f32

// .text

func_80A559B0_jp = 0x80A559B0; // type:func
func_80A55B80_jp = 0x80A55B80; // type:func
func_80A55BF4_jp = 0x80A55BF4; // type:func
func_80A55C04_jp = 0x80A55C04; // type:func

// .data

D_80A55DF0_jp = 0x80A55DF0; //
D_80A55DFC_jp = 0x80A55DFC; //

// .rodata

RO_FLT_80A55E20_jp = 0x80A55E20; // type:f32

// .text

func_80A55E70_jp = 0x80A55E70; // type:func
func_80A55F04_jp = 0x80A55F04; // type:func
func_80A560F8_jp = 0x80A560F8; // type:func
func_80A56298_jp = 0x80A56298; // type:func

// .data

D_80A563D0_jp = 0x80A563D0; //

// .rodata

RO_FLT_80A563F0_jp = 0x80A563F0; // type:f32
RO_FLT_80A563F4_jp = 0x80A563F4; // type:f32
RO_FLT_80A563F8_jp = 0x80A563F8; // type:f32
RO_FLT_80A563FC_jp = 0x80A563FC; // type:f32
RO_FLT_80A56400_jp = 0x80A56400; // type:f32
RO_FLT_80A56404_jp = 0x80A56404; // type:f32

// .text

func_80A56470_jp = 0x80A56470; // type:func
func_80A56584_jp = 0x80A56584; // type:func
func_80A5688C_jp = 0x80A5688C; // type:func
func_80A568B0_jp = 0x80A568B0; // type:func
func_80A568C0_jp = 0x80A568C0; // type:func

// .data

D_80A568D0_jp = 0x80A568D0; //

// .text

func_80A56920_jp = 0x80A56920; // type:func
func_80A569B4_jp = 0x80A569B4; // type:func
func_80A56A78_jp = 0x80A56A78; // type:func
func_80A56AF8_jp = 0x80A56AF8; // type:func

// .data

D_80A56C90_jp = 0x80A56C90; //
D_80A56CA0_jp = 0x80A56CA0; // type:u8
D_80A56CC0_jp = 0x80A56CC0; // type:u8
D_80A56CD0_jp = 0x80A56CD0; //

// .rodata

RO_FLT_80A56CF0_jp = 0x80A56CF0; // type:f32
RO_FLT_80A56CF4_jp = 0x80A56CF4; // type:f32
RO_FLT_80A56CF8_jp = 0x80A56CF8; // type:f32

// .data

D_80A56D60_jp = 0x80A56D60; //
D_80A56DD0_jp = 0x80A56DD0; //

// .text

func_80A56E40_jp = 0x80A56E40; // type:func
func_80A56ED4_jp = 0x80A56ED4; // type:func
func_80A56F1C_jp = 0x80A56F1C; // type:func
func_80A57130_jp = 0x80A57130; // type:func

// .data

D_80A57140_jp = 0x80A57140; //
D_80A57154_jp = 0x80A57154; //

// .text

func_80A571D0_jp = 0x80A571D0; // type:func
func_80A572B0_jp = 0x80A572B0; // type:func
func_80A57404_jp = 0x80A57404; // type:func
func_80A5748C_jp = 0x80A5748C; // type:func
func_80A57560_jp = 0x80A57560; // type:func
func_80A57670_jp = 0x80A57670; // type:func

// .data

D_80A57890_jp = 0x80A57890; //
D_80A578A8_jp = 0x80A578A8; //
D_80A578B4_jp = 0x80A578B4; //

// .rodata

RO_FLT_80A578C0_jp = 0x80A578C0; // type:f32
RO_FLT_80A578C4_jp = 0x80A578C4; // type:f32
RO_FLT_80A578C8_jp = 0x80A578C8; // type:f32
RO_FLT_80A578CC_jp = 0x80A578CC; // type:f32

// .text

func_80A57940_jp = 0x80A57940; // type:func
func_80A57A20_jp = 0x80A57A20; // type:func
func_80A57B94_jp = 0x80A57B94; // type:func
func_80A57C1C_jp = 0x80A57C1C; // type:func
func_80A57CF0_jp = 0x80A57CF0; // type:func
func_80A57E00_jp = 0x80A57E00; // type:func

// .data

D_80A58020_jp = 0x80A58020; //
D_80A58038_jp = 0x80A58038; //
D_80A58044_jp = 0x80A58044; //
D_80A58050_jp = 0x80A58050; //

// .rodata

RO_FLT_80A58060_jp = 0x80A58060; // type:f32
RO_FLT_80A58064_jp = 0x80A58064; // type:f32
RO_FLT_80A58068_jp = 0x80A58068; // type:f32
RO_FLT_80A5806C_jp = 0x80A5806C; // type:f32

// .data

D_80A580E0_jp = 0x80A580E0; //
D_80A58150_jp = 0x80A58150; //
D_80A581C0_jp = 0x80A581C0; //
D_80A58230_jp = 0x80A58230; //
D_80A5823C_jp = 0x80A5823C; //
D_80A582A0_jp = 0x80A582A0; //

// .text

func_80A58310_jp = 0x80A58310; // type:func
func_80A583A8_jp = 0x80A583A8; // type:func
func_80A58508_jp = 0x80A58508; // type:func
func_80A5871C_jp = 0x80A5871C; // type:func

// .data

D_80A58730_jp = 0x80A58730; //
D_80A58754_jp = 0x80A58754; //
D_80A58768_jp = 0x80A58768; //
D_80A5877C_jp = 0x80A5877C; //

// .text

func_80A58800_jp = 0x80A58800; // type:func
func_80A58810_jp = 0x80A58810; // type:func
func_80A58850_jp = 0x80A58850; // type:func
func_80A58868_jp = 0x80A58868; // type:func

// .data

D_80A58880_jp = 0x80A58880; //
D_80A58894_jp = 0x80A58894; //

// .text

func_80A58910_jp = 0x80A58910; // type:func
func_80A58920_jp = 0x80A58920; // type:func
func_80A58960_jp = 0x80A58960; // type:func
func_80A58978_jp = 0x80A58978; // type:func

// .data

D_80A58990_jp = 0x80A58990; //
D_80A589A4_jp = 0x80A589A4; //

// .text

func_80A58A20_jp = 0x80A58A20; // type:func
func_80A58A30_jp = 0x80A58A30; // type:func
func_80A58A70_jp = 0x80A58A70; // type:func
func_80A58A88_jp = 0x80A58A88; // type:func

// .data

D_80A58AA0_jp = 0x80A58AA0; //
D_80A58AB4_jp = 0x80A58AB4; //

// .text

func_80A58B30_jp = 0x80A58B30; // type:func
func_80A58B40_jp = 0x80A58B40; // type:func
func_80A58B80_jp = 0x80A58B80; // type:func
func_80A58B98_jp = 0x80A58B98; // type:func

// .data

D_80A58BB0_jp = 0x80A58BB0; //
D_80A58BC4_jp = 0x80A58BC4; //

// .text

func_80A58C40_jp = 0x80A58C40; // type:func
func_80A58D1C_jp = 0x80A58D1C; // type:func
func_80A58D7C_jp = 0x80A58D7C; // type:func
func_80A58FF8_jp = 0x80A58FF8; // type:func
func_80A59008_jp = 0x80A59008; // type:func

// .data

D_80A591D0_jp = 0x80A591D0; //
D_FLT_80A591E8_jp = 0x80A591E8; // type:f32
D_80A5920C_jp = 0x80A5920C; //

// .rodata

RO_FLT_80A59220_jp = 0x80A59220; // type:f32
RO_FLT_80A59224_jp = 0x80A59224; // type:f32

// .data

D_80A59280_jp = 0x80A59280; //
D_80A592F0_jp = 0x80A592F0; //

// .text

func_80A59360_jp = 0x80A59360; // type:func
func_80A5952C_jp = 0x80A5952C; // type:func
func_80A5960C_jp = 0x80A5960C; // type:func
func_80A5961C_jp = 0x80A5961C; // type:func
func_80A59974_jp = 0x80A59974; // type:func
func_80A599DC_jp = 0x80A599DC; // type:func
func_80A59A2C_jp = 0x80A59A2C; // type:func
func_80A59AB0_jp = 0x80A59AB0; // type:func
func_80A59BA0_jp = 0x80A59BA0; // type:func
func_80A59CF0_jp = 0x80A59CF0; // type:func
func_80A59E88_jp = 0x80A59E88; // type:func
func_80A59EA4_jp = 0x80A59EA4; // type:func
func_80A5A034_jp = 0x80A5A034; // type:func
func_80A5A120_jp = 0x80A5A120; // type:func
func_80A5A198_jp = 0x80A5A198; // type:func

// .data

D_80A5A580_jp = 0x80A5A580; //
D_80A5A588_jp = 0x80A5A588; //
D_80A5A768_jp = 0x80A5A768; //
D_80A5A76C_jp = 0x80A5A76C; //
_00920E00_Profile = 0x80A5A774; //
D_80A5A798_jp = 0x80A5A798; // type:u8
D_80A5A799_jp = 0x80A5A799; // type:u8
D_80A5A79A_jp = 0x80A5A79A; // type:u8
D_80A5A79B_jp = 0x80A5A79B; // type:u8
D_80A5A79C_jp = 0x80A5A79C; // type:u8
D_80A5A79D_jp = 0x80A5A79D; // type:u8
D_80A5A79E_jp = 0x80A5A79E; // type:u8

// .rodata

RO_FLT_80A5A7C0_jp = 0x80A5A7C0; // type:f32
RO_FLT_80A5A7C4_jp = 0x80A5A7C4; // type:f32

// .data

D_80A5A8E0_jp = 0x80A5A8E0; //

// .text

func_80A5A950_jp = 0x80A5A950; // type:func
func_80A5AA10_jp = 0x80A5AA10; // type:func
func_80A5AB38_jp = 0x80A5AB38; // type:func
func_80A5AD7C_jp = 0x80A5AD7C; // type:func
func_80A5AE84_jp = 0x80A5AE84; // type:func
func_80A5AE98_jp = 0x80A5AE98; // type:func
func_80A5AEA8_jp = 0x80A5AEA8; // type:func

// .data

D_80A5AEC0_jp = 0x80A5AEC0; //
D_80A5AED8_jp = 0x80A5AED8; //
D_80A5AEE4_jp = 0x80A5AEE4; //

// .rodata

RO_FLT_80A5AF00_jp = 0x80A5AF00; // type:f32

// .text

func_80A5AF70_jp = 0x80A5AF70; // type:func
func_80A5B000_jp = 0x80A5B000; // type:func
func_80A5B04C_jp = 0x80A5B04C; // type:func
func_80A5B0DC_jp = 0x80A5B0DC; // type:func
func_80A5B15C_jp = 0x80A5B15C; // type:func
func_80A5B180_jp = 0x80A5B180; // type:func
func_80A5B238_jp = 0x80A5B238; // type:func
func_80A5B364_jp = 0x80A5B364; // type:func
func_80A5B3A8_jp = 0x80A5B3A8; // type:func
func_80A5B440_jp = 0x80A5B440; // type:func
func_80A5B474_jp = 0x80A5B474; // type:func
func_80A5B4B4_jp = 0x80A5B4B4; // type:func
func_80A5B7C8_jp = 0x80A5B7C8; // type:func
func_80A5B808_jp = 0x80A5B808; // type:func
func_80A5B844_jp = 0x80A5B844; // type:func
func_80A5B920_jp = 0x80A5B920; // type:func
func_80A5BA40_jp = 0x80A5BA40; // type:func
func_80A5BADC_jp = 0x80A5BADC; // type:func
func_80A5BB08_jp = 0x80A5BB08; // type:func
func_80A5BB70_jp = 0x80A5BB70; // type:func
func_80A5BBAC_jp = 0x80A5BBAC; // type:func
func_80A5BC80_jp = 0x80A5BC80; // type:func
func_80A5BCC8_jp = 0x80A5BCC8; // type:func
func_80A5BE14_jp = 0x80A5BE14; // type:func
func_80A5BED4_jp = 0x80A5BED4; // type:func
func_80A5C234_jp = 0x80A5C234; // type:func
func_80A5C454_jp = 0x80A5C454; // type:func

// .data

D_80A5C540_jp = 0x80A5C540; //
_00922A10_Profile = 0x80A5C544; //
D_80A5C568_jp = 0x80A5C568; //
D_80A5C5F8_jp = 0x80A5C5F8; //
D_80A5C688_jp = 0x80A5C688; //
D_80A5C694_jp = 0x80A5C694; //
D_80A5C6A0_jp = 0x80A5C6A0; //
D_80A5C6AC_jp = 0x80A5C6AC; //
D_80A5C6B8_jp = 0x80A5C6B8; //
D_80A5C6C4_jp = 0x80A5C6C4; //
D_80A5C6D0_jp = 0x80A5C6D0; //
D_80A5C6DC_jp = 0x80A5C6DC; //
D_80A5C6E8_jp = 0x80A5C6E8; //
D_80A5C6F4_jp = 0x80A5C6F4; //
D_80A5C700_jp = 0x80A5C700; //
D_80A5C70C_jp = 0x80A5C70C; //
D_80A5C718_jp = 0x80A5C718; //
D_80A5C724_jp = 0x80A5C724; //
D_80A5C730_jp = 0x80A5C730; //
D_80A5C73C_jp = 0x80A5C73C; //
D_80A5C748_jp = 0x80A5C748; //
D_80A5C754_jp = 0x80A5C754; //
D_80A5C760_jp = 0x80A5C760; //
D_80A5C76C_jp = 0x80A5C76C; //
D_80A5C778_jp = 0x80A5C778; //
D_80A5C784_jp = 0x80A5C784; //
D_80A5C790_jp = 0x80A5C790; //
D_80A5C79C_jp = 0x80A5C79C; //
D_80A5C7A8_jp = 0x80A5C7A8; //
D_80A5C7B4_jp = 0x80A5C7B4; //
D_80A5C7C0_jp = 0x80A5C7C0; //
D_80A5C7CC_jp = 0x80A5C7CC; //
D_80A5C7D8_jp = 0x80A5C7D8; //
D_80A5C7E4_jp = 0x80A5C7E4; //
D_80A5C7F0_jp = 0x80A5C7F0; //
D_80A5C7FC_jp = 0x80A5C7FC; //
D_80A5C808_jp = 0x80A5C808; //
D_80A5C814_jp = 0x80A5C814; //
D_80A5C820_jp = 0x80A5C820; //
D_80A5C82C_jp = 0x80A5C82C; //
D_80A5C8BC_jp = 0x80A5C8BC; //
D_80A5C8D0_jp = 0x80A5C8D0; //
D_80A5C8E4_jp = 0x80A5C8E4; //
D_80A5C908_jp = 0x80A5C908; //
D_80A5C918_jp = 0x80A5C918; // type:u8
D_80A5C940_jp = 0x80A5C940; // type:u8
D_80A5C954_jp = 0x80A5C954; //
D_80A5C964_jp = 0x80A5C964; //
D_80A5C984_jp = 0x80A5C984; //
D_FLT_80A5CA14_jp = 0x80A5CA14; // type:f32
D_80A5CAA4_jp = 0x80A5CAA4; //

// .rodata

RO_STR_80A5CAB0_jp = 0x80A5CAB0; // type:asciz
RO_STR_80A5CAC4_jp = 0x80A5CAC4; // type:asciz
RO_FLT_80A5CAD8_jp = 0x80A5CAD8; // type:f32
RO_FLT_80A5CADC_jp = 0x80A5CADC; // type:f32
RO_FLT_80A5CAE0_jp = 0x80A5CAE0; // type:f32

// .bss

B_80A5CAF0_jp = 0x80A5CAF0; //
D_80A642F0_jp = 0x80A642F0; //

// .data

D_80A64540_jp = 0x80A64540; //
D_80A645B0_jp = 0x80A645B0; //
D_80A645BC_jp = 0x80A645BC; //
D_80A64620_jp = 0x80A64620; //
D_80A64690_jp = 0x80A64690; //
D_80A64700_jp = 0x80A64700; //
D_80A64770_jp = 0x80A64770; //
D_80A647E0_jp = 0x80A647E0; //
D_80A64850_jp = 0x80A64850; //
D_80A648C0_jp = 0x80A648C0; //
D_80A64930_jp = 0x80A64930; //

// .text

func_80A649A0_jp = 0x80A649A0; // type:func
func_80A64AF4_jp = 0x80A64AF4; // type:func
func_80A64B20_jp = 0x80A64B20; // type:func
func_80A64B68_jp = 0x80A64B68; // type:func
func_80A64BAC_jp = 0x80A64BAC; // type:func
func_80A64BDC_jp = 0x80A64BDC; // type:func
func_80A64C34_jp = 0x80A64C34; // type:func
func_80A64EB4_jp = 0x80A64EB4; // type:func
func_80A64EF0_jp = 0x80A64EF0; // type:func
func_80A64FD0_jp = 0x80A64FD0; // type:func
func_80A650B0_jp = 0x80A650B0; // type:func
func_80A65234_jp = 0x80A65234; // type:func
func_80A65464_jp = 0x80A65464; // type:func
func_80A655F8_jp = 0x80A655F8; // type:func
func_80A65714_jp = 0x80A65714; // type:func
func_80A65754_jp = 0x80A65754; // type:func
func_80A65BA8_jp = 0x80A65BA8; // type:func
func_80A65C84_jp = 0x80A65C84; // type:func
func_80A65D48_jp = 0x80A65D48; // type:func
func_80A65E78_jp = 0x80A65E78; // type:func
func_80A65F4C_jp = 0x80A65F4C; // type:func
func_80A65FC4_jp = 0x80A65FC4; // type:func
func_80A66048_jp = 0x80A66048; // type:func
func_80A661D8_jp = 0x80A661D8; // type:func
func_80A66288_jp = 0x80A66288; // type:func
func_80A66434_jp = 0x80A66434; // type:func
func_80A66624_jp = 0x80A66624; // type:func
func_80A666AC_jp = 0x80A666AC; // type:func
func_80A66714_jp = 0x80A66714; // type:func
func_80A66798_jp = 0x80A66798; // type:func
func_80A668AC_jp = 0x80A668AC; // type:func
func_80A66978_jp = 0x80A66978; // type:func

// .data

_00924C40_Profile = 0x80A66CA0; //
D_80A66CC4_jp = 0x80A66CC4; //
D_80A66CD4_jp = 0x80A66CD4; //
D_80A66CE0_jp = 0x80A66CE0; // type:s16
D_80A66E00_jp = 0x80A66E00; // type:u16
D_80A66E48_jp = 0x80A66E48; // type:s16
D_80A66E4C_jp = 0x80A66E4C; // type:s16
D_80A66E58_jp = 0x80A66E58; // type:s16
D_FLT_80A66E64_jp = 0x80A66E64; // type:f32
D_80A66E7C_jp = 0x80A66E7C; //

// .rodata

RO_STR_80A66EB0_jp = 0x80A66EB0; // type:asciz
RO_STR_80A66EC4_jp = 0x80A66EC4; // type:asciz
RO_STR_80A66ED8_jp = 0x80A66ED8; // type:asciz
RO_STR_80A66EEC_jp = 0x80A66EEC; // type:asciz
RO_STR_80A66F00_jp = 0x80A66F00; // type:asciz
RO_FLT_80A66F14_jp = 0x80A66F14; // type:f32
RO_FLT_80A66F18_jp = 0x80A66F18; // type:f32
RO_FLT_80A66F1C_jp = 0x80A66F1C; // type:f32
RO_FLT_80A66F20_jp = 0x80A66F20; // type:f32
RO_FLT_80A66F24_jp = 0x80A66F24; // type:f32
RO_FLT_80A66F28_jp = 0x80A66F28; // type:f32
RO_FLT_80A66F2C_jp = 0x80A66F2C; // type:f32
RO_FLT_80A66F30_jp = 0x80A66F30; // type:f32
RO_FLT_80A66F34_jp = 0x80A66F34; // type:f32
jtbl_80A66F38_jp = 0x80A66F38; // type:jtbl

// .text

func_80A671A0_jp = 0x80A671A0; // type:func
func_80A67234_jp = 0x80A67234; // type:func
func_80A673BC_jp = 0x80A673BC; // type:func
func_80A6744C_jp = 0x80A6744C; // type:func

// .data

D_80A67550_jp = 0x80A67550; //

// .rodata

jtbl_80A67570_jp = 0x80A67570; // type:jtbl
RO_FLT_80A67584_jp = 0x80A67584; // type:f32
RO_FLT_80A67588_jp = 0x80A67588; // type:f32
RO_FLT_80A6758C_jp = 0x80A6758C; // type:f32
RO_FLT_80A67590_jp = 0x80A67590; // type:f32
RO_FLT_80A67594_jp = 0x80A67594; // type:f32
RO_FLT_80A67598_jp = 0x80A67598; // type:f32
RO_FLT_80A6759C_jp = 0x80A6759C; // type:f32
RO_FLT_80A675A0_jp = 0x80A675A0; // type:f32
RO_FLT_80A675A4_jp = 0x80A675A4; // type:f32
RO_FLT_80A675A8_jp = 0x80A675A8; // type:f32
RO_FLT_80A675AC_jp = 0x80A675AC; // type:f32
RO_FLT_80A675B0_jp = 0x80A675B0; // type:f32

// .text

func_80A67670_jp = 0x80A67670; // type:func
func_80A67A94_jp = 0x80A67A94; // type:func
func_80A67B88_jp = 0x80A67B88; // type:func
func_80A67C78_jp = 0x80A67C78; // type:func
func_80A67E20_jp = 0x80A67E20; // type:func

// .data

D_80A67E30_jp = 0x80A67E30; //
D_80A67E48_jp = 0x80A67E48; //

// .rodata

jtbl_80A67E60_jp = 0x80A67E60; // type:jtbl
jtbl_80A67E84_jp = 0x80A67E84; // type:jtbl
jtbl_80A67EA8_jp = 0x80A67EA8; // type:jtbl

// .text

func_80A67F90_jp = 0x80A67F90; // type:func
func_80A68018_jp = 0x80A68018; // type:func
func_80A680A0_jp = 0x80A680A0; // type:func
func_80A680B0_jp = 0x80A680B0; // type:func

// .data

D_80A681D0_jp = 0x80A681D0; //
D_80A681E8_jp = 0x80A681E8; //

// .rodata

RO_FLT_80A68210_jp = 0x80A68210; // type:f32
RO_FLT_80A68214_jp = 0x80A68214; // type:f32
RO_FLT_80A68218_jp = 0x80A68218; // type:f32
RO_FLT_80A6821C_jp = 0x80A6821C; // type:f32
RO_FLT_80A68220_jp = 0x80A68220; // type:f32

// .text

func_80A68290_jp = 0x80A68290; // type:func
func_80A68318_jp = 0x80A68318; // type:func
func_80A68344_jp = 0x80A68344; // type:func
func_80A68354_jp = 0x80A68354; // type:func

// .data

D_80A68480_jp = 0x80A68480; //
D_80A68498_jp = 0x80A68498; //

// .rodata

RO_FLT_80A684C0_jp = 0x80A684C0; // type:f32

// .text

func_80A68510_jp = 0x80A68510; // type:func
func_80A685A0_jp = 0x80A685A0; // type:func
func_80A6864C_jp = 0x80A6864C; // type:func
func_80A68780_jp = 0x80A68780; // type:func

// .data

D_80A689A0_jp = 0x80A689A0; //

// .rodata

RO_STR_80A689C0_jp = 0x80A689C0; // type:asciz
RO_FLT_80A689D8_jp = 0x80A689D8; // type:f32
RO_FLT_80A689DC_jp = 0x80A689DC; // type:f32

// .data

D_80A68A20_jp = 0x80A68A20; //

// .text

func_80A68A90_jp = 0x80A68A90; // type:func
func_80A68B2C_jp = 0x80A68B2C; // type:func
func_80A68C18_jp = 0x80A68C18; // type:func
func_80A68E2C_jp = 0x80A68E2C; // type:func

// .data

D_80A68E40_jp = 0x80A68E40; //
D_80A68E54_jp = 0x80A68E54; //
D_80A68ED0_jp = 0x80A68ED0; //
D_80A68F40_jp = 0x80A68F40; //
D_80A68FB0_jp = 0x80A68FB0; //
D_80A69020_jp = 0x80A69020; //
D_80A69090_jp = 0x80A69090; //
D_80A69100_jp = 0x80A69100; //
D_80A69170_jp = 0x80A69170; //
D_80A6917C_jp = 0x80A6917C; //
D_80A691E0_jp = 0x80A691E0; //
D_80A69250_jp = 0x80A69250; //
D_80A692C0_jp = 0x80A692C0; //
D_80A69330_jp = 0x80A69330; //
D_80A6933C_jp = 0x80A6933C; //
D_80A693A0_jp = 0x80A693A0; //
D_80A69410_jp = 0x80A69410; //
D_80A69480_jp = 0x80A69480; //
D_80A694F0_jp = 0x80A694F0; //

// .text

func_80A69560_jp = 0x80A69560; // type:func
func_80A697FC_jp = 0x80A697FC; // type:func
func_80A69830_jp = 0x80A69830; // type:func
func_80A69A1C_jp = 0x80A69A1C; // type:func
func_80A69AB4_jp = 0x80A69AB4; // type:func
func_80A69AE8_jp = 0x80A69AE8; // type:func

// .data

D_80A69B00_jp = 0x80A69B00; //
D_80A69B0C_jp = 0x80A69B0C; //
D_80A69B20_jp = 0x80A69B20; //

// .rodata

RO_FLT_80A69B70_jp = 0x80A69B70; // type:f32
RO_FLT_80A69B74_jp = 0x80A69B74; // type:f32
RO_FLT_80A69B78_jp = 0x80A69B78; // type:f32

// .text

func_80A69BE0_jp = 0x80A69BE0; // type:func

// .data

D_80A69C70_jp = 0x80A69C70; //
D_80A69C84_jp = 0x80A69C84; //
D_80A69CF0_jp = 0x80A69CF0; //
D_80A69D60_jp = 0x80A69D60; //
D_80A69DD0_jp = 0x80A69DD0; //
D_80A69DDC_jp = 0x80A69DDC; //
D_80A69E40_jp = 0x80A69E40; //
D_80A69EB0_jp = 0x80A69EB0; //
D_80A69F20_jp = 0x80A69F20; //
D_80A69F90_jp = 0x80A69F90; //

// .text

func_80A6A000_jp = 0x80A6A000; // type:func

// .data

D_80A6A090_jp = 0x80A6A090; //
D_80A6A0A4_jp = 0x80A6A0A4; //
D_80A6A110_jp = 0x80A6A110; //
D_80A6A180_jp = 0x80A6A180; //

// .text

func_80A6A1F0_jp = 0x80A6A1F0; // type:func
func_80A6A280_jp = 0x80A6A280; // type:func
func_80A6A2A8_jp = 0x80A6A2A8; // type:func
func_80A6A2B8_jp = 0x80A6A2B8; // type:func
func_80A6A2E0_jp = 0x80A6A2E0; // type:func

// .data

D_80A6A400_jp = 0x80A6A400; //
D_80A6A418_jp = 0x80A6A418; // type:s16
D_FLT_80A6A420_jp = 0x80A6A420; // type:f32
D_80A6A42C_jp = 0x80A6A42C; //

// .text

func_80A6A490_jp = 0x80A6A490; // type:func

// .data

D_80A6A520_jp = 0x80A6A520; //
D_80A6A534_jp = 0x80A6A534; //
D_80A6A5A0_jp = 0x80A6A5A0; //
D_80A6A610_jp = 0x80A6A610; //
D_80A6A680_jp = 0x80A6A680; //
D_80A6A6F0_jp = 0x80A6A6F0; //
D_80A6A760_jp = 0x80A6A760; //
D_80A6A7D0_jp = 0x80A6A7D0; //
D_80A6A840_jp = 0x80A6A840; //

// .text

func_80A6A8B0_jp = 0x80A6A8B0; // type:func
func_80A6AC34_jp = 0x80A6AC34; // type:func
func_80A6AC68_jp = 0x80A6AC68; // type:func
func_80A6AFC4_jp = 0x80A6AFC4; // type:func
func_80A6B05C_jp = 0x80A6B05C; // type:func
func_80A6B158_jp = 0x80A6B158; // type:func

// .data

D_80A6B170_jp = 0x80A6B170; //
D_80A6B17C_jp = 0x80A6B17C; //
D_80A6B19C_jp = 0x80A6B19C; //

// .rodata

RO_FLT_80A6B1E0_jp = 0x80A6B1E0; // type:f32
RO_FLT_80A6B1E4_jp = 0x80A6B1E4; // type:f32
RO_FLT_80A6B1E8_jp = 0x80A6B1E8; // type:f32

// .data

D_80A6B250_jp = 0x80A6B250; //

// .text

func_80A6B2C0_jp = 0x80A6B2C0; // type:func

// .data

D_80A6B350_jp = 0x80A6B350; //
D_80A6B364_jp = 0x80A6B364; //
D_80A6B3D0_jp = 0x80A6B3D0; //
D_80A6B440_jp = 0x80A6B440; //

// .text

func_80A6B4B0_jp = 0x80A6B4B0; // type:func
func_80A6B638_jp = 0x80A6B638; // type:func
func_80A6B64C_jp = 0x80A6B64C; // type:func
func_80A6B65C_jp = 0x80A6B65C; // type:func

// .data

D_80A6B670_jp = 0x80A6B670; //

// .rodata

RO_FLT_80A6B690_jp = 0x80A6B690; // type:f32

// .text

func_80A6B6D0_jp = 0x80A6B6D0; // type:func
func_80A6B764_jp = 0x80A6B764; // type:func
func_80A6B9D0_jp = 0x80A6B9D0; // type:func
func_80A6BA50_jp = 0x80A6BA50; // type:func

// .data

D_80A6BBC0_jp = 0x80A6BBC0; //

// .rodata

RO_FLT_80A6BBE0_jp = 0x80A6BBE0; // type:f32
RO_FLT_80A6BBE4_jp = 0x80A6BBE4; // type:f32
RO_FLT_80A6BBE8_jp = 0x80A6BBE8; // type:f32
RO_FLT_80A6BBEC_jp = 0x80A6BBEC; // type:f32
RO_FLT_80A6BBF0_jp = 0x80A6BBF0; // type:f32
RO_FLT_80A6BBF4_jp = 0x80A6BBF4; // type:f32
RO_FLT_80A6BBF8_jp = 0x80A6BBF8; // type:f32
RO_FLT_80A6BBFC_jp = 0x80A6BBFC; // type:f32
RO_FLT_80A6BC00_jp = 0x80A6BC00; // type:f32

// .data

D_80A6BC80_jp = 0x80A6BC80; //
D_80A6BCF0_jp = 0x80A6BCF0; //
D_80A6BD60_jp = 0x80A6BD60; //
D_80A6BD6C_jp = 0x80A6BD6C; //
D_80A6BDD0_jp = 0x80A6BDD0; //
D_80A6BE40_jp = 0x80A6BE40; //
D_80A6BEB0_jp = 0x80A6BEB0; //
D_80A6BF20_jp = 0x80A6BF20; //

// .text

func_80A6BF90_jp = 0x80A6BF90; // type:func

// .data

D_80A6C020_jp = 0x80A6C020; //
D_80A6C034_jp = 0x80A6C034; //
D_80A6C0A0_jp = 0x80A6C0A0; //

// .text

func_80A6C110_jp = 0x80A6C110; // type:func

// .data

D_80A6C1A0_jp = 0x80A6C1A0; //
D_80A6C1B4_jp = 0x80A6C1B4; //

// .text

func_80A6C220_jp = 0x80A6C220; // type:func
func_80A6C2B4_jp = 0x80A6C2B4; // type:func
func_80A6C2FC_jp = 0x80A6C2FC; // type:func
func_80A6C510_jp = 0x80A6C510; // type:func

// .data

D_80A6C520_jp = 0x80A6C520; //
D_80A6C534_jp = 0x80A6C534; //

// .text

func_80A6C5B0_jp = 0x80A6C5B0; // type:func
func_80A6C63C_jp = 0x80A6C63C; // type:func
func_80A6C660_jp = 0x80A6C660; // type:func
func_80A6C68C_jp = 0x80A6C68C; // type:func
func_80A6C6B8_jp = 0x80A6C6B8; // type:func
func_80A6C6EC_jp = 0x80A6C6EC; // type:func
func_80A6C724_jp = 0x80A6C724; // type:func
func_80A6C93C_jp = 0x80A6C93C; // type:func
func_80A6C968_jp = 0x80A6C968; // type:func
func_80A6C998_jp = 0x80A6C998; // type:func
func_80A6C9F4_jp = 0x80A6C9F4; // type:func
func_80A6CA90_jp = 0x80A6CA90; // type:func
func_80A6CABC_jp = 0x80A6CABC; // type:func
func_80A6CB0C_jp = 0x80A6CB0C; // type:func
func_80A6CBDC_jp = 0x80A6CBDC; // type:func
func_80A6CC24_jp = 0x80A6CC24; // type:func
func_80A6CC98_jp = 0x80A6CC98; // type:func
func_80A6CD00_jp = 0x80A6CD00; // type:func
func_80A6CD68_jp = 0x80A6CD68; // type:func
func_80A6CE1C_jp = 0x80A6CE1C; // type:func
func_80A6CF7C_jp = 0x80A6CF7C; // type:func
func_80A6D008_jp = 0x80A6D008; // type:func
func_80A6D0DC_jp = 0x80A6D0DC; // type:func
func_80A6D1A8_jp = 0x80A6D1A8; // type:func
func_80A6D280_jp = 0x80A6D280; // type:func
func_80A6D320_jp = 0x80A6D320; // type:func
func_80A6D3D4_jp = 0x80A6D3D4; // type:func
func_80A6D450_jp = 0x80A6D450; // type:func
func_80A6D534_jp = 0x80A6D534; // type:func
func_80A6D590_jp = 0x80A6D590; // type:func
func_80A6D5E4_jp = 0x80A6D5E4; // type:func
func_80A6D658_jp = 0x80A6D658; // type:func
func_80A6D6C4_jp = 0x80A6D6C4; // type:func
func_80A6D758_jp = 0x80A6D758; // type:func
func_80A6D78C_jp = 0x80A6D78C; // type:func
func_80A6D7F4_jp = 0x80A6D7F4; // type:func
func_80A6D828_jp = 0x80A6D828; // type:func
func_80A6D868_jp = 0x80A6D868; // type:func
func_80A6D8F4_jp = 0x80A6D8F4; // type:func
func_80A6D9B4_jp = 0x80A6D9B4; // type:func
func_80A6DA18_jp = 0x80A6DA18; // type:func
func_80A6DA80_jp = 0x80A6DA80; // type:func
func_80A6DADC_jp = 0x80A6DADC; // type:func
func_80A6DB44_jp = 0x80A6DB44; // type:func
func_80A6DB74_jp = 0x80A6DB74; // type:func
func_80A6DBD4_jp = 0x80A6DBD4; // type:func
func_80A6DC04_jp = 0x80A6DC04; // type:func
func_80A6DC8C_jp = 0x80A6DC8C; // type:func
func_80A6DCD0_jp = 0x80A6DCD0; // type:func
func_80A6DD64_jp = 0x80A6DD64; // type:func
func_80A6DDC0_jp = 0x80A6DDC0; // type:func
func_80A6DE00_jp = 0x80A6DE00; // type:func
func_80A6DEAC_jp = 0x80A6DEAC; // type:func
func_80A6DF00_jp = 0x80A6DF00; // type:func
func_80A6DFA0_jp = 0x80A6DFA0; // type:func
func_80A6DFF8_jp = 0x80A6DFF8; // type:func
func_80A6E034_jp = 0x80A6E034; // type:func
func_80A6E094_jp = 0x80A6E094; // type:func
func_80A6E0E0_jp = 0x80A6E0E0; // type:func
func_80A6E12C_jp = 0x80A6E12C; // type:func
func_80A6E13C_jp = 0x80A6E13C; // type:func
func_80A6E198_jp = 0x80A6E198; // type:func
func_80A6E1C4_jp = 0x80A6E1C4; // type:func
func_80A6E210_jp = 0x80A6E210; // type:func
func_80A6E268_jp = 0x80A6E268; // type:func
func_80A6E298_jp = 0x80A6E298; // type:func
func_80A6E2D8_jp = 0x80A6E2D8; // type:func
func_80A6E344_jp = 0x80A6E344; // type:func
func_80A6E374_jp = 0x80A6E374; // type:func

// .data

_0092C850_Profile = 0x80A6E3A0; //
D_80A6E3C4_jp = 0x80A6E3C4; //
D_80A6E3E0_jp = 0x80A6E3E0; // type:s16
D_80A6E3E8_jp = 0x80A6E3E8; // type:s16
D_80A6E3F0_jp = 0x80A6E3F0; //
D_80A6E3F4_jp = 0x80A6E3F4; //
D_80A6E3F8_jp = 0x80A6E3F8; //
D_80A6E3FC_jp = 0x80A6E3FC; //
D_80A6E400_jp = 0x80A6E400; //
D_80A6E404_jp = 0x80A6E404; //
D_80A6E408_jp = 0x80A6E408; //
D_80A6E40C_jp = 0x80A6E40C; //
D_80A6E410_jp = 0x80A6E410; //
D_80A6E414_jp = 0x80A6E414; //
D_80A6E43C_jp = 0x80A6E43C; // type:s16
D_80A6E450_jp = 0x80A6E450; //
D_80A6E46C_jp = 0x80A6E46C; //
D_80A6E474_jp = 0x80A6E474; //
D_80A6E4F8_jp = 0x80A6E4F8; //
D_80A6E51C_jp = 0x80A6E51C; //
D_80A6E6AC_jp = 0x80A6E6AC; //
D_80A6E6B4_jp = 0x80A6E6B4; //

// .text

func_80A6E9A0_jp = 0x80A6E9A0; // type:func
func_80A6EA34_jp = 0x80A6EA34; // type:func
func_80A6EA7C_jp = 0x80A6EA7C; // type:func
func_80A6EC90_jp = 0x80A6EC90; // type:func

// .data

D_80A6ECA0_jp = 0x80A6ECA0; //
D_80A6ECB4_jp = 0x80A6ECB4; //
D_80A6ED30_jp = 0x80A6ED30; //

// .text

func_80A6EDA0_jp = 0x80A6EDA0; // type:func
func_80A6EE34_jp = 0x80A6EE34; // type:func
func_80A6EE7C_jp = 0x80A6EE7C; // type:func
func_80A6F090_jp = 0x80A6F090; // type:func

// .data

D_80A6F0A0_jp = 0x80A6F0A0; //
D_80A6F0B4_jp = 0x80A6F0B4; //

// .text

func_80A6F130_jp = 0x80A6F130; // type:func
func_80A6F1C4_jp = 0x80A6F1C4; // type:func
func_80A6F20C_jp = 0x80A6F20C; // type:func
func_80A6F420_jp = 0x80A6F420; // type:func

// .data

D_80A6F430_jp = 0x80A6F430; //
D_80A6F444_jp = 0x80A6F444; //

// .text

func_80A6F4C0_jp = 0x80A6F4C0; // type:func
func_80A6F554_jp = 0x80A6F554; // type:func
func_80A6F59C_jp = 0x80A6F59C; // type:func
func_80A6F7B0_jp = 0x80A6F7B0; // type:func

// .data

D_80A6F7C0_jp = 0x80A6F7C0; //
D_80A6F7D4_jp = 0x80A6F7D4; //

// .text

func_80A6F850_jp = 0x80A6F850; // type:func
func_80A6F8E4_jp = 0x80A6F8E4; // type:func
func_80A6F92C_jp = 0x80A6F92C; // type:func
func_80A6FB40_jp = 0x80A6FB40; // type:func

// .data

D_80A6FB50_jp = 0x80A6FB50; //
D_80A6FB64_jp = 0x80A6FB64; //

// .text

func_80A6FBE0_jp = 0x80A6FBE0; // type:func
func_80A6FC74_jp = 0x80A6FC74; // type:func
func_80A6FCBC_jp = 0x80A6FCBC; // type:func
func_80A6FED0_jp = 0x80A6FED0; // type:func

// .data

D_80A6FEE0_jp = 0x80A6FEE0; //
D_80A6FEF4_jp = 0x80A6FEF4; //

// .text

func_80A6FF70_jp = 0x80A6FF70; // type:func
func_80A70004_jp = 0x80A70004; // type:func
func_80A7004C_jp = 0x80A7004C; // type:func
func_80A70260_jp = 0x80A70260; // type:func

// .data

D_80A70270_jp = 0x80A70270; //
D_80A70284_jp = 0x80A70284; //

// .text

func_80A70300_jp = 0x80A70300; // type:func
func_80A70394_jp = 0x80A70394; // type:func
func_80A703DC_jp = 0x80A703DC; // type:func
func_80A70750_jp = 0x80A70750; // type:func

// .data

D_80A70760_jp = 0x80A70760; //
D_80A70774_jp = 0x80A70774; //
D_80A707F0_jp = 0x80A707F0; //
D_80A70860_jp = 0x80A70860; //

// .text

func_80A708D0_jp = 0x80A708D0; // type:func
func_80A70964_jp = 0x80A70964; // type:func
func_80A709AC_jp = 0x80A709AC; // type:func
func_80A70BC0_jp = 0x80A70BC0; // type:func

// .data

D_80A70BD0_jp = 0x80A70BD0; //
D_80A70BE4_jp = 0x80A70BE4; //

// .text

func_80A70C60_jp = 0x80A70C60; // type:func
func_80A70CF4_jp = 0x80A70CF4; // type:func
func_80A70D3C_jp = 0x80A70D3C; // type:func
func_80A70F50_jp = 0x80A70F50; // type:func

// .data

D_80A70F60_jp = 0x80A70F60; //
D_80A70F74_jp = 0x80A70F74; //

// .text

func_80A70FF0_jp = 0x80A70FF0; // type:func
func_80A71084_jp = 0x80A71084; // type:func
func_80A710CC_jp = 0x80A710CC; // type:func
func_80A712E0_jp = 0x80A712E0; // type:func

// .data

D_80A712F0_jp = 0x80A712F0; //
D_80A71304_jp = 0x80A71304; //

// .text

func_80A71380_jp = 0x80A71380; // type:func
func_80A71414_jp = 0x80A71414; // type:func
func_80A7145C_jp = 0x80A7145C; // type:func
func_80A71670_jp = 0x80A71670; // type:func

// .data

D_80A71680_jp = 0x80A71680; //
D_80A71694_jp = 0x80A71694; //

// .text

func_80A71710_jp = 0x80A71710; // type:func
func_80A717A4_jp = 0x80A717A4; // type:func
func_80A717EC_jp = 0x80A717EC; // type:func
func_80A71A00_jp = 0x80A71A00; // type:func

// .data

D_80A71A10_jp = 0x80A71A10; //
D_80A71A24_jp = 0x80A71A24; //

// .text

func_80A71AA0_jp = 0x80A71AA0; // type:func
func_80A71B5C_jp = 0x80A71B5C; // type:func
func_80A71D34_jp = 0x80A71D34; // type:func
func_80A71DBC_jp = 0x80A71DBC; // type:func

// .data

D_80A71F50_jp = 0x80A71F50; //
D_80A71F68_jp = 0x80A71F68; //

// .rodata

RO_FLT_80A71F90_jp = 0x80A71F90; // type:f32
RO_FLT_80A71F94_jp = 0x80A71F94; // type:f32
RO_FLT_80A71F98_jp = 0x80A71F98; // type:f32
RO_FLT_80A71F9C_jp = 0x80A71F9C; // type:f32
RO_FLT_80A71FA0_jp = 0x80A71FA0; // type:f32
RO_FLT_80A71FA4_jp = 0x80A71FA4; // type:f32
RO_FLT_80A71FA8_jp = 0x80A71FA8; // type:f32
RO_FLT_80A71FAC_jp = 0x80A71FAC; // type:f32
RO_FLT_80A71FB0_jp = 0x80A71FB0; // type:f32
RO_FLT_80A71FB4_jp = 0x80A71FB4; // type:f32
RO_FLT_80A71FB8_jp = 0x80A71FB8; // type:f32
RO_FLT_80A71FBC_jp = 0x80A71FBC; // type:f32

// .text

func_80A72050_jp = 0x80A72050; // type:func
func_80A720E0_jp = 0x80A720E0; // type:func
func_80A72288_jp = 0x80A72288; // type:func
func_80A7251C_jp = 0x80A7251C; // type:func

// .data

D_80A72780_jp = 0x80A72780; //

// .rodata

RO_FLT_80A727A0_jp = 0x80A727A0; // type:f32
RO_FLT_80A727A4_jp = 0x80A727A4; // type:f32
RO_FLT_80A727A8_jp = 0x80A727A8; // type:f32
RO_FLT_80A727AC_jp = 0x80A727AC; // type:f32

// .text

func_80A72800_jp = 0x80A72800; // type:func
func_80A72810_jp = 0x80A72810; // type:func
func_80A72820_jp = 0x80A72820; // type:func
func_80A72830_jp = 0x80A72830; // type:func

// .data

_00932AA0_Profile = 0x80A72860; //

// .text

func_80A728C0_jp = 0x80A728C0; // type:func
func_80A72A38_jp = 0x80A72A38; // type:func
func_80A72A64_jp = 0x80A72A64; // type:func
func_80A72ABC_jp = 0x80A72ABC; // type:func
func_80A72AE8_jp = 0x80A72AE8; // type:func
func_80A72B0C_jp = 0x80A72B0C; // type:func
func_80A72BD8_jp = 0x80A72BD8; // type:func
func_80A72D78_jp = 0x80A72D78; // type:func
func_80A72DB8_jp = 0x80A72DB8; // type:func
func_80A72FA4_jp = 0x80A72FA4; // type:func
func_80A72FF8_jp = 0x80A72FF8; // type:func
func_80A730C8_jp = 0x80A730C8; // type:func
func_80A731B0_jp = 0x80A731B0; // type:func
func_80A731F8_jp = 0x80A731F8; // type:func
func_80A7325C_jp = 0x80A7325C; // type:func
func_80A732E0_jp = 0x80A732E0; // type:func
func_80A73360_jp = 0x80A73360; // type:func
func_80A73420_jp = 0x80A73420; // type:func
func_80A73464_jp = 0x80A73464; // type:func
func_80A736B0_jp = 0x80A736B0; // type:func
func_80A73758_jp = 0x80A73758; // type:func
func_80A737F8_jp = 0x80A737F8; // type:func
func_80A7389C_jp = 0x80A7389C; // type:func
func_80A73914_jp = 0x80A73914; // type:func
func_80A73944_jp = 0x80A73944; // type:func
func_80A739D0_jp = 0x80A739D0; // type:func
func_80A73A18_jp = 0x80A73A18; // type:func
func_80A73A38_jp = 0x80A73A38; // type:func

// .data

_00932B60_Profile = 0x80A73A70; //
D_80A73A94_jp = 0x80A73A94; //
D_80A73AB0_jp = 0x80A73AB0; // type:u16
D_80A73ABC_jp = 0x80A73ABC; //
D_80A73AC0_jp = 0x80A73AC0; //
D_80A73AC8_jp = 0x80A73AC8; //
D_80A73AD8_jp = 0x80A73AD8; // type:u16
D_80A73AE0_jp = 0x80A73AE0; // type:s16
D_80A73AE8_jp = 0x80A73AE8; // type:u16
D_80A73AF0_jp = 0x80A73AF0; //

// .text

func_80A73C60_jp = 0x80A73C60; // type:func
func_80A73D80_jp = 0x80A73D80; // type:func
func_80A73DA4_jp = 0x80A73DA4; // type:func
func_80A73E00_jp = 0x80A73E00; // type:func
func_80A73E2C_jp = 0x80A73E2C; // type:func
func_80A73EC8_jp = 0x80A73EC8; // type:func
func_80A73F2C_jp = 0x80A73F2C; // type:func
func_80A73F74_jp = 0x80A73F74; // type:func
func_80A73FFC_jp = 0x80A73FFC; // type:func
func_80A74048_jp = 0x80A74048; // type:func
func_80A74088_jp = 0x80A74088; // type:func
func_80A74104_jp = 0x80A74104; // type:func
func_80A74140_jp = 0x80A74140; // type:func
func_80A74198_jp = 0x80A74198; // type:func
func_80A741F8_jp = 0x80A741F8; // type:func
func_80A7424C_jp = 0x80A7424C; // type:func
func_80A7428C_jp = 0x80A7428C; // type:func
func_80A7432C_jp = 0x80A7432C; // type:func
func_80A743AC_jp = 0x80A743AC; // type:func
func_80A743E4_jp = 0x80A743E4; // type:func
func_80A7441C_jp = 0x80A7441C; // type:func
func_80A7447C_jp = 0x80A7447C; // type:func
func_80A744B0_jp = 0x80A744B0; // type:func
func_80A744F4_jp = 0x80A744F4; // type:func
func_80A74594_jp = 0x80A74594; // type:func
func_80A7468C_jp = 0x80A7468C; // type:func
func_80A746B0_jp = 0x80A746B0; // type:func
func_80A74754_jp = 0x80A74754; // type:func
func_80A7479C_jp = 0x80A7479C; // type:func
func_80A747DC_jp = 0x80A747DC; // type:func
func_80A74848_jp = 0x80A74848; // type:func
func_80A74890_jp = 0x80A74890; // type:func

// .data

_00933F00_Profile = 0x80A748C0; //
D_80A748E4_jp = 0x80A748E4; //
D_80A74900_jp = 0x80A74900; //
D_80A74918_jp = 0x80A74918; //
D_80A74930_jp = 0x80A74930; // type:u8
D_80A74958_jp = 0x80A74958; //
D_80A74974_jp = 0x80A74974; //
D_80A74994_jp = 0x80A74994; //

// .text

func_80A74AB0_jp = 0x80A74AB0; // type:func
func_80A74B60_jp = 0x80A74B60; // type:func
func_80A74B84_jp = 0x80A74B84; // type:func
func_80A74BB0_jp = 0x80A74BB0; // type:func
func_80A74BDC_jp = 0x80A74BDC; // type:func
func_80A74C78_jp = 0x80A74C78; // type:func
func_80A74D0C_jp = 0x80A74D0C; // type:func
func_80A74D50_jp = 0x80A74D50; // type:func
func_80A74D9C_jp = 0x80A74D9C; // type:func
func_80A74DDC_jp = 0x80A74DDC; // type:func
func_80A74EEC_jp = 0x80A74EEC; // type:func
func_80A74F84_jp = 0x80A74F84; // type:func
func_80A75050_jp = 0x80A75050; // type:func
func_80A750E0_jp = 0x80A750E0; // type:func
func_80A75184_jp = 0x80A75184; // type:func
func_80A751F8_jp = 0x80A751F8; // type:func
func_80A75234_jp = 0x80A75234; // type:func
func_80A75300_jp = 0x80A75300; // type:func
func_80A75494_jp = 0x80A75494; // type:func
func_80A75580_jp = 0x80A75580; // type:func
func_80A755FC_jp = 0x80A755FC; // type:func
func_80A75648_jp = 0x80A75648; // type:func
func_80A75714_jp = 0x80A75714; // type:func
func_80A75744_jp = 0x80A75744; // type:func
func_80A75840_jp = 0x80A75840; // type:func
func_80A758C4_jp = 0x80A758C4; // type:func
func_80A7594C_jp = 0x80A7594C; // type:func
func_80A759EC_jp = 0x80A759EC; // type:func
func_80A75AF0_jp = 0x80A75AF0; // type:func
func_80A75C94_jp = 0x80A75C94; // type:func
func_80A75CDC_jp = 0x80A75CDC; // type:func
func_80A75D84_jp = 0x80A75D84; // type:func
func_80A75DCC_jp = 0x80A75DCC; // type:func
func_80A75E0C_jp = 0x80A75E0C; // type:func
func_80A75EC4_jp = 0x80A75EC4; // type:func
func_80A75F0C_jp = 0x80A75F0C; // type:func

// .data

_00934D50_Profile = 0x80A75F40; //
D_80A75F64_jp = 0x80A75F64; //
D_80A75F80_jp = 0x80A75F80; //
D_80A75F98_jp = 0x80A75F98; // type:u8
D_80A7600C_jp = 0x80A7600C; //
D_80A76050_jp = 0x80A76050; //

// .rodata

RO_FLT_80A76060_jp = 0x80A76060; // type:f32
RO_FLT_80A76064_jp = 0x80A76064; // type:f32

// .text

func_80A761D0_jp = 0x80A761D0; // type:func
func_80A76208_jp = 0x80A76208; // type:func
func_80A76294_jp = 0x80A76294; // type:func
func_80A76494_jp = 0x80A76494; // type:func
func_80A764A4_jp = 0x80A764A4; // type:func
func_80A764C0_jp = 0x80A764C0; // type:func
func_80A765A8_jp = 0x80A765A8; // type:func
func_80A76610_jp = 0x80A76610; // type:func

// .data

_00936470_Profile = 0x80A76770; //
D_80A76794_jp = 0x80A76794; //
D_80A767AC_jp = 0x80A767AC; //
D_80A767C0_jp = 0x80A767C0; //
D_80A76800_jp = 0x80A76800; //
D_FLT_80A76808_jp = 0x80A76808; // type:f32
D_FLT_80A76814_jp = 0x80A76814; // type:f32
D_80A76820_jp = 0x80A76820; //

// .rodata

RO_STR_80A76830_jp = 0x80A76830; // type:asciz
RO_STR_80A76848_jp = 0x80A76848; // type:asciz
RO_STR_80A76860_jp = 0x80A76860; // type:asciz

// .text

func_80A76920_jp = 0x80A76920; // type:func
func_80A76958_jp = 0x80A76958; // type:func
func_80A769E4_jp = 0x80A769E4; // type:func
func_80A76A30_jp = 0x80A76A30; // type:func
func_80A76B2C_jp = 0x80A76B2C; // type:func
func_80A76B4C_jp = 0x80A76B4C; // type:func
func_80A76C34_jp = 0x80A76C34; // type:func
func_80A76C9C_jp = 0x80A76C9C; // type:func

// .data

_00936BC0_Profile = 0x80A76DD0; //
D_80A76DF4_jp = 0x80A76DF4; //
D_80A76DFC_jp = 0x80A76DFC; //
D_80A76E10_jp = 0x80A76E10; //
D_80A76E1C_jp = 0x80A76E1C; //

// .text

func_80A76E80_jp = 0x80A76E80; // type:func
func_80A76EC4_jp = 0x80A76EC4; // type:func
func_80A76F50_jp = 0x80A76F50; // type:func
func_80A77160_jp = 0x80A77160; // type:func
func_80A77170_jp = 0x80A77170; // type:func
func_80A77190_jp = 0x80A77190; // type:func
func_80A77278_jp = 0x80A77278; // type:func
func_80A772E0_jp = 0x80A772E0; // type:func

// .data

_00937120_Profile = 0x80A77430; //
D_80A77454_jp = 0x80A77454; //
D_80A77460_jp = 0x80A77460; //
D_80A77474_jp = 0x80A77474; //
D_80A77488_jp = 0x80A77488; //
D_80A774C8_jp = 0x80A774C8; //
D_80A77508_jp = 0x80A77508; //
D_FLT_80A77518_jp = 0x80A77518; // type:f32
D_80A77524_jp = 0x80A77524; //
D_80A77530_jp = 0x80A77530; //
D_80A77534_jp = 0x80A77534; //
D_80A7753C_jp = 0x80A7753C; //

// .rodata

RO_STR_80A77550_jp = 0x80A77550; // type:asciz
RO_STR_80A77568_jp = 0x80A77568; // type:asciz

// .text

func_80A77620_jp = 0x80A77620; // type:func
func_80A77710_jp = 0x80A77710; // type:func
func_80A77744_jp = 0x80A77744; // type:func
func_80A777C0_jp = 0x80A777C0; // type:func
func_80A77814_jp = 0x80A77814; // type:func
func_80A77878_jp = 0x80A77878; // type:func
func_80A7790C_jp = 0x80A7790C; // type:func
func_80A77A40_jp = 0x80A77A40; // type:func
func_80A77AB8_jp = 0x80A77AB8; // type:func
func_80A77B34_jp = 0x80A77B34; // type:func
func_80A77BB8_jp = 0x80A77BB8; // type:func
func_80A77C10_jp = 0x80A77C10; // type:func
func_80A77C70_jp = 0x80A77C70; // type:func
func_80A77C90_jp = 0x80A77C90; // type:func
func_80A77D2C_jp = 0x80A77D2C; // type:func
func_80A77D64_jp = 0x80A77D64; // type:func
func_80A77D84_jp = 0x80A77D84; // type:func
func_80A77DE0_jp = 0x80A77DE0; // type:func
func_80A77E40_jp = 0x80A77E40; // type:func
func_80A77EA0_jp = 0x80A77EA0; // type:func
func_80A77F00_jp = 0x80A77F00; // type:func
func_80A77F54_jp = 0x80A77F54; // type:func
func_80A77F94_jp = 0x80A77F94; // type:func
func_80A78020_jp = 0x80A78020; // type:func
func_80A78078_jp = 0x80A78078; // type:func
func_80A780E4_jp = 0x80A780E4; // type:func
func_80A78144_jp = 0x80A78144; // type:func
func_80A78178_jp = 0x80A78178; // type:func
func_80A781C4_jp = 0x80A781C4; // type:func
func_80A78210_jp = 0x80A78210; // type:func
func_80A7823C_jp = 0x80A7823C; // type:func
func_80A78290_jp = 0x80A78290; // type:func
func_80A782C4_jp = 0x80A782C4; // type:func
func_80A78304_jp = 0x80A78304; // type:func
func_80A78374_jp = 0x80A78374; // type:func
func_80A783AC_jp = 0x80A783AC; // type:func
func_80A78630_jp = 0x80A78630; // type:func
func_80A78698_jp = 0x80A78698; // type:func
func_80A78730_jp = 0x80A78730; // type:func
func_80A78804_jp = 0x80A78804; // type:func
func_80A788B4_jp = 0x80A788B4; // type:func
func_80A7892C_jp = 0x80A7892C; // type:func
func_80A78990_jp = 0x80A78990; // type:func
func_80A78A68_jp = 0x80A78A68; // type:func

// .data

_009378C0_Profile = 0x80A78AF0; //
D_80A78B14_jp = 0x80A78B14; //
D_80A78B38_jp = 0x80A78B38; //
D_80A78B8C_jp = 0x80A78B8C; // type:s16
D_80A78B94_jp = 0x80A78B94; // type:s16
D_80A78B9C_jp = 0x80A78B9C; // type:s16
D_FLT_80A78BA0_jp = 0x80A78BA0; // type:f32
D_80A78BA8_jp = 0x80A78BA8; //

// .rodata

RO_FLT_80A78C10_jp = 0x80A78C10; // type:f32
RO_FLT_80A78C14_jp = 0x80A78C14; // type:f32
RO_FLT_80A78C18_jp = 0x80A78C18; // type:f32
RO_FLT_80A78C1C_jp = 0x80A78C1C; // type:f32

// .data

D_80A78DF0_jp = 0x80A78DF0; //
D_80A78E60_jp = 0x80A78E60; //
D_80A78ED0_jp = 0x80A78ED0; //

// .text

func_80A78F40_jp = 0x80A78F40; // type:func
func_80A78F50_jp = 0x80A78F50; // type:func
func_80A78F8C_jp = 0x80A78F8C; // type:func
func_80A78FA4_jp = 0x80A78FA4; // type:func

// .data

D_80A78FC0_jp = 0x80A78FC0; //
D_80A78FD4_jp = 0x80A78FD4; //

// .text

func_80A79050_jp = 0x80A79050; // type:func
func_80A79060_jp = 0x80A79060; // type:func
func_80A7909C_jp = 0x80A7909C; // type:func
func_80A790B4_jp = 0x80A790B4; // type:func

// .data

D_80A790D0_jp = 0x80A790D0; //
D_80A790E4_jp = 0x80A790E4; //

// .text

func_80A79160_jp = 0x80A79160; // type:func
func_80A79170_jp = 0x80A79170; // type:func
func_80A791AC_jp = 0x80A791AC; // type:func
func_80A791C4_jp = 0x80A791C4; // type:func

// .data

D_80A791E0_jp = 0x80A791E0; //
D_80A791F4_jp = 0x80A791F4; //
D_80A79270_jp = 0x80A79270; //
D_80A792E0_jp = 0x80A792E0; //

// .text

func_80A79350_jp = 0x80A79350; // type:func
func_80A79450_jp = 0x80A79450; // type:func
func_80A79594_jp = 0x80A79594; // type:func
func_80A79780_jp = 0x80A79780; // type:func
func_80A797BC_jp = 0x80A797BC; // type:func
func_80A797E8_jp = 0x80A797E8; // type:func
func_80A79824_jp = 0x80A79824; // type:func
func_80A79A34_jp = 0x80A79A34; // type:func
func_80A79A88_jp = 0x80A79A88; // type:func
func_80A79B04_jp = 0x80A79B04; // type:func
func_80A79BD0_jp = 0x80A79BD0; // type:func
func_80A79C10_jp = 0x80A79C10; // type:func
func_80A79C8C_jp = 0x80A79C8C; // type:func
func_80A79D30_jp = 0x80A79D30; // type:func
func_80A79F5C_jp = 0x80A79F5C; // type:func
func_80A79F70_jp = 0x80A79F70; // type:func
func_80A79FC8_jp = 0x80A79FC8; // type:func
func_80A79FDC_jp = 0x80A79FDC; // type:func
func_80A7A068_jp = 0x80A7A068; // type:func
func_80A7A148_jp = 0x80A7A148; // type:func

// .data

D_80A7A2A0_jp = 0x80A7A2A0; //
D_80A7A3A0_jp = 0x80A7A3A0; //
D_80A7A420_jp = 0x80A7A420; //
_009395F0_Profile = 0x80A7A4A0; //
D_80A7A4C4_jp = 0x80A7A4C4; //
D_80A7A4D4_jp = 0x80A7A4D4; //
D_80A7A4D8_jp = 0x80A7A4D8; //

// .rodata

RO_STR_80A7A4F0_jp = 0x80A7A4F0; // type:asciz
RO_STR_80A7A508_jp = 0x80A7A508; // type:asciz
RO_FLT_80A7A520_jp = 0x80A7A520; // type:f32
RO_FLT_80A7A524_jp = 0x80A7A524; // type:f32
RO_FLT_80A7A528_jp = 0x80A7A528; // type:f32

// .data

D_80A7A610_jp = 0x80A7A610; //
D_80A7A61C_jp = 0x80A7A61C; //

// .text

func_80A7A680_jp = 0x80A7A680; // type:func
func_80A7A708_jp = 0x80A7A708; // type:func
func_80A7A748_jp = 0x80A7A748; // type:func
func_80A7A7F0_jp = 0x80A7A7F0; // type:func
func_80A7A82C_jp = 0x80A7A82C; // type:func
func_80A7A914_jp = 0x80A7A914; // type:func
func_80A7AAC4_jp = 0x80A7AAC4; // type:func
func_80A7AB0C_jp = 0x80A7AB0C; // type:func
func_80A7AB50_jp = 0x80A7AB50; // type:func
func_80A7AB90_jp = 0x80A7AB90; // type:func
func_80A7ACAC_jp = 0x80A7ACAC; // type:func
func_80A7AD14_jp = 0x80A7AD14; // type:func
func_80A7B0C4_jp = 0x80A7B0C4; // type:func
func_80A7B164_jp = 0x80A7B164; // type:func

// .data

_0093A920_Profile = 0x80A7B300; //
D_80A7B324_jp = 0x80A7B324; // type:s16
D_80A7B444_jp = 0x80A7B444; //
D_80A7B4D4_jp = 0x80A7B4D4; //
D_80A7B564_jp = 0x80A7B564; //
D_80A7B570_jp = 0x80A7B570; //
D_80A7B57C_jp = 0x80A7B57C; //
D_80A7B588_jp = 0x80A7B588; //
D_80A7B594_jp = 0x80A7B594; //
D_80A7B5A0_jp = 0x80A7B5A0; //
D_80A7B5AC_jp = 0x80A7B5AC; //
D_80A7B5B8_jp = 0x80A7B5B8; //
D_80A7B5C4_jp = 0x80A7B5C4; //
D_80A7B5D0_jp = 0x80A7B5D0; //
D_80A7B5DC_jp = 0x80A7B5DC; //
D_80A7B5E8_jp = 0x80A7B5E8; //
D_80A7B5F4_jp = 0x80A7B5F4; //
D_80A7B600_jp = 0x80A7B600; //
D_80A7B60C_jp = 0x80A7B60C; //
D_80A7B618_jp = 0x80A7B618; //
D_80A7B624_jp = 0x80A7B624; //
D_80A7B630_jp = 0x80A7B630; //
D_80A7B63C_jp = 0x80A7B63C; //
D_80A7B648_jp = 0x80A7B648; //
D_80A7B654_jp = 0x80A7B654; //
D_80A7B660_jp = 0x80A7B660; //
D_80A7B66C_jp = 0x80A7B66C; //
D_80A7B678_jp = 0x80A7B678; //
D_80A7B684_jp = 0x80A7B684; //
D_80A7B690_jp = 0x80A7B690; //
D_80A7B69C_jp = 0x80A7B69C; //
D_80A7B6A8_jp = 0x80A7B6A8; //
D_80A7B6B4_jp = 0x80A7B6B4; //
D_80A7B6C0_jp = 0x80A7B6C0; //
D_80A7B6CC_jp = 0x80A7B6CC; //
D_80A7B6D8_jp = 0x80A7B6D8; //
D_80A7B6E4_jp = 0x80A7B6E4; //
D_80A7B6F0_jp = 0x80A7B6F0; //
D_80A7B6FC_jp = 0x80A7B6FC; //
D_80A7B708_jp = 0x80A7B708; //
D_80A7B798_jp = 0x80A7B798; //
D_80A7B7A8_jp = 0x80A7B7A8; //
D_80A7B7C8_jp = 0x80A7B7C8; //
D_FLT_80A7B858_jp = 0x80A7B858; // type:f32
D_FLT_80A7B870_jp = 0x80A7B870; // type:f32
D_FLT_80A7B888_jp = 0x80A7B888; // type:f32
D_80A7B8A0_jp = 0x80A7B8A0; //

// .rodata

RO_STR_80A7B8B0_jp = 0x80A7B8B0; // type:asciz
RO_STR_80A7B8C4_jp = 0x80A7B8C4; // type:asciz
RO_STR_80A7B8D8_jp = 0x80A7B8D8; // type:asciz
RO_FLT_80A7B8EC_jp = 0x80A7B8EC; // type:f32
RO_FLT_80A7B8F0_jp = 0x80A7B8F0; // type:f32
RO_FLT_80A7B8F4_jp = 0x80A7B8F4; // type:f32
RO_FLT_80A7B8F8_jp = 0x80A7B8F8; // type:f32
RO_FLT_80A7B8FC_jp = 0x80A7B8FC; // type:f32
RO_FLT_80A7B900_jp = 0x80A7B900; // type:f32
RO_FLT_80A7B904_jp = 0x80A7B904; // type:f32
RO_FLT_80A7B908_jp = 0x80A7B908; // type:f32
RO_FLT_80A7B90C_jp = 0x80A7B90C; // type:f32
RO_FLT_80A7B910_jp = 0x80A7B910; // type:f32
RO_FLT_80A7B914_jp = 0x80A7B914; // type:f32

// .text

func_80A7BAD0_jp = 0x80A7BAD0; // type:func
func_80A7BAE0_jp = 0x80A7BAE0; // type:func
func_80A7BB70_jp = 0x80A7BB70; // type:func
func_80A7BB88_jp = 0x80A7BB88; // type:func
func_80A7BB98_jp = 0x80A7BB98; // type:func

// .data

D_80A7BC20_jp = 0x80A7BC20; //
D_80A7BC34_jp = 0x80A7BC34; //

// .rodata

RO_STR_80A7BC80_jp = 0x80A7BC80; // type:asciz

// .data

D_80A7BCE0_jp = 0x80A7BCE0; //
D_80A7BCEC_jp = 0x80A7BCEC; //
D_80A7BD50_jp = 0x80A7BD50; //
D_80A7BD5C_jp = 0x80A7BD5C; //
D_80A7BDC0_jp = 0x80A7BDC0; //
D_80A7BDCC_jp = 0x80A7BDCC; //

// .text

func_80A7BE30_jp = 0x80A7BE30; // type:func
func_80A7BEC4_jp = 0x80A7BEC4; // type:func
func_80A7BF68_jp = 0x80A7BF68; // type:func

// .data

D_80A7C290_jp = 0x80A7C290; //
D_80A7C29C_jp = 0x80A7C29C; //
D_80A7C2B0_jp = 0x80A7C2B0; //

// .text

func_80A7C330_jp = 0x80A7C330; // type:func
func_80A7C3C4_jp = 0x80A7C3C4; // type:func
func_80A7C468_jp = 0x80A7C468; // type:func

// .data

D_80A7C790_jp = 0x80A7C790; //
D_80A7C79C_jp = 0x80A7C79C; //
D_80A7C7B0_jp = 0x80A7C7B0; //

// .text

func_80A7C830_jp = 0x80A7C830; // type:func
func_80A7C8C4_jp = 0x80A7C8C4; // type:func
func_80A7C968_jp = 0x80A7C968; // type:func

// .data

D_80A7CC90_jp = 0x80A7CC90; //
D_80A7CC9C_jp = 0x80A7CC9C; //
D_80A7CCB0_jp = 0x80A7CCB0; //

// .text

func_80A7CD30_jp = 0x80A7CD30; // type:func
func_80A7CDC4_jp = 0x80A7CDC4; // type:func
func_80A7CE68_jp = 0x80A7CE68; // type:func

// .data

D_80A7D190_jp = 0x80A7D190; //
D_80A7D19C_jp = 0x80A7D19C; //
D_80A7D1B0_jp = 0x80A7D1B0; //
D_80A7D230_jp = 0x80A7D230; //
D_80A7D23C_jp = 0x80A7D23C; //
D_80A7D2A0_jp = 0x80A7D2A0; //
D_80A7D2AC_jp = 0x80A7D2AC; //
D_80A7D310_jp = 0x80A7D310; //
D_80A7D31C_jp = 0x80A7D31C; //
D_80A7D380_jp = 0x80A7D380; //
D_80A7D38C_jp = 0x80A7D38C; //
D_80A7D3F0_jp = 0x80A7D3F0; //
D_80A7D3FC_jp = 0x80A7D3FC; //

// .text

func_80A7D460_jp = 0x80A7D460; // type:func
func_80A7D4F4_jp = 0x80A7D4F4; // type:func
func_80A7D598_jp = 0x80A7D598; // type:func

// .data

D_80A7D8C0_jp = 0x80A7D8C0; //
D_80A7D8CC_jp = 0x80A7D8CC; //
D_80A7D8E0_jp = 0x80A7D8E0; //

// .text

func_80A7D960_jp = 0x80A7D960; // type:func
func_80A7D9F4_jp = 0x80A7D9F4; // type:func
func_80A7DA98_jp = 0x80A7DA98; // type:func

// .data

D_80A7DDC0_jp = 0x80A7DDC0; //
D_80A7DDCC_jp = 0x80A7DDCC; //
D_80A7DDE0_jp = 0x80A7DDE0; //

// .text

func_80A7DE60_jp = 0x80A7DE60; // type:func
func_80A7DEF4_jp = 0x80A7DEF4; // type:func
func_80A7DF98_jp = 0x80A7DF98; // type:func

// .data

D_80A7E2C0_jp = 0x80A7E2C0; //
D_80A7E2CC_jp = 0x80A7E2CC; //
D_80A7E2E0_jp = 0x80A7E2E0; //

// .text

func_80A7E360_jp = 0x80A7E360; // type:func
func_80A7E3F4_jp = 0x80A7E3F4; // type:func
func_80A7E498_jp = 0x80A7E498; // type:func

// .data

D_80A7E7C0_jp = 0x80A7E7C0; //
D_80A7E7CC_jp = 0x80A7E7CC; //
D_80A7E7E0_jp = 0x80A7E7E0; //

// .text

func_80A7E860_jp = 0x80A7E860; // type:func
func_80A7E8F4_jp = 0x80A7E8F4; // type:func
func_80A7E998_jp = 0x80A7E998; // type:func

// .data

D_80A7ECC0_jp = 0x80A7ECC0; //
D_80A7ECCC_jp = 0x80A7ECCC; //
D_80A7ECE0_jp = 0x80A7ECE0; //
D_80A7ED60_jp = 0x80A7ED60; //
D_80A7ED6C_jp = 0x80A7ED6C; //
D_80A7EDD0_jp = 0x80A7EDD0; //
D_80A7EDDC_jp = 0x80A7EDDC; //
D_80A7EE40_jp = 0x80A7EE40; //
D_80A7EE4C_jp = 0x80A7EE4C; //
D_80A7EEB0_jp = 0x80A7EEB0; //
D_80A7EEBC_jp = 0x80A7EEBC; //
D_80A7EF20_jp = 0x80A7EF20; //
D_80A7EF2C_jp = 0x80A7EF2C; //
D_80A7EF90_jp = 0x80A7EF90; //
D_80A7EF9C_jp = 0x80A7EF9C; //
D_80A7F000_jp = 0x80A7F000; //
D_80A7F00C_jp = 0x80A7F00C; //
D_80A7F070_jp = 0x80A7F070; //
D_80A7F07C_jp = 0x80A7F07C; //

// .text

func_80A7F0E0_jp = 0x80A7F0E0; // type:func
func_80A7F178_jp = 0x80A7F178; // type:func
func_80A7F230_jp = 0x80A7F230; // type:func
func_80A7F5F0_jp = 0x80A7F5F0; // type:func
func_80A7F648_jp = 0x80A7F648; // type:func

// .data

D_80A7F660_jp = 0x80A7F660; // type:u8
D_80A7F6A4_jp = 0x80A7F6A4; //
D_80A7F6B8_jp = 0x80A7F6B8; //
D_80A7F740_jp = 0x80A7F740; //
D_80A7F74C_jp = 0x80A7F74C; //
D_80A7F7B0_jp = 0x80A7F7B0; //
D_80A7F7BC_jp = 0x80A7F7BC; //
D_80A7F820_jp = 0x80A7F820; //
D_80A7F82C_jp = 0x80A7F82C; //
D_80A7F890_jp = 0x80A7F890; //
D_80A7F89C_jp = 0x80A7F89C; //
D_80A7F900_jp = 0x80A7F900; //
D_80A7F90C_jp = 0x80A7F90C; //

// .text

func_80A7F970_jp = 0x80A7F970; // type:func
func_80A7FA34_jp = 0x80A7FA34; // type:func
func_80A7FAD0_jp = 0x80A7FAD0; // type:func
func_80A7FB1C_jp = 0x80A7FB1C; // type:func
func_80A7FB2C_jp = 0x80A7FB2C; // type:func
func_80A7FBC0_jp = 0x80A7FBC0; // type:func
func_80A7FCDC_jp = 0x80A7FCDC; // type:func
func_80A7FD44_jp = 0x80A7FD44; // type:func
func_80A7FD64_jp = 0x80A7FD64; // type:func
func_80A7FE80_jp = 0x80A7FE80; // type:func

// .data

_0093FC10_Profile = 0x80A7FFC0; //
D_80A7FFE4_jp = 0x80A7FFE4; //
D_80A7FFEC_jp = 0x80A7FFEC; //
D_80A80000_jp = 0x80A80000; //
D_80A80014_jp = 0x80A80014; //
D_80A8001C_jp = 0x80A8001C; //
D_80A80024_jp = 0x80A80024; //
D_80A80028_jp = 0x80A80028; //
D_80A80030_jp = 0x80A80030; //

// .rodata

RO_FLT_80A80040_jp = 0x80A80040; // type:f32

// .text

func_80A800E0_jp = 0x80A800E0; // type:func
func_80A8019C_jp = 0x80A8019C; // type:func
func_80A801C8_jp = 0x80A801C8; // type:func
func_80A80370_jp = 0x80A80370; // type:func
func_80A80440_jp = 0x80A80440; // type:func
func_80A806B8_jp = 0x80A806B8; // type:func
func_80A807C0_jp = 0x80A807C0; // type:func
func_80A80804_jp = 0x80A80804; // type:func
func_80A80A9C_jp = 0x80A80A9C; // type:func
func_80A80C38_jp = 0x80A80C38; // type:func

// .data

_00940380_Profile = 0x80A81210; //
D_80A81234_jp = 0x80A81234; //
D_80A81244_jp = 0x80A81244; //
D_FLT_80A81250_jp = 0x80A81250; // type:f32
D_80A81268_jp = 0x80A81268; //
D_80A81280_jp = 0x80A81280; //
D_80A814A0_jp = 0x80A814A0; //
D_80A81658_jp = 0x80A81658; //
D_80A81688_jp = 0x80A81688; //
D_80A816B8_jp = 0x80A816B8; //
D_80A816C0_jp = 0x80A816C0; //
D_80A816C8_jp = 0x80A816C8; //

// .rodata

RO_FLT_80A816D0_jp = 0x80A816D0; // type:f32
RO_FLT_80A816D4_jp = 0x80A816D4; // type:f32
RO_FLT_80A816D8_jp = 0x80A816D8; // type:f32
RO_FLT_80A816DC_jp = 0x80A816DC; // type:f32
RO_FLT_80A816E0_jp = 0x80A816E0; // type:f32
RO_FLT_80A816E4_jp = 0x80A816E4; // type:f32
RO_FLT_80A816E8_jp = 0x80A816E8; // type:f32
RO_FLT_80A816EC_jp = 0x80A816EC; // type:f32
RO_FLT_80A816F0_jp = 0x80A816F0; // type:f32
RO_FLT_80A816F4_jp = 0x80A816F4; // type:f32
RO_FLT_80A816F8_jp = 0x80A816F8; // type:f32
RO_FLT_80A816FC_jp = 0x80A816FC; // type:f32
RO_FLT_80A81700_jp = 0x80A81700; // type:f32
RO_FLT_80A81704_jp = 0x80A81704; // type:f32
RO_FLT_80A81708_jp = 0x80A81708; // type:f32
RO_FLT_80A8170C_jp = 0x80A8170C; // type:f32

// .data

D_80A81870_jp = 0x80A81870; //
D_80A8187C_jp = 0x80A8187C; //
D_80A818E0_jp = 0x80A818E0; //
D_80A818EC_jp = 0x80A818EC; //

// .text

func_80A81950_jp = 0x80A81950; // type:func
func_80A819E0_jp = 0x80A819E0; // type:func
func_80A81A6C_jp = 0x80A81A6C; // type:func
func_80A81AD0_jp = 0x80A81AD0; // type:func
func_80A81B0C_jp = 0x80A81B0C; // type:func
func_80A81BF4_jp = 0x80A81BF4; // type:func
func_80A81E28_jp = 0x80A81E28; // type:func
func_80A81F60_jp = 0x80A81F60; // type:func
func_80A81F90_jp = 0x80A81F90; // type:func
func_80A81FCC_jp = 0x80A81FCC; // type:func
func_80A8200C_jp = 0x80A8200C; // type:func
func_80A820A8_jp = 0x80A820A8; // type:func
func_80A82204_jp = 0x80A82204; // type:func

// .data

_00941BF0_Profile = 0x80A82430; //
D_80A82454_jp = 0x80A82454; //
D_80A82464_jp = 0x80A82464; // type:u8
D_80A8248C_jp = 0x80A8248C; // type:u8
D_FLT_80A824A0_jp = 0x80A824A0; // type:f32

// .rodata

RO_STR_80A824C0_jp = 0x80A824C0; // type:asciz
RO_STR_80A824D4_jp = 0x80A824D4; // type:asciz
RO_STR_80A824E8_jp = 0x80A824E8; // type:asciz
RO_STR_80A824FC_jp = 0x80A824FC; // type:asciz
RO_FLT_80A82510_jp = 0x80A82510; // type:f32
jtbl_80A82514_jp = 0x80A82514; // type:jtbl
RO_FLT_80A8252C_jp = 0x80A8252C; // type:f32

// .text

func_80A82600_jp = 0x80A82600; // type:func
func_80A82638_jp = 0x80A82638; // type:func
func_80A826C4_jp = 0x80A826C4; // type:func
func_80A82848_jp = 0x80A82848; // type:func
func_80A82858_jp = 0x80A82858; // type:func
func_80A82878_jp = 0x80A82878; // type:func
func_80A82960_jp = 0x80A82960; // type:func
func_80A829C8_jp = 0x80A829C8; // type:func

// .data

_009428A0_Profile = 0x80A82B00; //
D_80A82B24_jp = 0x80A82B24; //
D_80A82B2C_jp = 0x80A82B2C; //
D_80A82B40_jp = 0x80A82B40; //
D_80A82B5C_jp = 0x80A82B5C; //
D_FLT_80A82B64_jp = 0x80A82B64; // type:f32
D_FLT_80A82B6C_jp = 0x80A82B6C; // type:f32
D_80A82B74_jp = 0x80A82B74; //

// .rodata

RO_STR_80A82B80_jp = 0x80A82B80; // type:asciz
RO_STR_80A82B98_jp = 0x80A82B98; // type:asciz

// .data

D_80A82C40_jp = 0x80A82C40; //
D_80A82C4C_jp = 0x80A82C4C; //
D_80A82CB0_jp = 0x80A82CB0; //
D_80A82CBC_jp = 0x80A82CBC; //
D_80A82D20_jp = 0x80A82D20; //
D_80A82D2C_jp = 0x80A82D2C; //
D_80A82D90_jp = 0x80A82D90; //
D_80A82D9C_jp = 0x80A82D9C; //
D_80A82E00_jp = 0x80A82E00; //
D_80A82E0C_jp = 0x80A82E0C; //
D_80A82E70_jp = 0x80A82E70; //
D_80A82E7C_jp = 0x80A82E7C; //
D_80A82EE0_jp = 0x80A82EE0; //
D_80A82EEC_jp = 0x80A82EEC; //
D_80A82F50_jp = 0x80A82F50; //
D_80A82F5C_jp = 0x80A82F5C; //
D_80A82FC0_jp = 0x80A82FC0; //
D_80A82FCC_jp = 0x80A82FCC; //
D_80A83030_jp = 0x80A83030; //
D_80A8303C_jp = 0x80A8303C; //
D_80A830A0_jp = 0x80A830A0; //
D_80A830AC_jp = 0x80A830AC; //
D_80A83110_jp = 0x80A83110; //
D_80A8311C_jp = 0x80A8311C; //
D_80A83180_jp = 0x80A83180; //
D_80A8318C_jp = 0x80A8318C; //
D_80A831F0_jp = 0x80A831F0; //
D_80A831FC_jp = 0x80A831FC; //
D_80A83260_jp = 0x80A83260; //
D_80A8326C_jp = 0x80A8326C; //
D_80A832D0_jp = 0x80A832D0; //
D_80A832DC_jp = 0x80A832DC; //
D_80A83340_jp = 0x80A83340; //
D_80A8334C_jp = 0x80A8334C; //
D_80A833B0_jp = 0x80A833B0; //
D_80A833BC_jp = 0x80A833BC; //
D_80A83420_jp = 0x80A83420; //
D_80A8342C_jp = 0x80A8342C; //
D_80A83490_jp = 0x80A83490; //
D_80A8349C_jp = 0x80A8349C; //
D_80A83500_jp = 0x80A83500; //
D_80A8350C_jp = 0x80A8350C; //
D_80A83570_jp = 0x80A83570; //
D_80A8357C_jp = 0x80A8357C; //
D_80A835E0_jp = 0x80A835E0; //
D_80A835EC_jp = 0x80A835EC; //
D_80A83650_jp = 0x80A83650; //
D_80A8365C_jp = 0x80A8365C; //

// .text

func_80A836C0_jp = 0x80A836C0; // type:func
func_80A83770_jp = 0x80A83770; // type:func
func_80A83780_jp = 0x80A83780; // type:func
func_80A837C4_jp = 0x80A837C4; // type:func
func_80A83930_jp = 0x80A83930; // type:func
func_80A83994_jp = 0x80A83994; // type:func
func_80A83A00_jp = 0x80A83A00; // type:func
func_80A83A24_jp = 0x80A83A24; // type:func
func_80A83D4C_jp = 0x80A83D4C; // type:func
func_80A8401C_jp = 0x80A8401C; // type:func
func_80A8409C_jp = 0x80A8409C; // type:func
func_80A840E8_jp = 0x80A840E8; // type:func
func_80A84480_jp = 0x80A84480; // type:func

// .data

_00943960_Profile = 0x80A845A0; //
D_80A845C4_jp = 0x80A845C4; //
D_80A845D0_jp = 0x80A845D0; //
D_80A845DC_jp = 0x80A845DC; //

// .rodata

RO_FLT_80A845F0_jp = 0x80A845F0; // type:f32
RO_FLT_80A845F4_jp = 0x80A845F4; // type:f32

// .data

D_80A84690_jp = 0x80A84690; //
D_80A8469C_jp = 0x80A8469C; //
D_80A84700_jp = 0x80A84700; //
D_80A8470C_jp = 0x80A8470C; //
D_80A84770_jp = 0x80A84770; //
D_80A8477C_jp = 0x80A8477C; //
D_80A847E0_jp = 0x80A847E0; //
D_80A847EC_jp = 0x80A847EC; //
D_80A84850_jp = 0x80A84850; //
D_80A8485C_jp = 0x80A8485C; //

// .text

func_80A848C0_jp = 0x80A848C0; // type:func
func_80A848D0_jp = 0x80A848D0; // type:func
func_80A8490C_jp = 0x80A8490C; // type:func
func_80A84924_jp = 0x80A84924; // type:func

// .data

D_80A84940_jp = 0x80A84940; //
D_80A84954_jp = 0x80A84954; //

// .text

func_80A849D0_jp = 0x80A849D0; // type:func
func_80A849E0_jp = 0x80A849E0; // type:func
func_80A84A1C_jp = 0x80A84A1C; // type:func
func_80A84A34_jp = 0x80A84A34; // type:func

// .data

D_80A84A50_jp = 0x80A84A50; //
D_80A84A64_jp = 0x80A84A64; //

// .text

func_80A84AE0_jp = 0x80A84AE0; // type:func
func_80A84AF0_jp = 0x80A84AF0; // type:func
func_80A84B2C_jp = 0x80A84B2C; // type:func
func_80A84B44_jp = 0x80A84B44; // type:func

// .data

D_80A84B60_jp = 0x80A84B60; //
D_80A84B74_jp = 0x80A84B74; //

// .text

func_80A84BF0_jp = 0x80A84BF0; // type:func
func_80A84C8C_jp = 0x80A84C8C; // type:func
func_80A84D2C_jp = 0x80A84D2C; // type:func
func_80A84D44_jp = 0x80A84D44; // type:func
func_80A84D7C_jp = 0x80A84D7C; // type:func
func_80A84D9C_jp = 0x80A84D9C; // type:func
func_80A84F9C_jp = 0x80A84F9C; // type:func
func_80A8502C_jp = 0x80A8502C; // type:func
func_80A85060_jp = 0x80A85060; // type:func
func_80A85088_jp = 0x80A85088; // type:func
func_80A8512C_jp = 0x80A8512C; // type:func
func_80A8525C_jp = 0x80A8525C; // type:func
func_80A852C4_jp = 0x80A852C4; // type:func
func_80A85450_jp = 0x80A85450; // type:func

// .data

_00944E90_Profile = 0x80A85630; //
D_80A85654_jp = 0x80A85654; //
D_80A85658_jp = 0x80A85658; //
D_80A8566C_jp = 0x80A8566C; //
D_80A85698_jp = 0x80A85698; //
D_FLT_80A856A0_jp = 0x80A856A0; // type:f32
D_FLT_80A856AC_jp = 0x80A856AC; // type:f32
D_80A856B4_jp = 0x80A856B4; //
D_FLT_80A856C0_jp = 0x80A856C0; // type:f32
D_FLT_80A856CC_jp = 0x80A856CC; // type:f32
D_80A856D8_jp = 0x80A856D8; // type:u8
D_80A85700_jp = 0x80A85700; // type:u8

// .rodata

RO_STR_80A85720_jp = 0x80A85720; // type:asciz
RO_STR_80A8573C_jp = 0x80A8573C; // type:asciz
RO_STR_80A85758_jp = 0x80A85758; // type:asciz

// .bss

B_80A85780_jp = 0x80A85780; //

// .text

func_80A85880_jp = 0x80A85880; // type:func
func_80A859B4_jp = 0x80A859B4; // type:func
func_80A85AD0_jp = 0x80A85AD0; // type:func
func_80A85B68_jp = 0x80A85B68; // type:func
func_80A85B78_jp = 0x80A85B78; // type:func
func_80A85BAC_jp = 0x80A85BAC; // type:func
func_80A85C60_jp = 0x80A85C60; // type:func
func_80A85C70_jp = 0x80A85C70; // type:func
func_80A85CC0_jp = 0x80A85CC0; // type:func
func_80A85E00_jp = 0x80A85E00; // type:func
func_80A85E80_jp = 0x80A85E80; // type:func
func_80A85EBC_jp = 0x80A85EBC; // type:func
func_80A85F1C_jp = 0x80A85F1C; // type:func
func_80A85F48_jp = 0x80A85F48; // type:func
func_80A85F74_jp = 0x80A85F74; // type:func
func_80A85FA8_jp = 0x80A85FA8; // type:func
func_80A86074_jp = 0x80A86074; // type:func
func_80A86084_jp = 0x80A86084; // type:func
func_80A860E0_jp = 0x80A860E0; // type:func
func_80A8611C_jp = 0x80A8611C; // type:func
func_80A8612C_jp = 0x80A8612C; // type:func
func_80A8624C_jp = 0x80A8624C; // type:func
func_80A8629C_jp = 0x80A8629C; // type:func
func_80A86300_jp = 0x80A86300; // type:func
func_80A8632C_jp = 0x80A8632C; // type:func
func_80A863BC_jp = 0x80A863BC; // type:func
func_80A863CC_jp = 0x80A863CC; // type:func

// .data

_00945B10_Profile = 0x80A864B0; //
D_80A864D4_jp = 0x80A864D4; //
D_80A864DC_jp = 0x80A864DC; //
D_80A864E4_jp = 0x80A864E4; //
D_80A864F4_jp = 0x80A864F4; //
D_80A86504_jp = 0x80A86504; //

// .rodata

RO_STR_80A86510_jp = 0x80A86510; // type:asciz
RO_FLT_80A86524_jp = 0x80A86524; // type:f32
RO_FLT_80A86528_jp = 0x80A86528; // type:f32
RO_FLT_80A8652C_jp = 0x80A8652C; // type:f32
RO_FLT_80A86530_jp = 0x80A86530; // type:f32
RO_FLT_80A86534_jp = 0x80A86534; // type:f32
RO_FLT_80A86538_jp = 0x80A86538; // type:f32
RO_FLT_80A8653C_jp = 0x80A8653C; // type:f32
RO_FLT_80A86540_jp = 0x80A86540; // type:f32

// .text

func_80A86670_jp = 0x80A86670; // type:func
func_80A86738_jp = 0x80A86738; // type:func
func_80A8675C_jp = 0x80A8675C; // type:func
func_80A86788_jp = 0x80A86788; // type:func
func_80A867B4_jp = 0x80A867B4; // type:func
func_80A86850_jp = 0x80A86850; // type:func
func_80A8687C_jp = 0x80A8687C; // type:func
func_80A8689C_jp = 0x80A8689C; // type:func
func_80A868F4_jp = 0x80A868F4; // type:func
func_80A86934_jp = 0x80A86934; // type:func
func_80A86980_jp = 0x80A86980; // type:func
func_80A869C0_jp = 0x80A869C0; // type:func
func_80A86A3C_jp = 0x80A86A3C; // type:func
func_80A86AD0_jp = 0x80A86AD0; // type:func
func_80A86B24_jp = 0x80A86B24; // type:func
func_80A86B70_jp = 0x80A86B70; // type:func
func_80A86C20_jp = 0x80A86C20; // type:func
func_80A86C84_jp = 0x80A86C84; // type:func
func_80A86CEC_jp = 0x80A86CEC; // type:func
func_80A86D28_jp = 0x80A86D28; // type:func
func_80A86D60_jp = 0x80A86D60; // type:func
func_80A86DAC_jp = 0x80A86DAC; // type:func
func_80A86DF4_jp = 0x80A86DF4; // type:func
func_80A86E80_jp = 0x80A86E80; // type:func
func_80A86F2C_jp = 0x80A86F2C; // type:func
func_80A86F74_jp = 0x80A86F74; // type:func
func_80A86FB4_jp = 0x80A86FB4; // type:func
func_80A87020_jp = 0x80A87020; // type:func
func_80A87068_jp = 0x80A87068; // type:func

// .data

_00946900_Profile = 0x80A870A0; //
D_80A870C4_jp = 0x80A870C4; //
D_80A870E0_jp = 0x80A870E0; //
D_80A870E4_jp = 0x80A870E4; //
D_80A870FC_jp = 0x80A870FC; // type:u8
D_80A8712C_jp = 0x80A8712C; //
D_80A87140_jp = 0x80A87140; //
D_80A87154_jp = 0x80A87154; //

// .text

func_80A87260_jp = 0x80A87260; // type:func
func_80A87368_jp = 0x80A87368; // type:func
func_80A8738C_jp = 0x80A8738C; // type:func
func_80A873E0_jp = 0x80A873E0; // type:func
func_80A8740C_jp = 0x80A8740C; // type:func
func_80A874A8_jp = 0x80A874A8; // type:func
func_80A87598_jp = 0x80A87598; // type:func
func_80A875E0_jp = 0x80A875E0; // type:func
func_80A8767C_jp = 0x80A8767C; // type:func
func_80A876C8_jp = 0x80A876C8; // type:func
func_80A87708_jp = 0x80A87708; // type:func
func_80A87784_jp = 0x80A87784; // type:func
func_80A877C0_jp = 0x80A877C0; // type:func
func_80A8780C_jp = 0x80A8780C; // type:func
func_80A87858_jp = 0x80A87858; // type:func
func_80A8789C_jp = 0x80A8789C; // type:func
func_80A879A8_jp = 0x80A879A8; // type:func
func_80A879E8_jp = 0x80A879E8; // type:func
func_80A87A78_jp = 0x80A87A78; // type:func
func_80A87B40_jp = 0x80A87B40; // type:func
func_80A87B7C_jp = 0x80A87B7C; // type:func
func_80A87C08_jp = 0x80A87C08; // type:func
func_80A87C38_jp = 0x80A87C38; // type:func
func_80A87C8C_jp = 0x80A87C8C; // type:func
func_80A87DCC_jp = 0x80A87DCC; // type:func
func_80A87E68_jp = 0x80A87E68; // type:func
func_80A87F10_jp = 0x80A87F10; // type:func
func_80A87F4C_jp = 0x80A87F4C; // type:func
func_80A87F84_jp = 0x80A87F84; // type:func
func_80A88010_jp = 0x80A88010; // type:func
func_80A88058_jp = 0x80A88058; // type:func
func_80A88084_jp = 0x80A88084; // type:func
func_80A880D4_jp = 0x80A880D4; // type:func
func_80A88128_jp = 0x80A88128; // type:func
func_80A88160_jp = 0x80A88160; // type:func
func_80A881B8_jp = 0x80A881B8; // type:func
func_80A881E8_jp = 0x80A881E8; // type:func
func_80A88238_jp = 0x80A88238; // type:func
func_80A88284_jp = 0x80A88284; // type:func
func_80A8832C_jp = 0x80A8832C; // type:func
func_80A88374_jp = 0x80A88374; // type:func
func_80A883B4_jp = 0x80A883B4; // type:func
func_80A88420_jp = 0x80A88420; // type:func
func_80A88468_jp = 0x80A88468; // type:func

// .data

_009474F0_Profile = 0x80A884A0; //
D_80A884C4_jp = 0x80A884C4; //
D_80A884E0_jp = 0x80A884E0; //
D_80A884F8_jp = 0x80A884F8; // type:u8
D_80A884FA_jp = 0x80A884FA; // type:u8
D_80A884FC_jp = 0x80A884FC; //
D_80A88510_jp = 0x80A88510; // type:u8
D_80A88514_jp = 0x80A88514; // type:u8
D_80A8854C_jp = 0x80A8854C; //
D_80A88574_jp = 0x80A88574; //
D_80A885A4_jp = 0x80A885A4; //

// .rodata

RO_FLT_80A885B0_jp = 0x80A885B0; // type:f32
RO_FLT_80A885B4_jp = 0x80A885B4; // type:f32
RO_FLT_80A885B8_jp = 0x80A885B8; // type:f32

// .bss

B_80A885C0_jp = 0x80A885C0; // type:s16

// .text

func_80A887A0_jp = 0x80A887A0; // type:func
func_80A888AC_jp = 0x80A888AC; // type:func
func_80A888D0_jp = 0x80A888D0; // type:func
func_80A88944_jp = 0x80A88944; // type:func
func_80A88970_jp = 0x80A88970; // type:func
func_80A88A10_jp = 0x80A88A10; // type:func
func_80A88A5C_jp = 0x80A88A5C; // type:func
func_80A88AC0_jp = 0x80A88AC0; // type:func
func_80A88AF8_jp = 0x80A88AF8; // type:func
func_80A88B44_jp = 0x80A88B44; // type:func
func_80A88B7C_jp = 0x80A88B7C; // type:func
func_80A88BC8_jp = 0x80A88BC8; // type:func
func_80A88C08_jp = 0x80A88C08; // type:func
func_80A88C84_jp = 0x80A88C84; // type:func
func_80A88D7C_jp = 0x80A88D7C; // type:func
func_80A88DF0_jp = 0x80A88DF0; // type:func
func_80A88E64_jp = 0x80A88E64; // type:func
func_80A88EF0_jp = 0x80A88EF0; // type:func
func_80A88F2C_jp = 0x80A88F2C; // type:func
func_80A88FC4_jp = 0x80A88FC4; // type:func
func_80A89018_jp = 0x80A89018; // type:func
func_80A89058_jp = 0x80A89058; // type:func
func_80A890C0_jp = 0x80A890C0; // type:func
func_80A8916C_jp = 0x80A8916C; // type:func
func_80A891CC_jp = 0x80A891CC; // type:func
func_80A8922C_jp = 0x80A8922C; // type:func
func_80A8927C_jp = 0x80A8927C; // type:func
func_80A892F4_jp = 0x80A892F4; // type:func
func_80A89364_jp = 0x80A89364; // type:func
func_80A893FC_jp = 0x80A893FC; // type:func
func_80A89480_jp = 0x80A89480; // type:func
func_80A89510_jp = 0x80A89510; // type:func
func_80A8954C_jp = 0x80A8954C; // type:func
func_80A895C4_jp = 0x80A895C4; // type:func
func_80A8960C_jp = 0x80A8960C; // type:func
func_80A8964C_jp = 0x80A8964C; // type:func
func_80A896EC_jp = 0x80A896EC; // type:func
func_80A89734_jp = 0x80A89734; // type:func

// .data

_00948A20_Profile = 0x80A89760; //
D_80A89784_jp = 0x80A89784; //
D_80A897A0_jp = 0x80A897A0; //
D_80A897B8_jp = 0x80A897B8; // type:u8
D_80A897BC_jp = 0x80A897BC; // type:u8
D_80A897C0_jp = 0x80A897C0; //
D_80A89804_jp = 0x80A89804; //

// .text

func_80A89960_jp = 0x80A89960; // type:func
func_80A89B8C_jp = 0x80A89B8C; // type:func
func_80A89BB0_jp = 0x80A89BB0; // type:func
func_80A89C28_jp = 0x80A89C28; // type:func
func_80A89C54_jp = 0x80A89C54; // type:func
func_80A89CA0_jp = 0x80A89CA0; // type:func
func_80A89D14_jp = 0x80A89D14; // type:func
func_80A89D70_jp = 0x80A89D70; // type:func
func_80A89D8C_jp = 0x80A89D8C; // type:func
func_80A89E3C_jp = 0x80A89E3C; // type:func
func_80A89F60_jp = 0x80A89F60; // type:func
func_80A8A0D4_jp = 0x80A8A0D4; // type:func
func_80A8A1A4_jp = 0x80A8A1A4; // type:func
func_80A8A228_jp = 0x80A8A228; // type:func
func_80A8A370_jp = 0x80A8A370; // type:func
func_80A8A3EC_jp = 0x80A8A3EC; // type:func
func_80A8A444_jp = 0x80A8A444; // type:func
func_80A8A4CC_jp = 0x80A8A4CC; // type:func
func_80A8A518_jp = 0x80A8A518; // type:func
func_80A8A58C_jp = 0x80A8A58C; // type:func
func_80A8A5D8_jp = 0x80A8A5D8; // type:func
func_80A8A644_jp = 0x80A8A644; // type:func
func_80A8A6DC_jp = 0x80A8A6DC; // type:func
func_80A8A7B0_jp = 0x80A8A7B0; // type:func
func_80A8A834_jp = 0x80A8A834; // type:func
func_80A8A900_jp = 0x80A8A900; // type:func
func_80A8AB48_jp = 0x80A8AB48; // type:func
func_80A8ACA4_jp = 0x80A8ACA4; // type:func
func_80A8AD34_jp = 0x80A8AD34; // type:func
func_80A8AD68_jp = 0x80A8AD68; // type:func
func_80A8AD94_jp = 0x80A8AD94; // type:func
func_80A8AE2C_jp = 0x80A8AE2C; // type:func
func_80A8AE74_jp = 0x80A8AE74; // type:func
func_80A8AEB4_jp = 0x80A8AEB4; // type:func
func_80A8AF20_jp = 0x80A8AF20; // type:func
func_80A8AF68_jp = 0x80A8AF68; // type:func

// .data

_00949BE0_Profile = 0x80A8B000; //
D_80A8B024_jp = 0x80A8B024; //
D_80A8B040_jp = 0x80A8B040; //
D_80A8B05C_jp = 0x80A8B05C; // type:u8
D_80A8B060_jp = 0x80A8B060; // type:u8
D_80A8B064_jp = 0x80A8B064; //
D_80A8B080_jp = 0x80A8B080; // type:u8
D_80A8B0BC_jp = 0x80A8B0BC; //

// .text

func_80A8B230_jp = 0x80A8B230; // type:func
func_80A8B330_jp = 0x80A8B330; // type:func
func_80A8B3C8_jp = 0x80A8B3C8; // type:func
func_80A8B430_jp = 0x80A8B430; // type:func
func_80A8B5DC_jp = 0x80A8B5DC; // type:func
func_80A8B61C_jp = 0x80A8B61C; // type:func
func_80A8B754_jp = 0x80A8B754; // type:func
func_80A8B7E8_jp = 0x80A8B7E8; // type:func
func_80A8B8D0_jp = 0x80A8B8D0; // type:func
func_80A8B938_jp = 0x80A8B938; // type:func
func_80A8B9B0_jp = 0x80A8B9B0; // type:func

// .data

_0094B4B0_Profile = 0x80A8BC50; //
D_80A8BC74_jp = 0x80A8BC74; //
D_80A8BC84_jp = 0x80A8BC84; //
D_80A8BCAC_jp = 0x80A8BCAC; //

// .text

func_80A8BD50_jp = 0x80A8BD50; // type:func
func_80A8BD60_jp = 0x80A8BD60; // type:func
func_80A8BDA8_jp = 0x80A8BDA8; // type:func
func_80A8BF30_jp = 0x80A8BF30; // type:func
func_80A8C3EC_jp = 0x80A8C3EC; // type:func
func_80A8C658_jp = 0x80A8C658; // type:func
func_80A8C67C_jp = 0x80A8C67C; // type:func

// .data

D_80A8C700_jp = 0x80A8C700; //
D_80A8C900_jp = 0x80A8C900; //
D_80A8CB00_jp = 0x80A8CB00; //
D_80A8CD00_jp = 0x80A8CD00; //
D_80A8CF00_jp = 0x80A8CF00; //
D_80A8D100_jp = 0x80A8D100; //
D_80A8D300_jp = 0x80A8D300; //
D_80A8D500_jp = 0x80A8D500; //
D_80A8D508_jp = 0x80A8D508; //
D_80A8D538_jp = 0x80A8D538; //
D_80A8D54C_jp = 0x80A8D54C; //
D_80A8D560_jp = 0x80A8D560; //

// .rodata

RO_STR_80A8D5B0_jp = 0x80A8D5B0; // type:asciz
RO_FLT_80A8D5C4_jp = 0x80A8D5C4; // type:f32

// .text

func_80A8D6A0_jp = 0x80A8D6A0; // type:func
func_80A8D70C_jp = 0x80A8D70C; // type:func
func_80A8D740_jp = 0x80A8D740; // type:func
func_80A8D810_jp = 0x80A8D810; // type:func
func_80A8D8F8_jp = 0x80A8D8F8; // type:func
func_80A8D940_jp = 0x80A8D940; // type:func
func_80A8D9D8_jp = 0x80A8D9D8; // type:func
func_80A8DA20_jp = 0x80A8DA20; // type:func
func_80A8DA7C_jp = 0x80A8DA7C; // type:func
func_80A8DB18_jp = 0x80A8DB18; // type:func
func_80A8DBAC_jp = 0x80A8DBAC; // type:func
func_80A8DBE8_jp = 0x80A8DBE8; // type:func
func_80A8DC90_jp = 0x80A8DC90; // type:func
func_80A8DCF8_jp = 0x80A8DCF8; // type:func
func_80A8DD3C_jp = 0x80A8DD3C; // type:func
func_80A8DDE4_jp = 0x80A8DDE4; // type:func
func_80A8DE0C_jp = 0x80A8DE0C; // type:func
func_80A8DE30_jp = 0x80A8DE30; // type:func
func_80A8DECC_jp = 0x80A8DECC; // type:func
func_80A8DFF8_jp = 0x80A8DFF8; // type:func
func_80A8E044_jp = 0x80A8E044; // type:func
func_80A8E0FC_jp = 0x80A8E0FC; // type:func
func_80A8E11C_jp = 0x80A8E11C; // type:func
func_80A8E21C_jp = 0x80A8E21C; // type:func
func_80A8E288_jp = 0x80A8E288; // type:func
func_80A8E348_jp = 0x80A8E348; // type:func
func_80A8E3F8_jp = 0x80A8E3F8; // type:func
func_80A8E480_jp = 0x80A8E480; // type:func
func_80A8E54C_jp = 0x80A8E54C; // type:func
func_80A8E584_jp = 0x80A8E584; // type:func
func_80A8E5DC_jp = 0x80A8E5DC; // type:func
func_80A8E63C_jp = 0x80A8E63C; // type:func
func_80A8E6E4_jp = 0x80A8E6E4; // type:func
func_80A8E730_jp = 0x80A8E730; // type:func
func_80A8E770_jp = 0x80A8E770; // type:func
func_80A8E870_jp = 0x80A8E870; // type:func
func_80A8E8B4_jp = 0x80A8E8B4; // type:func
func_80A8E968_jp = 0x80A8E968; // type:func
func_80A8E9AC_jp = 0x80A8E9AC; // type:func
func_80A8E9F0_jp = 0x80A8E9F0; // type:func
func_80A8EA44_jp = 0x80A8EA44; // type:func

// .data

_0094D920_Profile = 0x80A8EAE0; //
D_80A8EB04_jp = 0x80A8EB04; //
D_80A8EB14_jp = 0x80A8EB14; // type:u16
D_80A8EB1C_jp = 0x80A8EB1C; //
D_80A8EB40_jp = 0x80A8EB40; //
D_80A8EB4C_jp = 0x80A8EB4C; //
D_80A8EB50_jp = 0x80A8EB50; //
D_80A8EB58_jp = 0x80A8EB58; // type:s16
D_80A8EB64_jp = 0x80A8EB64; // type:s16
D_80A8EB70_jp = 0x80A8EB70; // type:u8
D_80A8EB78_jp = 0x80A8EB78; // type:s16
D_80A8EB8C_jp = 0x80A8EB8C; // type:s16
D_80A8EBA0_jp = 0x80A8EBA0; // type:u8
D_80A8EBAC_jp = 0x80A8EBAC; // type:s16
D_80A8EBB4_jp = 0x80A8EBB4; // type:s16
D_80A8EBBC_jp = 0x80A8EBBC; // type:u8
D_80A8ECA4_jp = 0x80A8ECA4; //

// .rodata

jtbl_80A8ECE0_jp = 0x80A8ECE0; // type:jtbl

// .text

func_80A8EEF0_jp = 0x80A8EEF0; // type:func
func_80A8EF30_jp = 0x80A8EF30; // type:func
func_80A8EFBC_jp = 0x80A8EFBC; // type:func
func_80A8EFCC_jp = 0x80A8EFCC; // type:func
func_80A8EFEC_jp = 0x80A8EFEC; // type:func
func_80A8F0D4_jp = 0x80A8F0D4; // type:func
func_80A8F13C_jp = 0x80A8F13C; // type:func

// .data

_0094F170_Profile = 0x80A8F270; //
D_80A8F294_jp = 0x80A8F294; //
D_80A8F298_jp = 0x80A8F298; //

// .text

func_80A8F2F0_jp = 0x80A8F2F0; // type:func
func_80A8F340_jp = 0x80A8F340; // type:func
func_80A8F3CC_jp = 0x80A8F3CC; // type:func
func_80A8F418_jp = 0x80A8F418; // type:func
func_80A8F428_jp = 0x80A8F428; // type:func
func_80A8F448_jp = 0x80A8F448; // type:func
func_80A8F530_jp = 0x80A8F530; // type:func
func_80A8F598_jp = 0x80A8F598; // type:func

// .data

_0094F570_Profile = 0x80A8F6E0; //
D_80A8F704_jp = 0x80A8F704; //
D_80A8F714_jp = 0x80A8F714; //
D_80A8F728_jp = 0x80A8F728; //
D_80A8F72C_jp = 0x80A8F72C; //

// .text

func_80A8F7A0_jp = 0x80A8F7A0; // type:func
func_80A8F7B0_jp = 0x80A8F7B0; // type:func
func_80A8F7F8_jp = 0x80A8F7F8; // type:func
func_80A8F810_jp = 0x80A8F810; // type:func

// .data

D_80A8F820_jp = 0x80A8F820; //
D_80A8F834_jp = 0x80A8F834; //

// .text

func_80A8F8B0_jp = 0x80A8F8B0; // type:func
func_80A8F8C0_jp = 0x80A8F8C0; // type:func
func_80A8F908_jp = 0x80A8F908; // type:func
func_80A8F920_jp = 0x80A8F920; // type:func

// .data

D_80A8F930_jp = 0x80A8F930; //
D_80A8F944_jp = 0x80A8F944; //

// .text

func_80A8F9C0_jp = 0x80A8F9C0; // type:func
func_80A8F9D0_jp = 0x80A8F9D0; // type:func
func_80A8FA0C_jp = 0x80A8FA0C; // type:func
func_80A8FA24_jp = 0x80A8FA24; // type:func

// .data

D_80A8FA40_jp = 0x80A8FA40; //
D_80A8FA54_jp = 0x80A8FA54; //

// .text

func_80A8FAD0_jp = 0x80A8FAD0; // type:func
func_80A8FAE0_jp = 0x80A8FAE0; // type:func
func_80A8FB28_jp = 0x80A8FB28; // type:func
func_80A8FB40_jp = 0x80A8FB40; // type:func

// .data

D_80A8FB50_jp = 0x80A8FB50; //
D_80A8FB64_jp = 0x80A8FB64; //

// .text

func_80A8FBE0_jp = 0x80A8FBE0; // type:func
func_80A8FBF0_jp = 0x80A8FBF0; // type:func
func_80A8FC2C_jp = 0x80A8FC2C; // type:func
func_80A8FC44_jp = 0x80A8FC44; // type:func

// .data

D_80A8FC60_jp = 0x80A8FC60; //
D_80A8FC74_jp = 0x80A8FC74; //

// .text

func_80A8FCF0_jp = 0x80A8FCF0; // type:func
func_80A8FD4C_jp = 0x80A8FD4C; // type:func
func_80A8FDE0_jp = 0x80A8FDE0; // type:func
func_80A8FE28_jp = 0x80A8FE28; // type:func
func_80A8FE38_jp = 0x80A8FE38; // type:func
func_80A8FEA8_jp = 0x80A8FEA8; // type:func
func_80A8FECC_jp = 0x80A8FECC; // type:func
func_80A8FF08_jp = 0x80A8FF08; // type:func
func_80A8FF2C_jp = 0x80A8FF2C; // type:func
func_80A8FFEC_jp = 0x80A8FFEC; // type:func
func_80A90124_jp = 0x80A90124; // type:func
func_80A902CC_jp = 0x80A902CC; // type:func
func_80A90334_jp = 0x80A90334; // type:func
func_80A90530_jp = 0x80A90530; // type:func
func_80A90540_jp = 0x80A90540; // type:func
func_80A90560_jp = 0x80A90560; // type:func
func_80A90648_jp = 0x80A90648; // type:func
func_80A906B0_jp = 0x80A906B0; // type:func

// .data

_0094FF70_Profile = 0x80A90800; //
D_80A90824_jp = 0x80A90824; //
D_80A9082C_jp = 0x80A9082C; //
D_80A90840_jp = 0x80A90840; //
D_80A90854_jp = 0x80A90854; //
D_80A9085C_jp = 0x80A9085C; //
D_80A9089C_jp = 0x80A9089C; //
D_80A908DC_jp = 0x80A908DC; //
D_FLT_80A908EC_jp = 0x80A908EC; // type:f32
D_80A908F8_jp = 0x80A908F8; //
D_80A90904_jp = 0x80A90904; //
D_80A90908_jp = 0x80A90908; //
D_80A90910_jp = 0x80A90910; //

// .rodata

RO_STR_80A90920_jp = 0x80A90920; // type:asciz
RO_STR_80A90938_jp = 0x80A90938; // type:asciz
jtbl_80A90950_jp = 0x80A90950; // type:jtbl

// .bss

B_80A909D0_jp = 0x80A909D0; //

// .text

func_80A90B70_jp = 0x80A90B70; // type:func
func_80A90B80_jp = 0x80A90B80; // type:func
func_80A90B90_jp = 0x80A90B90; // type:func
func_80A90CAC_jp = 0x80A90CAC; // type:func
func_80A90CE0_jp = 0x80A90CE0; // type:func
func_80A90D14_jp = 0x80A90D14; // type:func
func_80A90D4C_jp = 0x80A90D4C; // type:func
func_80A90DCC_jp = 0x80A90DCC; // type:func
func_80A90EB4_jp = 0x80A90EB4; // type:func
func_80A90F4C_jp = 0x80A90F4C; // type:func
func_80A90F80_jp = 0x80A90F80; // type:func
func_80A9101C_jp = 0x80A9101C; // type:func
func_80A9106C_jp = 0x80A9106C; // type:func
func_80A912A8_jp = 0x80A912A8; // type:func
func_80A91388_jp = 0x80A91388; // type:func
func_80A9140C_jp = 0x80A9140C; // type:func
func_80A914D0_jp = 0x80A914D0; // type:func

// .data

D_80A91550_jp = 0x80A91550; //
D_80A91588_jp = 0x80A91588; //
D_80A9158C_jp = 0x80A9158C; //
D_80A9159C_jp = 0x80A9159C; // type:s16
D_80A91630_jp = 0x80A91630; //
D_80A91640_jp = 0x80A91640; //
_00950DE0_Profile = 0x80A916A0; //
D_80A916C4_jp = 0x80A916C4; //

// .rodata

RO_STR_80A916D0_jp = 0x80A916D0; // type:asciz
RO_FLT_80A916E4_jp = 0x80A916E4; // type:f32
RO_FLT_80A916E8_jp = 0x80A916E8; // type:f32
RO_FLT_80A916EC_jp = 0x80A916EC; // type:f32

// .text

func_80A91800_jp = 0x80A91800; // type:func
func_80A91874_jp = 0x80A91874; // type:func
func_80A918A0_jp = 0x80A918A0; // type:func
func_80A918C4_jp = 0x80A918C4; // type:func
func_80A919E8_jp = 0x80A919E8; // type:func

// .data

_00951A70_Profile = 0x80A91A10; //
D_80A91A34_jp = 0x80A91A34; //

// .rodata

RO_FLT_80A91A40_jp = 0x80A91A40; // type:f32
RO_FLT_80A91A44_jp = 0x80A91A44; // type:f32
RO_FLT_80A91A48_jp = 0x80A91A48; // type:f32

// .text

func_80A91AA0_jp = 0x80A91AA0; // type:func
func_80A91BA8_jp = 0x80A91BA8; // type:func
func_80A91BCC_jp = 0x80A91BCC; // type:func
func_80A91C40_jp = 0x80A91C40; // type:func
func_80A91C6C_jp = 0x80A91C6C; // type:func
func_80A91D08_jp = 0x80A91D08; // type:func
func_80A91D6C_jp = 0x80A91D6C; // type:func
func_80A91DB4_jp = 0x80A91DB4; // type:func
func_80A91E4C_jp = 0x80A91E4C; // type:func
func_80A91E98_jp = 0x80A91E98; // type:func
func_80A91ED8_jp = 0x80A91ED8; // type:func
func_80A91F54_jp = 0x80A91F54; // type:func
func_80A92088_jp = 0x80A92088; // type:func
func_80A920C4_jp = 0x80A920C4; // type:func
func_80A920FC_jp = 0x80A920FC; // type:func
func_80A9215C_jp = 0x80A9215C; // type:func
func_80A921FC_jp = 0x80A921FC; // type:func
func_80A92244_jp = 0x80A92244; // type:func
func_80A92284_jp = 0x80A92284; // type:func
func_80A922F0_jp = 0x80A922F0; // type:func
func_80A92338_jp = 0x80A92338; // type:func

// .data

_00951D10_Profile = 0x80A92370; //
D_80A92394_jp = 0x80A92394; //
D_80A923B0_jp = 0x80A923B0; //
D_80A923C8_jp = 0x80A923C8; //
D_80A923D0_jp = 0x80A923D0; // type:u8
D_80A923DC_jp = 0x80A923DC; //
D_80A923E4_jp = 0x80A923E4; //
D_80A923EC_jp = 0x80A923EC; //

// .text

func_80A924C0_jp = 0x80A924C0; // type:func
func_80A925B4_jp = 0x80A925B4; // type:func
func_80A925D8_jp = 0x80A925D8; // type:func
func_80A92644_jp = 0x80A92644; // type:func
func_80A92670_jp = 0x80A92670; // type:func
func_80A9270C_jp = 0x80A9270C; // type:func
func_80A927A0_jp = 0x80A927A0; // type:func
func_80A92838_jp = 0x80A92838; // type:func
func_80A92884_jp = 0x80A92884; // type:func
func_80A92924_jp = 0x80A92924; // type:func
func_80A929FC_jp = 0x80A929FC; // type:func
func_80A92AC4_jp = 0x80A92AC4; // type:func
func_80A92E20_jp = 0x80A92E20; // type:func
func_80A92E98_jp = 0x80A92E98; // type:func
func_80A92F00_jp = 0x80A92F00; // type:func
func_80A9306C_jp = 0x80A9306C; // type:func
func_80A930A4_jp = 0x80A930A4; // type:func
func_80A93144_jp = 0x80A93144; // type:func
func_80A93164_jp = 0x80A93164; // type:func
func_80A93184_jp = 0x80A93184; // type:func
func_80A931A4_jp = 0x80A931A4; // type:func
func_80A93244_jp = 0x80A93244; // type:func
func_80A9328C_jp = 0x80A9328C; // type:func
func_80A932CC_jp = 0x80A932CC; // type:func
func_80A93338_jp = 0x80A93338; // type:func
func_80A93380_jp = 0x80A93380; // type:func

// .data

_00952730_Profile = 0x80A933B0; //
D_80A933D4_jp = 0x80A933D4; //
D_80A933F0_jp = 0x80A933F0; //
D_80A93408_jp = 0x80A93408; //
D_80A93420_jp = 0x80A93420; // type:u8
D_80A93434_jp = 0x80A93434; //
D_80A93440_jp = 0x80A93440; //
D_80A93454_jp = 0x80A93454; //

// .rodata

RO_FLT_80A93460_jp = 0x80A93460; // type:f32
RO_FLT_80A93464_jp = 0x80A93464; // type:f32

// .text

func_80A93570_jp = 0x80A93570; // type:func
func_80A93604_jp = 0x80A93604; // type:func
func_80A9369C_jp = 0x80A9369C; // type:func
func_80A936AC_jp = 0x80A936AC; // type:func
func_80A936BC_jp = 0x80A936BC; // type:func
func_80A9373C_jp = 0x80A9373C; // type:func
func_80A93870_jp = 0x80A93870; // type:func
func_80A938D8_jp = 0x80A938D8; // type:func

// .data

_009537E0_Profile = 0x80A93A70; //
D_80A93A94_jp = 0x80A93A94; //
D_80A93A9C_jp = 0x80A93A9C; //
D_80A93AB0_jp = 0x80A93AB0; //
D_80A93AB4_jp = 0x80A93AB4; //
D_80A93AD4_jp = 0x80A93AD4; //
D_80A93B70_jp = 0x80A93B70; //
D_80A93BE0_jp = 0x80A93BE0; //
D_80A93C50_jp = 0x80A93C50; //

// .text

func_80A93CC0_jp = 0x80A93CC0; // type:func
func_80A93DD0_jp = 0x80A93DD0; // type:func
func_80A93DE0_jp = 0x80A93DE0; // type:func
func_80A93E38_jp = 0x80A93E38; // type:func
func_80A93E48_jp = 0x80A93E48; // type:func
func_80A93E6C_jp = 0x80A93E6C; // type:func
func_80A93EFC_jp = 0x80A93EFC; // type:func
func_80A94408_jp = 0x80A94408; // type:func
func_80A94450_jp = 0x80A94450; // type:func
func_80A9449C_jp = 0x80A9449C; // type:func
func_80A94528_jp = 0x80A94528; // type:func
func_80A94788_jp = 0x80A94788; // type:func

// .data

_00953F30_Profile = 0x80A94950; //
D_80A94974_jp = 0x80A94974; //
D_80A94980_jp = 0x80A94980; //
D_80A9498C_jp = 0x80A9498C; //
D_80A94998_jp = 0x80A94998; //
D_80A949A4_jp = 0x80A949A4; //
D_80A949B0_jp = 0x80A949B0; //

// .rodata

RO_FLT_80A949C0_jp = 0x80A949C0; // type:f32
RO_FLT_80A949C4_jp = 0x80A949C4; // type:f32
RO_FLT_80A949C8_jp = 0x80A949C8; // type:f32
RO_FLT_80A949CC_jp = 0x80A949CC; // type:f32
RO_FLT_80A949D0_jp = 0x80A949D0; // type:f32

// .text

func_80A94AC0_jp = 0x80A94AC0; // type:func
func_80A94AFC_jp = 0x80A94AFC; // type:func
func_80A94BA4_jp = 0x80A94BA4; // type:func
func_80A94C24_jp = 0x80A94C24; // type:func
func_80A94C30_jp = 0x80A94C30; // type:func
func_80A94D0C_jp = 0x80A94D0C; // type:func

// .data

D_80A94E40_jp = 0x80A94E40; //
D_80A94EBC_jp = 0x80A94EBC; //
D_80A94F3C_jp = 0x80A94F3C; //
D_80A94FAC_jp = 0x80A94FAC; //
D_80A95014_jp = 0x80A95014; //
D_80A95098_jp = 0x80A95098; //
D_80A95128_jp = 0x80A95128; //
D_80A95130_jp = 0x80A95130; //
D_80A9519C_jp = 0x80A9519C; //
D_80A951A4_jp = 0x80A951A4; //
D_80A951E8_jp = 0x80A951E8; //
D_80A951F0_jp = 0x80A951F0; //
D_80A95234_jp = 0x80A95234; //
D_80A95244_jp = 0x80A95244; //
D_80A952B4_jp = 0x80A952B4; //
D_80A952C0_jp = 0x80A952C0; //
D_80A95324_jp = 0x80A95324; //
D_80A9532C_jp = 0x80A9532C; //
D_80A95390_jp = 0x80A95390; //
D_80A953AC_jp = 0x80A953AC; //
D_80A953E8_jp = 0x80A953E8; //
D_80A95444_jp = 0x80A95444; //
D_80A95454_jp = 0x80A95454; //
D_80A954AC_jp = 0x80A954AC; //
D_80A95504_jp = 0x80A95504; //
D_80A95524_jp = 0x80A95524; //
D_80A95560_jp = 0x80A95560; //
D_80A955B8_jp = 0x80A955B8; //
D_80A95600_jp = 0x80A95600; //
D_80A95618_jp = 0x80A95618; //
D_80A95660_jp = 0x80A95660; //
D_80A95684_jp = 0x80A95684; //
D_80A956D8_jp = 0x80A956D8; //
D_80A95714_jp = 0x80A95714; //
D_80A95720_jp = 0x80A95720; //
D_80A95760_jp = 0x80A95760; //
D_80A95790_jp = 0x80A95790; //
D_80A957E8_jp = 0x80A957E8; //
D_80A957F0_jp = 0x80A957F0; //
D_80A9584C_jp = 0x80A9584C; //
D_80A95854_jp = 0x80A95854; //
D_80A958B0_jp = 0x80A958B0; //
D_80A958C8_jp = 0x80A958C8; //
D_80A95900_jp = 0x80A95900; //
D_80A95908_jp = 0x80A95908; //
D_80A9595C_jp = 0x80A9595C; //
D_80A95974_jp = 0x80A95974; //
D_80A959C8_jp = 0x80A959C8; //
D_80A95A24_jp = 0x80A95A24; //
D_80A95A68_jp = 0x80A95A68; //
D_80A95AA0_jp = 0x80A95AA0; //
D_80A95AF0_jp = 0x80A95AF0; //
D_80A95B40_jp = 0x80A95B40; //
D_80A95B90_jp = 0x80A95B90; //
D_80A95BF4_jp = 0x80A95BF4; //
D_80A95C1C_jp = 0x80A95C1C; //
D_80A95C3C_jp = 0x80A95C3C; //
D_80A95C4C_jp = 0x80A95C4C; //
D_80A95C70_jp = 0x80A95C70; //
D_80A95C90_jp = 0x80A95C90; //
D_80A95CC8_jp = 0x80A95CC8; //
D_80A95CCC_jp = 0x80A95CCC; //
D_80A95CD0_jp = 0x80A95CD0; //
D_80A95CD8_jp = 0x80A95CD8; //
D_80A95CE0_jp = 0x80A95CE0; //
D_80A95CE4_jp = 0x80A95CE4; //
D_80A95CE8_jp = 0x80A95CE8; //
D_80A95CEC_jp = 0x80A95CEC; //
D_80A95CF0_jp = 0x80A95CF0; //
D_80A95CFC_jp = 0x80A95CFC; //
D_80A95D00_jp = 0x80A95D00; //
D_80A95D04_jp = 0x80A95D04; //
D_80A95D0C_jp = 0x80A95D0C; //
D_80A95D14_jp = 0x80A95D14; //
D_80A95D1C_jp = 0x80A95D1C; //
D_80A95D20_jp = 0x80A95D20; //
D_80A95D24_jp = 0x80A95D24; //
D_80A95D2C_jp = 0x80A95D2C; //
D_80A95D34_jp = 0x80A95D34; //
D_80A95D3C_jp = 0x80A95D3C; //
D_80A95D44_jp = 0x80A95D44; //
D_80A95D48_jp = 0x80A95D48; //
D_80A95D50_jp = 0x80A95D50; //
D_80A95D54_jp = 0x80A95D54; //
D_80A95D5C_jp = 0x80A95D5C; //
D_80A95D60_jp = 0x80A95D60; //
D_80A95D64_jp = 0x80A95D64; //
D_80A95D68_jp = 0x80A95D68; //
D_80A95D74_jp = 0x80A95D74; //
D_80A95D88_jp = 0x80A95D88; //
D_80A95D8C_jp = 0x80A95D8C; //
D_80A95D98_jp = 0x80A95D98; //
D_80A95DA0_jp = 0x80A95DA0; //
D_80A95DA4_jp = 0x80A95DA4; //
D_80A95DB0_jp = 0x80A95DB0; //
D_80A95DBC_jp = 0x80A95DBC; //
D_80A95DC4_jp = 0x80A95DC4; //
D_80A95DCC_jp = 0x80A95DCC; //
D_80A95DD8_jp = 0x80A95DD8; //
D_80A960E8_jp = 0x80A960E8; //

// .rodata

jtbl_80A960F0_jp = 0x80A960F0; // type:jtbl
D_80A96170_jp = 0x80A96170; //

// .text

func_80A963C0_jp = 0x80A963C0; // type:func
func_80A963D0_jp = 0x80A963D0; // type:func
func_80A963E0_jp = 0x80A963E0; // type:func
func_80A9648C_jp = 0x80A9648C; // type:func
func_80A96520_jp = 0x80A96520; // type:func

// .data

_00956630_Profile = 0x80A96590; //
D_80A96600_jp = 0x80A96600; //
D_80A96670_jp = 0x80A96670; //
D_80A966E0_jp = 0x80A966E0; //
D_80A96750_jp = 0x80A96750; //
D_80A967C0_jp = 0x80A967C0; //
D_80A96830_jp = 0x80A96830; //
D_80A968A0_jp = 0x80A968A0; //
D_80A96910_jp = 0x80A96910; //

// .text

func_80A96980_jp = 0x80A96980; // type:func
func_80A969CC_jp = 0x80A969CC; // type:func
func_80A96A70_jp = 0x80A96A70; // type:func
func_80A96B28_jp = 0x80A96B28; // type:func
func_80A96BE4_jp = 0x80A96BE4; // type:func
func_80A96C50_jp = 0x80A96C50; // type:func
func_80A96D04_jp = 0x80A96D04; // type:func
func_80A96D24_jp = 0x80A96D24; // type:func
func_80A96E0C_jp = 0x80A96E0C; // type:func
func_80A96E74_jp = 0x80A96E74; // type:func

// .data

_00956BF0_Profile = 0x80A96FF0; //
D_80A97014_jp = 0x80A97014; //
D_80A97044_jp = 0x80A97044; //
D_80A97058_jp = 0x80A97058; //
D_80A970E8_jp = 0x80A970E8; //
D_80A970EC_jp = 0x80A970EC; //

// .rodata

RO_FLT_80A97100_jp = 0x80A97100; // type:f32

// .text

func_80A971A0_jp = 0x80A971A0; // type:func
func_80A97234_jp = 0x80A97234; // type:func
func_80A9727C_jp = 0x80A9727C; // type:func
func_80A97490_jp = 0x80A97490; // type:func

// .data

D_80A974A0_jp = 0x80A974A0; //
D_80A974B4_jp = 0x80A974B4; //

// .text

func_80A97530_jp = 0x80A97530; // type:func
func_80A975C4_jp = 0x80A975C4; // type:func
func_80A9760C_jp = 0x80A9760C; // type:func
func_80A97820_jp = 0x80A97820; // type:func

// .data

D_80A97830_jp = 0x80A97830; //
D_80A97844_jp = 0x80A97844; //
D_80A978C0_jp = 0x80A978C0; //

// .text

func_80A97930_jp = 0x80A97930; // type:func
func_80A97940_jp = 0x80A97940; // type:func
func_80A97A04_jp = 0x80A97A04; // type:func
func_80A97A1C_jp = 0x80A97A1C; // type:func
func_80A97A2C_jp = 0x80A97A2C; // type:func

// .data

D_80A97AB0_jp = 0x80A97AB0; //
D_80A97CB0_jp = 0x80A97CB0; //
D_80A97CC4_jp = 0x80A97CC4; //

// .rodata

RO_STR_80A97D10_jp = 0x80A97D10; // type:asciz

// .data

D_80A97D80_jp = 0x80A97D80; //
D_80A97DF0_jp = 0x80A97DF0; //
D_80A97E60_jp = 0x80A97E60; //
D_80A97ED0_jp = 0x80A97ED0; //
D_80A97F40_jp = 0x80A97F40; //

// .text

func_80A97FB0_jp = 0x80A97FB0; // type:func
func_80A98104_jp = 0x80A98104; // type:func
func_80A98128_jp = 0x80A98128; // type:func
func_80A98180_jp = 0x80A98180; // type:func
func_80A981AC_jp = 0x80A981AC; // type:func
func_80A98248_jp = 0x80A98248; // type:func
func_80A98274_jp = 0x80A98274; // type:func
func_80A98320_jp = 0x80A98320; // type:func
func_80A983B4_jp = 0x80A983B4; // type:func
func_80A98444_jp = 0x80A98444; // type:func
func_80A984C0_jp = 0x80A984C0; // type:func
func_80A98500_jp = 0x80A98500; // type:func
func_80A985D4_jp = 0x80A985D4; // type:func
func_80A985F4_jp = 0x80A985F4; // type:func
func_80A9868C_jp = 0x80A9868C; // type:func
func_80A986D8_jp = 0x80A986D8; // type:func
func_80A98794_jp = 0x80A98794; // type:func
func_80A987E0_jp = 0x80A987E0; // type:func
func_80A98878_jp = 0x80A98878; // type:func
func_80A988AC_jp = 0x80A988AC; // type:func
func_80A988EC_jp = 0x80A988EC; // type:func
func_80A9897C_jp = 0x80A9897C; // type:func
func_80A989D0_jp = 0x80A989D0; // type:func
func_80A989F4_jp = 0x80A989F4; // type:func
func_80A98A20_jp = 0x80A98A20; // type:func
func_80A98A58_jp = 0x80A98A58; // type:func
func_80A98AC0_jp = 0x80A98AC0; // type:func
func_80A98B2C_jp = 0x80A98B2C; // type:func
func_80A98B74_jp = 0x80A98B74; // type:func
func_80A98C14_jp = 0x80A98C14; // type:func
func_80A98C5C_jp = 0x80A98C5C; // type:func
func_80A98C9C_jp = 0x80A98C9C; // type:func
func_80A98D08_jp = 0x80A98D08; // type:func
func_80A98D50_jp = 0x80A98D50; // type:func

// .data

_00958220_Profile = 0x80A98D80; //
D_80A98DA4_jp = 0x80A98DA4; //
D_80A98DC0_jp = 0x80A98DC0; //
D_80A98DD0_jp = 0x80A98DD0; // type:u8
D_80A98DEC_jp = 0x80A98DEC; //
D_80A98DF4_jp = 0x80A98DF4; //
D_80A98E08_jp = 0x80A98E08; //

// .rodata

RO_FLT_80A98E20_jp = 0x80A98E20; // type:f32

// .text

func_80A98F60_jp = 0x80A98F60; // type:func
func_80A9906C_jp = 0x80A9906C; // type:func
func_80A99084_jp = 0x80A99084; // type:func
func_80A990A0_jp = 0x80A990A0; // type:func
func_80A990BC_jp = 0x80A990BC; // type:func
func_80A9918C_jp = 0x80A9918C; // type:func
func_80A992D8_jp = 0x80A992D8; // type:func
func_80A9939C_jp = 0x80A9939C; // type:func
func_80A9942C_jp = 0x80A9942C; // type:func
func_80A99514_jp = 0x80A99514; // type:func
func_80A99560_jp = 0x80A99560; // type:func
func_80A995F4_jp = 0x80A995F4; // type:func
func_80A99644_jp = 0x80A99644; // type:func
func_80A99680_jp = 0x80A99680; // type:func
func_80A996E4_jp = 0x80A996E4; // type:func
func_80A9975C_jp = 0x80A9975C; // type:func
func_80A99884_jp = 0x80A99884; // type:func
func_80A998C0_jp = 0x80A998C0; // type:func
func_80A998F0_jp = 0x80A998F0; // type:func
func_80A99970_jp = 0x80A99970; // type:func
func_80A999D0_jp = 0x80A999D0; // type:func
func_80A99B84_jp = 0x80A99B84; // type:func
func_80A99CAC_jp = 0x80A99CAC; // type:func
func_80A99E6C_jp = 0x80A99E6C; // type:func
func_80A99F58_jp = 0x80A99F58; // type:func
func_80A9A0E0_jp = 0x80A9A0E0; // type:func
func_80A9A240_jp = 0x80A9A240; // type:func
func_80A9A4E4_jp = 0x80A9A4E4; // type:func
func_80A9A6D0_jp = 0x80A9A6D0; // type:func
func_80A9A910_jp = 0x80A9A910; // type:func
func_80A9A9A4_jp = 0x80A9A9A4; // type:func
func_80A9AADC_jp = 0x80A9AADC; // type:func
func_80A9AB28_jp = 0x80A9AB28; // type:func
func_80A9AB5C_jp = 0x80A9AB5C; // type:func
func_80A9AB98_jp = 0x80A9AB98; // type:func
func_80A9AC0C_jp = 0x80A9AC0C; // type:func
func_80A9AC88_jp = 0x80A9AC88; // type:func
func_80A9ACA8_jp = 0x80A9ACA8; // type:func
func_80A9ACEC_jp = 0x80A9ACEC; // type:func

// .data

D_80A9AD50_jp = 0x80A9AD50; // type:s16
D_80A9AD52_jp = 0x80A9AD52; // type:s16
D_80A9AD54_jp = 0x80A9AD54; //
D_FLT_80A9AE70_jp = 0x80A9AE70; // type:f32
D_FLT_80A9AE84_jp = 0x80A9AE84; // type:f32
D_80A9AE98_jp = 0x80A9AE98; // type:s16
D_80A9AE9C_jp = 0x80A9AE9C; //
D_80A9AEB8_jp = 0x80A9AEB8; //

// .rodata

RO_STR_80A9AEE0_jp = 0x80A9AEE0; // type:asciz
RO_STR_80A9AEF4_jp = 0x80A9AEF4; // type:asciz
RO_STR_80A9AF08_jp = 0x80A9AF08; // type:asciz
RO_STR_80A9AF1C_jp = 0x80A9AF1C; // type:asciz
RO_FLT_80A9AF30_jp = 0x80A9AF30; // type:f32
RO_FLT_80A9AF34_jp = 0x80A9AF34; // type:f32
RO_FLT_80A9AF38_jp = 0x80A9AF38; // type:f32
RO_FLT_80A9AF3C_jp = 0x80A9AF3C; // type:f32
RO_FLT_80A9AF40_jp = 0x80A9AF40; // type:f32
RO_FLT_80A9AF44_jp = 0x80A9AF44; // type:f32
RO_FLT_80A9AF48_jp = 0x80A9AF48; // type:f32
RO_FLT_80A9AF4C_jp = 0x80A9AF4C; // type:f32
RO_FLT_80A9AF50_jp = 0x80A9AF50; // type:f32
RO_FLT_80A9AF54_jp = 0x80A9AF54; // type:f32
RO_FLT_80A9AF58_jp = 0x80A9AF58; // type:f32
RO_FLT_80A9AF5C_jp = 0x80A9AF5C; // type:f32
RO_FLT_80A9AF60_jp = 0x80A9AF60; // type:f32

// .text

func_80A9B1D0_jp = 0x80A9B1D0; // type:func
func_80A9B554_jp = 0x80A9B554; // type:func
func_80A9B588_jp = 0x80A9B588; // type:func
func_80A9B8E4_jp = 0x80A9B8E4; // type:func
func_80A9B97C_jp = 0x80A9B97C; // type:func
func_80A9BA78_jp = 0x80A9BA78; // type:func

// .data

D_80A9BA90_jp = 0x80A9BA90; //
D_80A9BA9C_jp = 0x80A9BA9C; //
D_80A9BABC_jp = 0x80A9BABC; //

// .rodata

RO_FLT_80A9BB00_jp = 0x80A9BB00; // type:f32
RO_FLT_80A9BB04_jp = 0x80A9BB04; // type:f32
RO_FLT_80A9BB08_jp = 0x80A9BB08; // type:f32

// .data

D_80A9BB70_jp = 0x80A9BB70; //
D_80A9BBE0_jp = 0x80A9BBE0; //
D_80A9BC50_jp = 0x80A9BC50; //
D_80A9BCC0_jp = 0x80A9BCC0; //

// .text

func_80A9BD30_jp = 0x80A9BD30; // type:func
func_80A9BFCC_jp = 0x80A9BFCC; // type:func
func_80A9BFF8_jp = 0x80A9BFF8; // type:func
func_80A9C1F8_jp = 0x80A9C1F8; // type:func
func_80A9C290_jp = 0x80A9C290; // type:func
func_80A9C2C4_jp = 0x80A9C2C4; // type:func

// .data

D_80A9C2E0_jp = 0x80A9C2E0; //
D_80A9C2EC_jp = 0x80A9C2EC; //
D_80A9C300_jp = 0x80A9C300; //

// .rodata

RO_FLT_80A9C350_jp = 0x80A9C350; // type:f32
RO_FLT_80A9C354_jp = 0x80A9C354; // type:f32
RO_FLT_80A9C358_jp = 0x80A9C358; // type:f32

// .text

func_80A9C3C0_jp = 0x80A9C3C0; // type:func
func_80A9C4AC_jp = 0x80A9C4AC; // type:func
func_80A9C554_jp = 0x80A9C554; // type:func
func_80A9C754_jp = 0x80A9C754; // type:func
func_80A9C77C_jp = 0x80A9C77C; // type:func
func_80A9C81C_jp = 0x80A9C81C; // type:func
func_80A9C888_jp = 0x80A9C888; // type:func
func_80A9C8FC_jp = 0x80A9C8FC; // type:func
func_80A9CA08_jp = 0x80A9CA08; // type:func

// .data

_0095C630_Profile = 0x80A9CB40; //
D_80A9CB64_jp = 0x80A9CB64; //
D_80A9CB6C_jp = 0x80A9CB6C; //
D_80A9CB80_jp = 0x80A9CB80; //
D_80A9CB88_jp = 0x80A9CB88; //
D_80A9CBC8_jp = 0x80A9CBC8; //
D_80A9CC08_jp = 0x80A9CC08; //
D_FLT_80A9CC10_jp = 0x80A9CC10; // type:f32
D_FLT_80A9CC1C_jp = 0x80A9CC1C; // type:f32
D_80A9CC28_jp = 0x80A9CC28; //
D_80A9CC30_jp = 0x80A9CC30; //
D_80A9CC34_jp = 0x80A9CC34; //

// .rodata

RO_STR_80A9CC40_jp = 0x80A9CC40; // type:asciz
RO_STR_80A9CC5C_jp = 0x80A9CC5C; // type:asciz
RO_STR_80A9CC78_jp = 0x80A9CC78; // type:asciz

// .data

D_80A9CD60_jp = 0x80A9CD60; //
D_80A9CDD0_jp = 0x80A9CDD0; //
D_80A9CE40_jp = 0x80A9CE40; //

// .text

func_80A9CEB0_jp = 0x80A9CEB0; // type:func
func_80A9CF48_jp = 0x80A9CF48; // type:func
func_80A9CFC4_jp = 0x80A9CFC4; // type:func
func_80A9D1D8_jp = 0x80A9D1D8; // type:func

// .data

D_80A9D1F0_jp = 0x80A9D1F0; //
D_80A9D204_jp = 0x80A9D204; //

// .text

func_80A9D280_jp = 0x80A9D280; // type:func
func_80A9D51C_jp = 0x80A9D51C; // type:func
func_80A9D548_jp = 0x80A9D548; // type:func
func_80A9D8A4_jp = 0x80A9D8A4; // type:func
func_80A9D93C_jp = 0x80A9D93C; // type:func
func_80A9DA38_jp = 0x80A9DA38; // type:func

// .data

D_80A9DA50_jp = 0x80A9DA50; //
D_80A9DA5C_jp = 0x80A9DA5C; //
D_80A9DA70_jp = 0x80A9DA70; //

// .rodata

RO_FLT_80A9DAC0_jp = 0x80A9DAC0; // type:f32
RO_FLT_80A9DAC4_jp = 0x80A9DAC4; // type:f32
RO_FLT_80A9DAC8_jp = 0x80A9DAC8; // type:f32

// .text

func_80A9DB30_jp = 0x80A9DB30; // type:func
func_80A9DB40_jp = 0x80A9DB40; // type:func
func_80A9DB88_jp = 0x80A9DB88; // type:func
func_80A9DBA0_jp = 0x80A9DBA0; // type:func

// .data

D_80A9DBB0_jp = 0x80A9DBB0; //
D_80A9DBC4_jp = 0x80A9DBC4; //

// .text

func_80A9DC40_jp = 0x80A9DC40; // type:func
func_80A9DEDC_jp = 0x80A9DEDC; // type:func
func_80A9DF08_jp = 0x80A9DF08; // type:func
func_80A9E0F4_jp = 0x80A9E0F4; // type:func
func_80A9E18C_jp = 0x80A9E18C; // type:func
func_80A9E1C0_jp = 0x80A9E1C0; // type:func

// .data

D_80A9E1D0_jp = 0x80A9E1D0; //
D_80A9E1DC_jp = 0x80A9E1DC; //
D_80A9E1F0_jp = 0x80A9E1F0; //

// .rodata

RO_FLT_80A9E240_jp = 0x80A9E240; // type:f32
RO_FLT_80A9E244_jp = 0x80A9E244; // type:f32
RO_FLT_80A9E248_jp = 0x80A9E248; // type:f32

// .data

D_80A9E2B0_jp = 0x80A9E2B0; //
D_80A9E320_jp = 0x80A9E320; //
D_80A9E390_jp = 0x80A9E390; //
D_80A9E400_jp = 0x80A9E400; //
D_80A9E470_jp = 0x80A9E470; //

// .text

func_80A9E4E0_jp = 0x80A9E4E0; // type:func
func_80A9E684_jp = 0x80A9E684; // type:func
func_80A9E6A4_jp = 0x80A9E6A4; // type:func
func_80A9E890_jp = 0x80A9E890; // type:func
func_80A9E928_jp = 0x80A9E928; // type:func
func_80A9E95C_jp = 0x80A9E95C; // type:func

// .data

D_80A9E970_jp = 0x80A9E970; //
D_80A9E97C_jp = 0x80A9E97C; //
D_80A9E990_jp = 0x80A9E990; //

// .rodata

RO_FLT_80A9E9E0_jp = 0x80A9E9E0; // type:f32
RO_FLT_80A9E9E4_jp = 0x80A9E9E4; // type:f32
RO_FLT_80A9E9E8_jp = 0x80A9E9E8; // type:f32

// .text

func_80A9EA50_jp = 0x80A9EA50; // type:func
func_80A9EA60_jp = 0x80A9EA60; // type:func
func_80A9EA98_jp = 0x80A9EA98; // type:func
func_80A9EAB0_jp = 0x80A9EAB0; // type:func

// .data

D_80A9EAC0_jp = 0x80A9EAC0; //
D_80A9EAD4_jp = 0x80A9EAD4; //
D_80A9EB50_jp = 0x80A9EB50; //
D_80A9EBC0_jp = 0x80A9EBC0; //
D_80A9EC30_jp = 0x80A9EC30; //

// .text

func_80A9ECA0_jp = 0x80A9ECA0; // type:func
func_80A9EDA8_jp = 0x80A9EDA8; // type:func
func_80A9EE40_jp = 0x80A9EE40; // type:func
func_80A9EE60_jp = 0x80A9EE60; // type:func
func_80A9EF04_jp = 0x80A9EF04; // type:func
func_80A9EF6C_jp = 0x80A9EF6C; // type:func
func_80A9F004_jp = 0x80A9F004; // type:func
func_80A9F090_jp = 0x80A9F090; // type:func
func_80A9F0F8_jp = 0x80A9F0F8; // type:func
func_80A9F188_jp = 0x80A9F188; // type:func

// .data

_0095EF10_Profile = 0x80A9F2C0; //
D_80A9F2E4_jp = 0x80A9F2E4; //
D_80A9F2F0_jp = 0x80A9F2F0; //
D_80A9F300_jp = 0x80A9F300; //
D_80A9F348_jp = 0x80A9F348; //
D_80A9F354_jp = 0x80A9F354; //
D_80A9F374_jp = 0x80A9F374; //
D_80A9F394_jp = 0x80A9F394; //
D_80A9F3B4_jp = 0x80A9F3B4; //
D_80A9F3D4_jp = 0x80A9F3D4; //
D_80A9F3F4_jp = 0x80A9F3F4; //
D_80A9F414_jp = 0x80A9F414; //
D_80A9F434_jp = 0x80A9F434; //
D_80A9F454_jp = 0x80A9F454; //
D_80A9F470_jp = 0x80A9F470; //
D_80A9F4A4_jp = 0x80A9F4A4; //

// .rodata

RO_STR_80A9F4D0_jp = 0x80A9F4D0; // type:asciz

// .bss

B_80A9F4E0_jp = 0x80A9F4E0; //

// .text

func_80A9F5E0_jp = 0x80A9F5E0; // type:func
func_80A9F87C_jp = 0x80A9F87C; // type:func
func_80A9F8A8_jp = 0x80A9F8A8; // type:func
func_80A9FAA8_jp = 0x80A9FAA8; // type:func
func_80A9FB40_jp = 0x80A9FB40; // type:func
func_80A9FB74_jp = 0x80A9FB74; // type:func

// .data

D_80A9FB90_jp = 0x80A9FB90; //
D_80A9FB9C_jp = 0x80A9FB9C; //
D_80A9FBB0_jp = 0x80A9FBB0; //

// .rodata

RO_FLT_80A9FC00_jp = 0x80A9FC00; // type:f32
RO_FLT_80A9FC04_jp = 0x80A9FC04; // type:f32
RO_FLT_80A9FC08_jp = 0x80A9FC08; // type:f32

// .text

func_80A9FC70_jp = 0x80A9FC70; // type:func
func_80A9FCD0_jp = 0x80A9FCD0; // type:func
func_80A9FD6C_jp = 0x80A9FD6C; // type:func
func_80A9FE38_jp = 0x80A9FE38; // type:func
func_80A9FF24_jp = 0x80A9FF24; // type:func
func_80A9FF60_jp = 0x80A9FF60; // type:func
func_80A9FFF8_jp = 0x80A9FFF8; // type:func
func_80AA0070_jp = 0x80AA0070; // type:func
func_80AA01A4_jp = 0x80AA01A4; // type:func
func_80AA0234_jp = 0x80AA0234; // type:func
func_80AA0264_jp = 0x80AA0264; // type:func
func_80AA02A4_jp = 0x80AA02A4; // type:func
func_80AA02E4_jp = 0x80AA02E4; // type:func
func_80AA0320_jp = 0x80AA0320; // type:func
func_80AA0360_jp = 0x80AA0360; // type:func
func_80AA0398_jp = 0x80AA0398; // type:func
func_80AA03BC_jp = 0x80AA03BC; // type:func
func_80AA0478_jp = 0x80AA0478; // type:func
func_80AA0668_jp = 0x80AA0668; // type:func
func_80AA07F4_jp = 0x80AA07F4; // type:func
func_80AA08E4_jp = 0x80AA08E4; // type:func
func_80AA0A6C_jp = 0x80AA0A6C; // type:func
func_80AA0C98_jp = 0x80AA0C98; // type:func
func_80AA0FA8_jp = 0x80AA0FA8; // type:func
func_80AA12A0_jp = 0x80AA12A0; // type:func
func_80AA1458_jp = 0x80AA1458; // type:func
func_80AA19CC_jp = 0x80AA19CC; // type:func
func_80AA1B78_jp = 0x80AA1B78; // type:func
func_80AA1C50_jp = 0x80AA1C50; // type:func
func_80AA1C5C_jp = 0x80AA1C5C; // type:func
func_80AA1DE0_jp = 0x80AA1DE0; // type:func
func_80AA1E58_jp = 0x80AA1E58; // type:func
func_80AA1EF0_jp = 0x80AA1EF0; // type:func

// .data

_0095FEC0_Profile = 0x80AA1F40; //
D_80AA1F64_jp = 0x80AA1F64; //
D_80AA2018_jp = 0x80AA2018; //
D_80AA2024_jp = 0x80AA2024; //
D_80AA2028_jp = 0x80AA2028; //
D_80AA2038_jp = 0x80AA2038; //
D_80AA2098_jp = 0x80AA2098; //
D_80AA20C0_jp = 0x80AA20C0; //
D_80AA20E8_jp = 0x80AA20E8; //
D_80AA2118_jp = 0x80AA2118; //
D_80AA212C_jp = 0x80AA212C; //
D_80AA2140_jp = 0x80AA2140; //
D_80AA2154_jp = 0x80AA2154; //
D_FLT_80AA216C_jp = 0x80AA216C; // type:f32
D_FLT_80AA2184_jp = 0x80AA2184; // type:f32
D_80AA2188_jp = 0x80AA2188; //
D_80AA21A0_jp = 0x80AA21A0; //
D_80AA21B8_jp = 0x80AA21B8; //
D_80AA21CC_jp = 0x80AA21CC; //
D_80AA21E0_jp = 0x80AA21E0; //
D_80AA21F4_jp = 0x80AA21F4; //
D_80AA2208_jp = 0x80AA2208; //
D_80AA221C_jp = 0x80AA221C; //
D_80AA2230_jp = 0x80AA2230; //
D_80AA2244_jp = 0x80AA2244; //
D_80AA2258_jp = 0x80AA2258; //
D_80AA226C_jp = 0x80AA226C; //
D_80AA2270_jp = 0x80AA2270; //
D_80AA2274_jp = 0x80AA2274; //
D_80AA2278_jp = 0x80AA2278; //
D_80AA227C_jp = 0x80AA227C; //
D_80AA2280_jp = 0x80AA2280; //
D_80AA2284_jp = 0x80AA2284; //
D_80AA2288_jp = 0x80AA2288; //
D_80AA228C_jp = 0x80AA228C; //
D_80AA2290_jp = 0x80AA2290; //
D_80AA2294_jp = 0x80AA2294; //
D_80AA2298_jp = 0x80AA2298; //
D_80AA229C_jp = 0x80AA229C; //
D_80AA22B0_jp = 0x80AA22B0; //
D_80AA22C4_jp = 0x80AA22C4; //
D_80AA22D8_jp = 0x80AA22D8; //
D_80AA22EC_jp = 0x80AA22EC; //
D_80AA2300_jp = 0x80AA2300; //

// .rodata

RO_STR_80AA2320_jp = 0x80AA2320; // type:asciz
RO_FLT_80AA2334_jp = 0x80AA2334; // type:f32
RO_FLT_80AA2338_jp = 0x80AA2338; // type:f32
RO_FLT_80AA233C_jp = 0x80AA233C; // type:f32
RO_FLT_80AA2340_jp = 0x80AA2340; // type:f32
RO_FLT_80AA2344_jp = 0x80AA2344; // type:f32

// .text

func_80AA25B0_jp = 0x80AA25B0; // type:func
func_80AA2644_jp = 0x80AA2644; // type:func
func_80AA26E8_jp = 0x80AA26E8; // type:func

// .data

D_80AA2A10_jp = 0x80AA2A10; //
D_80AA2A1C_jp = 0x80AA2A1C; //
D_80AA2A30_jp = 0x80AA2A30; //

// .text

func_80AA2AB0_jp = 0x80AA2AB0; // type:func
func_80AA2AC0_jp = 0x80AA2AC0; // type:func
func_80AA2AD8_jp = 0x80AA2AD8; // type:func
func_80AA2D38_jp = 0x80AA2D38; // type:func

// .data

D_80AA2D50_jp = 0x80AA2D50; //
D_80AA2D64_jp = 0x80AA2D64; //

// .text

func_80AA2DE0_jp = 0x80AA2DE0; // type:func
func_80AA2E78_jp = 0x80AA2E78; // type:func
func_80AA2EE4_jp = 0x80AA2EE4; // type:func
func_80AA31D0_jp = 0x80AA31D0; // type:func

// .data

D_80AA31E0_jp = 0x80AA31E0; //
D_80AA31E8_jp = 0x80AA31E8; //
D_80AA31FC_jp = 0x80AA31FC; //

// .text

func_80AA3280_jp = 0x80AA3280; // type:func
func_80AA3290_jp = 0x80AA3290; // type:func
func_80AA32D8_jp = 0x80AA32D8; // type:func
func_80AA32F0_jp = 0x80AA32F0; // type:func

// .data

D_80AA3300_jp = 0x80AA3300; //
D_80AA3314_jp = 0x80AA3314; //

// .text

func_80AA3390_jp = 0x80AA3390; // type:func
func_80AA362C_jp = 0x80AA362C; // type:func
func_80AA3658_jp = 0x80AA3658; // type:func
func_80AA39DC_jp = 0x80AA39DC; // type:func
func_80AA3A74_jp = 0x80AA3A74; // type:func
func_80AA3AA8_jp = 0x80AA3AA8; // type:func

// .data

D_80AA3AC0_jp = 0x80AA3AC0; //
D_80AA3ACC_jp = 0x80AA3ACC; //
D_80AA3AE0_jp = 0x80AA3AE0; //

// .rodata

RO_FLT_80AA3B30_jp = 0x80AA3B30; // type:f32
RO_FLT_80AA3B34_jp = 0x80AA3B34; // type:f32
RO_FLT_80AA3B38_jp = 0x80AA3B38; // type:f32

// .text

func_80AA3BA0_jp = 0x80AA3BA0; // type:func
func_80AA3C78_jp = 0x80AA3C78; // type:func
func_80AA3D08_jp = 0x80AA3D08; // type:func
func_80AA3D94_jp = 0x80AA3D94; // type:func
func_80AA406C_jp = 0x80AA406C; // type:func
func_80AA40D0_jp = 0x80AA40D0; // type:func
func_80AA411C_jp = 0x80AA411C; // type:func
func_80AA41C8_jp = 0x80AA41C8; // type:func
func_80AA424C_jp = 0x80AA424C; // type:func
func_80AA4278_jp = 0x80AA4278; // type:func
func_80AA429C_jp = 0x80AA429C; // type:func
func_80AA434C_jp = 0x80AA434C; // type:func
func_80AA4388_jp = 0x80AA4388; // type:func
func_80AA43B8_jp = 0x80AA43B8; // type:func
func_80AA4408_jp = 0x80AA4408; // type:func
func_80AA4478_jp = 0x80AA4478; // type:func
func_80AA4610_jp = 0x80AA4610; // type:func
func_80AA4634_jp = 0x80AA4634; // type:func
func_80AA4648_jp = 0x80AA4648; // type:func
func_80AA4794_jp = 0x80AA4794; // type:func
func_80AA47E8_jp = 0x80AA47E8; // type:func
func_80AA482C_jp = 0x80AA482C; // type:func
func_80AA48A8_jp = 0x80AA48A8; // type:func
func_80AA4998_jp = 0x80AA4998; // type:func
func_80AA49EC_jp = 0x80AA49EC; // type:func
func_80AA49FC_jp = 0x80AA49FC; // type:func
func_80AA4A0C_jp = 0x80AA4A0C; // type:func
func_80AA4A2C_jp = 0x80AA4A2C; // type:func
func_80AA4A50_jp = 0x80AA4A50; // type:func
func_80AA4AB8_jp = 0x80AA4AB8; // type:func
func_80AA4C04_jp = 0x80AA4C04; // type:func
func_80AA4D18_jp = 0x80AA4D18; // type:func

// .data

_00963DF0_Profile = 0x80AA4D30; //
D_80AA4D54_jp = 0x80AA4D54; // type:u8
D_80AA4D68_jp = 0x80AA4D68; // type:u8
D_80AA4D69_jp = 0x80AA4D69; // type:u8
D_80AA4D79_jp = 0x80AA4D79; //
D_80AA4D7C_jp = 0x80AA4D7C; //
D_80AA4D98_jp = 0x80AA4D98; //
D_80AA4DA0_jp = 0x80AA4DA0; //

// .rodata

RO_FLT_80AA4DE0_jp = 0x80AA4DE0; // type:f32
RO_FLT_80AA4DE4_jp = 0x80AA4DE4; // type:f32
RO_FLT_80AA4DE8_jp = 0x80AA4DE8; // type:f32
RO_FLT_80AA4DEC_jp = 0x80AA4DEC; // type:f32

// .bss

B_80AA4DF0_jp = 0x80AA4DF0; //
B_80AA4E20_jp = 0x80AA4E20; //
B_80AA4EB8_jp = 0x80AA4EB8; // type:s16

// .text

func_80AA5070_jp = 0x80AA5070; // type:func
func_80AA5080_jp = 0x80AA5080; // type:func
func_80AA50C8_jp = 0x80AA50C8; // type:func
func_80AA50E0_jp = 0x80AA50E0; // type:func

// .data

D_80AA50F0_jp = 0x80AA50F0; //
D_80AA5104_jp = 0x80AA5104; //
D_80AA5180_jp = 0x80AA5180; //
D_80AA51F0_jp = 0x80AA51F0; //

// .text

func_80AA5260_jp = 0x80AA5260; // type:func
func_80AA54FC_jp = 0x80AA54FC; // type:func
func_80AA5528_jp = 0x80AA5528; // type:func
func_80AA58AC_jp = 0x80AA58AC; // type:func
func_80AA5944_jp = 0x80AA5944; // type:func
func_80AA5978_jp = 0x80AA5978; // type:func

// .data

D_80AA5990_jp = 0x80AA5990; //
D_80AA599C_jp = 0x80AA599C; //
D_80AA59B0_jp = 0x80AA59B0; //

// .rodata

RO_FLT_80AA5A00_jp = 0x80AA5A00; // type:f32
RO_FLT_80AA5A04_jp = 0x80AA5A04; // type:f32
RO_FLT_80AA5A08_jp = 0x80AA5A08; // type:f32

// .text

func_80AA5A70_jp = 0x80AA5A70; // type:func
func_80AA5B98_jp = 0x80AA5B98; // type:func
func_80AA5C30_jp = 0x80AA5C30; // type:func
func_80AA5D54_jp = 0x80AA5D54; // type:func
func_80AA5D94_jp = 0x80AA5D94; // type:func
func_80AA5E28_jp = 0x80AA5E28; // type:func
func_80AA5ED8_jp = 0x80AA5ED8; // type:func
func_80AA5FAC_jp = 0x80AA5FAC; // type:func
func_80AA6164_jp = 0x80AA6164; // type:func
func_80AA6304_jp = 0x80AA6304; // type:func
func_80AA63E4_jp = 0x80AA63E4; // type:func
func_80AA64A4_jp = 0x80AA64A4; // type:func
func_80AA6744_jp = 0x80AA6744; // type:func
func_80AA67DC_jp = 0x80AA67DC; // type:func
func_80AA6868_jp = 0x80AA6868; // type:func
func_80AA68D0_jp = 0x80AA68D0; // type:func
func_80AA6A90_jp = 0x80AA6A90; // type:func

// .data

_00965BE0_Profile = 0x80AA6D80; //
D_80AA6DA4_jp = 0x80AA6DA4; //
D_80AA6E24_jp = 0x80AA6E24; //
D_FLT_80AA6EA4_jp = 0x80AA6EA4; // type:f32
D_FLT_80AA6EB4_jp = 0x80AA6EB4; // type:f32
D_80AA6EC4_jp = 0x80AA6EC4; //
D_80AA6ECC_jp = 0x80AA6ECC; //
D_80AA6EE0_jp = 0x80AA6EE0; //
D_80AA6EE8_jp = 0x80AA6EE8; //
D_FLT_80AA6F18_jp = 0x80AA6F18; // type:f32
D_FLT_80AA6F48_jp = 0x80AA6F48; // type:f32
D_FLT_80AA6F58_jp = 0x80AA6F58; // type:f32
D_80AA6F68_jp = 0x80AA6F68; //
D_80AA6F70_jp = 0x80AA6F70; //
D_80AA6F74_jp = 0x80AA6F74; // type:u8
D_80AA6F84_jp = 0x80AA6F84; // type:u8
D_FLT_80AA6F94_jp = 0x80AA6F94; // type:f32

// .rodata

RO_FLT_80AA6FB0_jp = 0x80AA6FB0; // type:f32

// .data

D_80AA7130_jp = 0x80AA7130; //

// .text

func_80AA71A0_jp = 0x80AA71A0; // type:func
func_80AA743C_jp = 0x80AA743C; // type:func
func_80AA7468_jp = 0x80AA7468; // type:func
func_80AA7668_jp = 0x80AA7668; // type:func
func_80AA7700_jp = 0x80AA7700; // type:func
func_80AA7734_jp = 0x80AA7734; // type:func

// .data

D_80AA7750_jp = 0x80AA7750; //
D_80AA775C_jp = 0x80AA775C; //
D_80AA777C_jp = 0x80AA777C; //

// .rodata

RO_FLT_80AA77C0_jp = 0x80AA77C0; // type:f32
RO_FLT_80AA77C4_jp = 0x80AA77C4; // type:f32
RO_FLT_80AA77C8_jp = 0x80AA77C8; // type:f32

// .text

func_80AA7830_jp = 0x80AA7830; // type:func
func_80AA7ACC_jp = 0x80AA7ACC; // type:func
func_80AA7AF8_jp = 0x80AA7AF8; // type:func
func_80AA7D48_jp = 0x80AA7D48; // type:func
func_80AA7DE0_jp = 0x80AA7DE0; // type:func
func_80AA7E14_jp = 0x80AA7E14; // type:func

// .data

D_80AA7E30_jp = 0x80AA7E30; //
D_80AA7E3C_jp = 0x80AA7E3C; //
D_80AA7E44_jp = 0x80AA7E44; //
D_80AA7E64_jp = 0x80AA7E64; //

// .rodata

RO_FLT_80AA7EB0_jp = 0x80AA7EB0; // type:f32
RO_FLT_80AA7EB4_jp = 0x80AA7EB4; // type:f32
RO_FLT_80AA7EB8_jp = 0x80AA7EB8; // type:f32

// .text

func_80AA7F30_jp = 0x80AA7F30; // type:func
func_80AA81CC_jp = 0x80AA81CC; // type:func
func_80AA81F8_jp = 0x80AA81F8; // type:func
func_80AA83F8_jp = 0x80AA83F8; // type:func
func_80AA8490_jp = 0x80AA8490; // type:func
func_80AA84C4_jp = 0x80AA84C4; // type:func

// .data

D_80AA84E0_jp = 0x80AA84E0; //
D_80AA84EC_jp = 0x80AA84EC; //
D_80AA8500_jp = 0x80AA8500; //

// .rodata

RO_FLT_80AA8550_jp = 0x80AA8550; // type:f32
RO_FLT_80AA8554_jp = 0x80AA8554; // type:f32
RO_FLT_80AA8558_jp = 0x80AA8558; // type:f32

// .data

D_80AA85C0_jp = 0x80AA85C0; //
D_80AA8630_jp = 0x80AA8630; //
D_80AA86A0_jp = 0x80AA86A0; //

// .text

func_80AA8710_jp = 0x80AA8710; // type:func
func_80AA8720_jp = 0x80AA8720; // type:func
func_80AA875C_jp = 0x80AA875C; // type:func
func_80AA8774_jp = 0x80AA8774; // type:func

// .data

D_80AA8790_jp = 0x80AA8790; //
D_80AA87A4_jp = 0x80AA87A4; //
D_80AA8820_jp = 0x80AA8820; //
D_80AA8890_jp = 0x80AA8890; //
D_80AA8900_jp = 0x80AA8900; //

// .text

func_80AA8970_jp = 0x80AA8970; // type:func
func_80AA8980_jp = 0x80AA8980; // type:func
func_80AA8998_jp = 0x80AA8998; // type:func
func_80AA8BC0_jp = 0x80AA8BC0; // type:func

// .data

D_80AA8BD0_jp = 0x80AA8BD0; //
D_80AA8BE4_jp = 0x80AA8BE4; //

// .text

func_80AA8C60_jp = 0x80AA8C60; // type:func
func_80AA8CF4_jp = 0x80AA8CF4; // type:func
func_80AA8D3C_jp = 0x80AA8D3C; // type:func
func_80AA8F50_jp = 0x80AA8F50; // type:func

// .data

D_80AA8F60_jp = 0x80AA8F60; //
D_80AA8F74_jp = 0x80AA8F74; //
D_80AA8FF0_jp = 0x80AA8FF0; //
D_80AA9060_jp = 0x80AA9060; //
D_80AA90D0_jp = 0x80AA90D0; //
D_80AA9140_jp = 0x80AA9140; //
D_80AA91B0_jp = 0x80AA91B0; //
D_80AA9220_jp = 0x80AA9220; //
D_80AA9290_jp = 0x80AA9290; //
D_80AA9300_jp = 0x80AA9300; //
D_80AA9370_jp = 0x80AA9370; //
D_80AA93E0_jp = 0x80AA93E0; //
D_80AA9450_jp = 0x80AA9450; //

// .text

func_80AA94C0_jp = 0x80AA94C0; // type:func
func_80AA9558_jp = 0x80AA9558; // type:func
func_80AA95A0_jp = 0x80AA95A0; // type:func
func_80AA96E8_jp = 0x80AA96E8; // type:func
func_80AA9708_jp = 0x80AA9708; // type:func
func_80AA9928_jp = 0x80AA9928; // type:func

// .data

D_80AA9940_jp = 0x80AA9940; //
D_80AA994C_jp = 0x80AA994C; //
D_80AA9960_jp = 0x80AA9960; //

// .rodata

RO_FLT_80AA99B0_jp = 0x80AA99B0; // type:f32

// .text

func_80AA9A10_jp = 0x80AA9A10; // type:func
func_80AA9AA8_jp = 0x80AA9AA8; // type:func
func_80AA9AF0_jp = 0x80AA9AF0; // type:func
func_80AA9C38_jp = 0x80AA9C38; // type:func
func_80AA9C58_jp = 0x80AA9C58; // type:func
func_80AA9E78_jp = 0x80AA9E78; // type:func

// .data

D_80AA9E90_jp = 0x80AA9E90; //
D_80AA9E9C_jp = 0x80AA9E9C; //
D_80AA9EB0_jp = 0x80AA9EB0; //

// .rodata

RO_FLT_80AA9F00_jp = 0x80AA9F00; // type:f32

// .data

D_80AA9F60_jp = 0x80AA9F60; //
D_80AA9FD0_jp = 0x80AA9FD0; //
D_80AAA040_jp = 0x80AAA040; //
D_80AAA0B0_jp = 0x80AAA0B0; //

// .text

func_80AAA120_jp = 0x80AAA120; // type:func
func_80AAA298_jp = 0x80AAA298; // type:func
func_80AAA2C4_jp = 0x80AAA2C4; // type:func
func_80AAA2F0_jp = 0x80AAA2F0; // type:func
func_80AAA31C_jp = 0x80AAA31C; // type:func
func_80AAA3FC_jp = 0x80AAA3FC; // type:func
func_80AAA438_jp = 0x80AAA438; // type:func
func_80AAA480_jp = 0x80AAA480; // type:func
func_80AAA4F8_jp = 0x80AAA4F8; // type:func
func_80AAA68C_jp = 0x80AAA68C; // type:func
func_80AAA6AC_jp = 0x80AAA6AC; // type:func
func_80AAA6DC_jp = 0x80AAA6DC; // type:func
func_80AAA744_jp = 0x80AAA744; // type:func
func_80AAA7B0_jp = 0x80AAA7B0; // type:func
func_80AAA7E0_jp = 0x80AAA7E0; // type:func
func_80AAA864_jp = 0x80AAA864; // type:func
func_80AAA8E0_jp = 0x80AAA8E0; // type:func
func_80AAA94C_jp = 0x80AAA94C; // type:func
func_80AAA9B4_jp = 0x80AAA9B4; // type:func
func_80AAAA64_jp = 0x80AAAA64; // type:func
func_80AAAA84_jp = 0x80AAAA84; // type:func
func_80AAAACC_jp = 0x80AAAACC; // type:func
func_80AAAB00_jp = 0x80AAAB00; // type:func
func_80AAAB78_jp = 0x80AAAB78; // type:func
func_80AAACD0_jp = 0x80AAACD0; // type:func

// .data

_0096A290_Profile = 0x80AAAD00; //
D_80AAAD24_jp = 0x80AAAD24; // type:u8
D_80AAAD28_jp = 0x80AAAD28; // type:u8
D_80AAAD2C_jp = 0x80AAAD2C; //
D_80AAAD48_jp = 0x80AAAD48; //
D_80AAAD5C_jp = 0x80AAAD5C; //
D_80AAAD6C_jp = 0x80AAAD6C; //
D_80AAAD74_jp = 0x80AAAD74; //
D_80AAAD7C_jp = 0x80AAAD7C; //

// .text

func_80AAAEA0_jp = 0x80AAAEA0; // type:func
func_80AAAEB0_jp = 0x80AAAEB0; // type:func
func_80AAAEEC_jp = 0x80AAAEEC; // type:func
func_80AAAF04_jp = 0x80AAAF04; // type:func

// .data

D_80AAAF20_jp = 0x80AAAF20; //
D_80AAAF34_jp = 0x80AAAF34; //

// .text

func_80AAAFB0_jp = 0x80AAAFB0; // type:func
func_80AAAFC0_jp = 0x80AAAFC0; // type:func
func_80AAAFFC_jp = 0x80AAAFFC; // type:func
func_80AAB014_jp = 0x80AAB014; // type:func

// .data

D_80AAB030_jp = 0x80AAB030; //
D_80AAB044_jp = 0x80AAB044; //

// .text

func_80AAB0C0_jp = 0x80AAB0C0; // type:func
func_80AAB0D0_jp = 0x80AAB0D0; // type:func
func_80AAB10C_jp = 0x80AAB10C; // type:func
func_80AAB124_jp = 0x80AAB124; // type:func

// .data

D_80AAB140_jp = 0x80AAB140; //
D_80AAB154_jp = 0x80AAB154; //

// .text

func_80AAB1D0_jp = 0x80AAB1D0; // type:func

// .data

D_80AAB280_jp = 0x80AAB280; //
D_80AAB294_jp = 0x80AAB294; //

// .text

func_80AAB300_jp = 0x80AAB300; // type:func
func_80AAB3D0_jp = 0x80AAB3D0; // type:func
func_80AAB488_jp = 0x80AAB488; // type:func
func_80AAB60C_jp = 0x80AAB60C; // type:func
func_80AAB81C_jp = 0x80AAB81C; // type:func
func_80AAB840_jp = 0x80AAB840; // type:func
func_80AAB894_jp = 0x80AAB894; // type:func
func_80AAB8D8_jp = 0x80AAB8D8; // type:func
func_80AAB918_jp = 0x80AAB918; // type:func
func_80AAB9C8_jp = 0x80AAB9C8; // type:func
func_80AABA50_jp = 0x80AABA50; // type:func
func_80AABAB8_jp = 0x80AABAB8; // type:func
func_80AABAD8_jp = 0x80AABAD8; // type:func
func_80AABEB0_jp = 0x80AABEB0; // type:func

// .data

_0096B470_Profile = 0x80AAC060; //
D_80AAC084_jp = 0x80AAC084; //
D_80AAC098_jp = 0x80AAC098; //
D_80AAC0AC_jp = 0x80AAC0AC; //
D_80AAC0B4_jp = 0x80AAC0B4; //
D_80AAC0D0_jp = 0x80AAC0D0; //
D_FLT_80AAC0D8_jp = 0x80AAC0D8; // type:f32
D_FLT_80AAC0E0_jp = 0x80AAC0E0; // type:f32
D_80AAC0E8_jp = 0x80AAC0E8; //
D_80AAC0F0_jp = 0x80AAC0F0; //
D_80AAC100_jp = 0x80AAC100; //
D_80AAC108_jp = 0x80AAC108; // type:u8
D_80AAC109_jp = 0x80AAC109; // type:u8
D_80AAC10A_jp = 0x80AAC10A; // type:s8
D_80AAC10B_jp = 0x80AAC10B; // type:s8

// .rodata

RO_STR_80AAC110_jp = 0x80AAC110; // type:asciz
RO_STR_80AAC128_jp = 0x80AAC128; // type:asciz

// .text

func_80AAC230_jp = 0x80AAC230; // type:func
func_80AAC3A8_jp = 0x80AAC3A8; // type:func
func_80AAC3D4_jp = 0x80AAC3D4; // type:func
func_80AAC400_jp = 0x80AAC400; // type:func
func_80AAC42C_jp = 0x80AAC42C; // type:func
func_80AAC458_jp = 0x80AAC458; // type:func
func_80AAC470_jp = 0x80AAC470; // type:func
func_80AAC4B8_jp = 0x80AAC4B8; // type:func
func_80AAC574_jp = 0x80AAC574; // type:func
func_80AAC5B8_jp = 0x80AAC5B8; // type:func
func_80AAC5D4_jp = 0x80AAC5D4; // type:func
func_80AAC604_jp = 0x80AAC604; // type:func
func_80AAC648_jp = 0x80AAC648; // type:func
func_80AAC6B4_jp = 0x80AAC6B4; // type:func
func_80AAC6E4_jp = 0x80AAC6E4; // type:func
func_80AAC76C_jp = 0x80AAC76C; // type:func
func_80AAC7EC_jp = 0x80AAC7EC; // type:func
func_80AAC860_jp = 0x80AAC860; // type:func
func_80AAC880_jp = 0x80AAC880; // type:func
func_80AAC8BC_jp = 0x80AAC8BC; // type:func
func_80AAC8F0_jp = 0x80AAC8F0; // type:func
func_80AAC938_jp = 0x80AAC938; // type:func
func_80AAC9A8_jp = 0x80AAC9A8; // type:func

// .data

_0096C3A0_Profile = 0x80AAC9E0; //
D_80AACA04_jp = 0x80AACA04; // type:u8
D_80AACA08_jp = 0x80AACA08; // type:u8
D_80AACA0C_jp = 0x80AACA0C; //
D_80AACA28_jp = 0x80AACA28; // type:s16
D_80AACA30_jp = 0x80AACA30; // type:s16
D_80AACA38_jp = 0x80AACA38; // type:u8
D_80AACA3C_jp = 0x80AACA3C; //
D_80AACA4C_jp = 0x80AACA4C; //
D_80AACA54_jp = 0x80AACA54; //
D_80AACA5C_jp = 0x80AACA5C; //
D_80AACA6C_jp = 0x80AACA6C; //

// .text

func_80AACB80_jp = 0x80AACB80; // type:func
func_80AACC9C_jp = 0x80AACC9C; // type:func
func_80AACCC0_jp = 0x80AACCC0; // type:func
func_80AACD08_jp = 0x80AACD08; // type:func
func_80AACD34_jp = 0x80AACD34; // type:func
func_80AACDD0_jp = 0x80AACDD0; // type:func
func_80AACE50_jp = 0x80AACE50; // type:func
func_80AACE60_jp = 0x80AACE60; // type:func
func_80AACED4_jp = 0x80AACED4; // type:func
func_80AACF1C_jp = 0x80AACF1C; // type:func
func_80AACF5C_jp = 0x80AACF5C; // type:func
func_80AACFC8_jp = 0x80AACFC8; // type:func
func_80AAD010_jp = 0x80AAD010; // type:func

// .data

_0096CCF0_Profile = 0x80AAD040; //
D_80AAD064_jp = 0x80AAD064; //

// .text

func_80AAD0E0_jp = 0x80AAD0E0; // type:func
func_80AAD230_jp = 0x80AAD230; // type:func
func_80AAD270_jp = 0x80AAD270; // type:func
func_80AAD490_jp = 0x80AAD490; // type:func
func_80AAD4A0_jp = 0x80AAD4A0; // type:func
func_80AAD4DC_jp = 0x80AAD4DC; // type:func
func_80AAD580_jp = 0x80AAD580; // type:func
func_80AAD5A4_jp = 0x80AAD5A4; // type:func
func_80AADB9C_jp = 0x80AADB9C; // type:func
func_80AADDA8_jp = 0x80AADDA8; // type:func
func_80AADEC4_jp = 0x80AADEC4; // type:func
func_80AADF10_jp = 0x80AADF10; // type:func
func_80AADF9C_jp = 0x80AADF9C; // type:func
func_80AAE10C_jp = 0x80AAE10C; // type:func
func_80AAE198_jp = 0x80AAE198; // type:func

// .data

_0096D250_Profile = 0x80AAE4B0; //
D_80AAE4D4_jp = 0x80AAE4D4; //
D_80AAE4E0_jp = 0x80AAE4E0; //
D_80AAE520_jp = 0x80AAE520; //
D_FLT_80AAE580_jp = 0x80AAE580; // type:f32
D_FLT_80AAE588_jp = 0x80AAE588; // type:f32
D_80AAE5E0_jp = 0x80AAE5E0; // type:u8
D_80AAE5F4_jp = 0x80AAE5F4; // type:u8
D_80AAE608_jp = 0x80AAE608; // type:s16
D_80AAE614_jp = 0x80AAE614; //
D_80AAE624_jp = 0x80AAE624; //
D_80AAE634_jp = 0x80AAE634; //

// .rodata

RO_FLT_80AAE640_jp = 0x80AAE640; // type:f32
RO_FLT_80AAE644_jp = 0x80AAE644; // type:f32
RO_FLT_80AAE648_jp = 0x80AAE648; // type:f32
RO_FLT_80AAE64C_jp = 0x80AAE64C; // type:f32
RO_FLT_80AAE650_jp = 0x80AAE650; // type:f32
RO_FLT_80AAE654_jp = 0x80AAE654; // type:f32

// .text

func_80AAE770_jp = 0x80AAE770; // type:func
func_80AAE780_jp = 0x80AAE780; // type:func
func_80AAE7BC_jp = 0x80AAE7BC; // type:func
func_80AAE7D4_jp = 0x80AAE7D4; // type:func

// .data

D_80AAE7F0_jp = 0x80AAE7F0; //
D_80AAE804_jp = 0x80AAE804; //

// .text

func_80AAE880_jp = 0x80AAE880; // type:func

// .bss

B_80AAE990_jp = 0x80AAE990; //
D_80AAE9A0_jp = 0x80AAE9A0; //

// .text

func_80AAE9C0_jp = 0x80AAE9C0; // type:func
func_80AAEA4C_jp = 0x80AAEA4C; // type:func
func_80AAEA70_jp = 0x80AAEA70; // type:func
func_80AAEA9C_jp = 0x80AAEA9C; // type:func
func_80AAEAC8_jp = 0x80AAEAC8; // type:func
func_80AAEB64_jp = 0x80AAEB64; // type:func
func_80AAEB90_jp = 0x80AAEB90; // type:func
func_80AAEBB0_jp = 0x80AAEBB0; // type:func
func_80AAEC10_jp = 0x80AAEC10; // type:func
func_80AAEC5C_jp = 0x80AAEC5C; // type:func
func_80AAECBC_jp = 0x80AAECBC; // type:func
func_80AAED08_jp = 0x80AAED08; // type:func
func_80AAED48_jp = 0x80AAED48; // type:func
func_80AAEDC4_jp = 0x80AAEDC4; // type:func
func_80AAEE04_jp = 0x80AAEE04; // type:func
func_80AAEE30_jp = 0x80AAEE30; // type:func
func_80AAEE68_jp = 0x80AAEE68; // type:func
func_80AAEEA8_jp = 0x80AAEEA8; // type:func
func_80AAEF48_jp = 0x80AAEF48; // type:func
func_80AAEF90_jp = 0x80AAEF90; // type:func
func_80AAEFD0_jp = 0x80AAEFD0; // type:func
func_80AAF03C_jp = 0x80AAF03C; // type:func
func_80AAF084_jp = 0x80AAF084; // type:func

// .data

_0096EB20_Profile = 0x80AAF0B0; //
D_80AAF0D4_jp = 0x80AAF0D4; //
D_80AAF0F0_jp = 0x80AAF0F0; //
D_80AAF0F4_jp = 0x80AAF0F4; //
D_80AAF0FC_jp = 0x80AAF0FC; //
D_80AAF104_jp = 0x80AAF104; // type:u8
D_80AAF114_jp = 0x80AAF114; //
D_80AAF118_jp = 0x80AAF118; //
D_80AAF124_jp = 0x80AAF124; //
D_80AAF200_jp = 0x80AAF200; //
D_80AAF270_jp = 0x80AAF270; //
D_80AAF2E0_jp = 0x80AAF2E0; //
D_80AAF350_jp = 0x80AAF350; //
D_80AAF3C0_jp = 0x80AAF3C0; //
D_80AAF430_jp = 0x80AAF430; //

// .text

func_80AAF4A0_jp = 0x80AAF4A0; // type:func
func_80AAF4B0_jp = 0x80AAF4B0; // type:func
func_80AAF578_jp = 0x80AAF578; // type:func
func_80AAF854_jp = 0x80AAF854; // type:func

// .data

D_80AAF870_jp = 0x80AAF870; //
D_80AAF8E8_jp = 0x80AAF8E8; //
D_80AAF8FC_jp = 0x80AAF8FC; //

// .text

func_80AAF980_jp = 0x80AAF980; // type:func
func_80AAFA14_jp = 0x80AAFA14; // type:func
func_80AAFA5C_jp = 0x80AAFA5C; // type:func
func_80AAFC70_jp = 0x80AAFC70; // type:func

// .data

D_80AAFC80_jp = 0x80AAFC80; //
D_80AAFC94_jp = 0x80AAFC94; //

// .text

func_80AAFD10_jp = 0x80AAFD10; // type:func
func_80AAFDA4_jp = 0x80AAFDA4; // type:func
func_80AAFDEC_jp = 0x80AAFDEC; // type:func
func_80AB0000_jp = 0x80AB0000; // type:func

// .data

D_80AB0010_jp = 0x80AB0010; //
D_80AB0024_jp = 0x80AB0024; //

// .text

func_80AB00A0_jp = 0x80AB00A0; // type:func
func_80AB033C_jp = 0x80AB033C; // type:func
func_80AB0370_jp = 0x80AB0370; // type:func
func_80AB055C_jp = 0x80AB055C; // type:func
func_80AB05F4_jp = 0x80AB05F4; // type:func
func_80AB0628_jp = 0x80AB0628; // type:func

// .data

D_80AB0640_jp = 0x80AB0640; //
D_80AB064C_jp = 0x80AB064C; //
D_80AB0660_jp = 0x80AB0660; //

// .rodata

RO_FLT_80AB06B0_jp = 0x80AB06B0; // type:f32
RO_FLT_80AB06B4_jp = 0x80AB06B4; // type:f32
RO_FLT_80AB06B8_jp = 0x80AB06B8; // type:f32

// .text

func_80AB0720_jp = 0x80AB0720; // type:func
func_80AB0730_jp = 0x80AB0730; // type:func
func_80AB0740_jp = 0x80AB0740; // type:func
func_80AB0750_jp = 0x80AB0750; // type:func

// .data

_00970880_Profile = 0x80AB0760; //

// .text

func_80AB07C0_jp = 0x80AB07C0; // type:func
func_80AB07E0_jp = 0x80AB07E0; // type:func
func_80AB07F4_jp = 0x80AB07F4; // type:func
func_80AB0810_jp = 0x80AB0810; // type:func
func_80AB08EC_jp = 0x80AB08EC; // type:func
func_80AB0970_jp = 0x80AB0970; // type:func
func_80AB09EC_jp = 0x80AB09EC; // type:func
func_80AB0A3C_jp = 0x80AB0A3C; // type:func
func_80AB0A90_jp = 0x80AB0A90; // type:func
func_80AB0AC4_jp = 0x80AB0AC4; // type:func
func_80AB0AF8_jp = 0x80AB0AF8; // type:func
func_80AB0B28_jp = 0x80AB0B28; // type:func
func_80AB0B58_jp = 0x80AB0B58; // type:func
func_80AB0E54_jp = 0x80AB0E54; // type:func
func_80AB0E78_jp = 0x80AB0E78; // type:func
func_80AB0E9C_jp = 0x80AB0E9C; // type:func
func_80AB0EC0_jp = 0x80AB0EC0; // type:func
func_80AB0EE4_jp = 0x80AB0EE4; // type:func
func_80AB0F08_jp = 0x80AB0F08; // type:func
func_80AB0F2C_jp = 0x80AB0F2C; // type:func
func_80AB0F6C_jp = 0x80AB0F6C; // type:func
func_80AB0FA8_jp = 0x80AB0FA8; // type:func
func_80AB106C_jp = 0x80AB106C; // type:func
func_80AB10D0_jp = 0x80AB10D0; // type:func
func_80AB1240_jp = 0x80AB1240; // type:func
func_80AB1264_jp = 0x80AB1264; // type:func
func_80AB1334_jp = 0x80AB1334; // type:func
func_80AB1398_jp = 0x80AB1398; // type:func
func_80AB13C4_jp = 0x80AB13C4; // type:func
func_80AB13F0_jp = 0x80AB13F0; // type:func
func_80AB142C_jp = 0x80AB142C; // type:func
func_80AB1468_jp = 0x80AB1468; // type:func
func_80AB14A4_jp = 0x80AB14A4; // type:func
func_80AB150C_jp = 0x80AB150C; // type:func
func_80AB153C_jp = 0x80AB153C; // type:func
func_80AB1574_jp = 0x80AB1574; // type:func
func_80AB1680_jp = 0x80AB1680; // type:func
func_80AB16F4_jp = 0x80AB16F4; // type:func
func_80AB1800_jp = 0x80AB1800; // type:func
func_80AB18D0_jp = 0x80AB18D0; // type:func
func_80AB19D4_jp = 0x80AB19D4; // type:func
func_80AB1A88_jp = 0x80AB1A88; // type:func
func_80AB1AA4_jp = 0x80AB1AA4; // type:func
func_80AB1B4C_jp = 0x80AB1B4C; // type:func
func_80AB1C60_jp = 0x80AB1C60; // type:func
func_80AB1DCC_jp = 0x80AB1DCC; // type:func
func_80AB1F00_jp = 0x80AB1F00; // type:func
func_80AB2014_jp = 0x80AB2014; // type:func
func_80AB218C_jp = 0x80AB218C; // type:func
func_80AB2210_jp = 0x80AB2210; // type:func
func_80AB2314_jp = 0x80AB2314; // type:func
func_80AB23F4_jp = 0x80AB23F4; // type:func
func_80AB248C_jp = 0x80AB248C; // type:func
func_80AB2510_jp = 0x80AB2510; // type:func
func_80AB2958_jp = 0x80AB2958; // type:func
func_80AB2C6C_jp = 0x80AB2C6C; // type:func
func_80AB2CE8_jp = 0x80AB2CE8; // type:func
func_80AB2D6C_jp = 0x80AB2D6C; // type:func
func_80AB2DE4_jp = 0x80AB2DE4; // type:func
func_80AB2FD8_jp = 0x80AB2FD8; // type:func
func_80AB31E0_jp = 0x80AB31E0; // type:func
func_80AB327C_jp = 0x80AB327C; // type:func
func_80AB3370_jp = 0x80AB3370; // type:func
func_80AB34EC_jp = 0x80AB34EC; // type:func
func_80AB3520_jp = 0x80AB3520; // type:func
func_80AB3584_jp = 0x80AB3584; // type:func
func_80AB35C4_jp = 0x80AB35C4; // type:func
func_80AB3604_jp = 0x80AB3604; // type:func
func_80AB3630_jp = 0x80AB3630; // type:func
func_80AB3654_jp = 0x80AB3654; // type:func
func_80AB3678_jp = 0x80AB3678; // type:func
func_80AB36A4_jp = 0x80AB36A4; // type:func
func_80AB3774_jp = 0x80AB3774; // type:func
func_80AB3884_jp = 0x80AB3884; // type:func
func_80AB391C_jp = 0x80AB391C; // type:func
func_80AB3A74_jp = 0x80AB3A74; // type:func
func_80AB3BF4_jp = 0x80AB3BF4; // type:func
func_80AB3D30_jp = 0x80AB3D30; // type:func
func_80AB3D64_jp = 0x80AB3D64; // type:func
func_80AB3F20_jp = 0x80AB3F20; // type:func
func_80AB40A8_jp = 0x80AB40A8; // type:func
func_80AB40F0_jp = 0x80AB40F0; // type:func
func_80AB41FC_jp = 0x80AB41FC; // type:func
func_80AB4328_jp = 0x80AB4328; // type:func
func_80AB43CC_jp = 0x80AB43CC; // type:func
func_80AB44A0_jp = 0x80AB44A0; // type:func
func_80AB44EC_jp = 0x80AB44EC; // type:func
func_80AB457C_jp = 0x80AB457C; // type:func
func_80AB4674_jp = 0x80AB4674; // type:func
func_80AB4754_jp = 0x80AB4754; // type:func
func_80AB47D8_jp = 0x80AB47D8; // type:func
func_80AB4988_jp = 0x80AB4988; // type:func
func_80AB4B90_jp = 0x80AB4B90; // type:func
func_80AB4DE4_jp = 0x80AB4DE4; // type:func
func_80AB4E9C_jp = 0x80AB4E9C; // type:func
func_80AB4F1C_jp = 0x80AB4F1C; // type:func

// .data

D_80AB51D0_jp = 0x80AB51D0; // type:s8
D_80AB51F8_jp = 0x80AB51F8; //
D_80AB5208_jp = 0x80AB5208; //
D_80AB5224_jp = 0x80AB5224; // type:u16
D_80AB523C_jp = 0x80AB523C; //
D_80AB5248_jp = 0x80AB5248; //
D_80AB5254_jp = 0x80AB5254; //
D_80AB5274_jp = 0x80AB5274; //
D_80AB529C_jp = 0x80AB529C; //
D_80AB52A8_jp = 0x80AB52A8; //
D_80AB52B4_jp = 0x80AB52B4; //
D_80AB52DC_jp = 0x80AB52DC; //
D_80AB52E4_jp = 0x80AB52E4; //
D_80AB530C_jp = 0x80AB530C; //
D_80AB5318_jp = 0x80AB5318; //
D_80AB5324_jp = 0x80AB5324; //
D_80AB5330_jp = 0x80AB5330; //

// .bss

B_80AB5340_jp = 0x80AB5340; //
B_80AB5360_jp = 0x80AB5360; // type:u8
B_80AB5380_jp = 0x80AB5380; // type:u8
B_80AB53A0_jp = 0x80AB53A0; //
